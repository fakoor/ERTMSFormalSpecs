//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFSServiceClient.EFSService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFSServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
    [System.SerializableAttribute()]
    public partial class EFSServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EFSServiceFault InnerReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EFSServiceFault InnerReason {
            get {
                return this.InnerReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerReasonField, value) != true)) {
                    this.InnerReasonField = value;
                    this.RaisePropertyChanged("InnerReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Value", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StructureValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FunctionValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IntValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DoubleValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ListValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BoolValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StringValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StateValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EnumValue))]
    public partial class Value : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructureValue", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class StructureValue : Value {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, Value> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, Value> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunctionValue", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class FunctionValue : Value {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Segment[] SegmentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Segment[] Segments {
            get {
                return this.SegmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentsField, value) != true)) {
                    this.SegmentsField = value;
                    this.RaisePropertyChanged("Segments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntValue", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class IntValue : Value {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoubleValue", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class DoubleValue : Value {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListValue", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class ListValue : Value {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Value[] ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Value[] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoolValue", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class BoolValue : Value {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringValue", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class StringValue : Value {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateValue", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class StateValue : Value {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumValue", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class EnumValue : Value {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Segment", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface.Values")]
    [System.SerializableAttribute()]
    public partial class Segment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double D0Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double V0Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double A {
            get {
                return this.AField;
            }
            set {
                if ((this.AField.Equals(value) != true)) {
                    this.AField = value;
                    this.RaisePropertyChanged("A");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double D0 {
            get {
                return this.D0Field;
            }
            set {
                if ((this.D0Field.Equals(value) != true)) {
                    this.D0Field = value;
                    this.RaisePropertyChanged("D0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double V0 {
            get {
                return this.V0Field;
            }
            set {
                if ((this.V0Field.Equals(value) != true)) {
                    this.V0Field = value;
                    this.RaisePropertyChanged("V0");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Step", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
    public enum Step : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verification = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateInternal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Process = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateOutput = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CleanUp = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EFSService.IEFSService")]
    public interface IEFSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/ConnectUsingDefaultValues", ReplyAction="http://tempuri.org/IEFSService/ConnectUsingDefaultValuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EFSServiceFault), Action="http://tempuri.org/IEFSService/ConnectUsingDefaultValuesEFSServiceFaultFault", Name="EFSServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
        int ConnectUsingDefaultValues(bool listener);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/ConnectUsingDefaultValues", ReplyAction="http://tempuri.org/IEFSService/ConnectUsingDefaultValuesResponse")]
        System.Threading.Tasks.Task<int> ConnectUsingDefaultValuesAsync(bool listener);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Connect", ReplyAction="http://tempuri.org/IEFSService/ConnectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EFSServiceFault), Action="http://tempuri.org/IEFSService/ConnectEFSServiceFaultFault", Name="EFSServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
        int Connect(bool listener, bool explain, bool logEvents, int keepEventCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Connect", ReplyAction="http://tempuri.org/IEFSService/ConnectResponse")]
        System.Threading.Tasks.Task<int> ConnectAsync(bool listener, bool explain, bool logEvents, int keepEventCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/GetVariableValue", ReplyAction="http://tempuri.org/IEFSService/GetVariableValueResponse")]
        Value GetVariableValue(string variableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/GetVariableValue", ReplyAction="http://tempuri.org/IEFSService/GetVariableValueResponse")]
        System.Threading.Tasks.Task<Value> GetVariableValueAsync(string variableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/GetExpressionValue", ReplyAction="http://tempuri.org/IEFSService/GetExpressionValueResponse")]
        Value GetExpressionValue(string expression);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/GetExpressionValue", ReplyAction="http://tempuri.org/IEFSService/GetExpressionValueResponse")]
        System.Threading.Tasks.Task<Value> GetExpressionValueAsync(string expression);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/SetVariableValue", ReplyAction="http://tempuri.org/IEFSService/SetVariableValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EFSServiceFault), Action="http://tempuri.org/IEFSService/SetVariableValueEFSServiceFaultFault", Name="EFSServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
        void SetVariableValue(string variableName, Value value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/SetVariableValue", ReplyAction="http://tempuri.org/IEFSService/SetVariableValueResponse")]
        System.Threading.Tasks.Task SetVariableValueAsync(string variableName, Value value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/ApplyStatement", ReplyAction="http://tempuri.org/IEFSService/ApplyStatementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EFSServiceFault), Action="http://tempuri.org/IEFSService/ApplyStatementEFSServiceFaultFault", Name="EFSServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
        void ApplyStatement(string statement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/ApplyStatement", ReplyAction="http://tempuri.org/IEFSService/ApplyStatementResponse")]
        System.Threading.Tasks.Task ApplyStatementAsync(string statement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Cycle", ReplyAction="http://tempuri.org/IEFSService/CycleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EFSServiceFault), Action="http://tempuri.org/IEFSService/CycleEFSServiceFaultFault", Name="EFSServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
        bool Cycle(int clientId, Step step);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Cycle", ReplyAction="http://tempuri.org/IEFSService/CycleResponse")]
        System.Threading.Tasks.Task<bool> CycleAsync(int clientId, Step step);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Suspend", ReplyAction="http://tempuri.org/IEFSService/SuspendResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EFSServiceFault), Action="http://tempuri.org/IEFSService/SuspendEFSServiceFaultFault", Name="EFSServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
        void Suspend(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Suspend", ReplyAction="http://tempuri.org/IEFSService/SuspendResponse")]
        System.Threading.Tasks.Task SuspendAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Awake", ReplyAction="http://tempuri.org/IEFSService/AwakeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EFSServiceFault), Action="http://tempuri.org/IEFSService/AwakeEFSServiceFaultFault", Name="EFSServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
        void Awake(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Awake", ReplyAction="http://tempuri.org/IEFSService/AwakeResponse")]
        System.Threading.Tasks.Task AwakeAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Restart", ReplyAction="http://tempuri.org/IEFSService/RestartResponse")]
        void Restart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Restart", ReplyAction="http://tempuri.org/IEFSService/RestartResponse")]
        System.Threading.Tasks.Task RestartAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Load", ReplyAction="http://tempuri.org/IEFSService/LoadResponse")]
        void Load(string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Load", ReplyAction="http://tempuri.org/IEFSService/LoadResponse")]
        System.Threading.Tasks.Task LoadAsync(string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Stop", ReplyAction="http://tempuri.org/IEFSService/StopResponse")]
        void Stop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Stop", ReplyAction="http://tempuri.org/IEFSService/StopResponse")]
        System.Threading.Tasks.Task StopAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Close", ReplyAction="http://tempuri.org/IEFSService/CloseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EFSServiceFault), Action="http://tempuri.org/IEFSService/CloseEFSServiceFaultFault", Name="EFSServiceFault", Namespace="http://schemas.datacontract.org/2004/07/GUI.IPCInterface")]
        void Close(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Close", ReplyAction="http://tempuri.org/IEFSService/CloseResponse")]
        System.Threading.Tasks.Task CloseAsync(int clientId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEFSServiceChannel : IEFSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EFSServiceClient : System.ServiceModel.ClientBase<IEFSService>, IEFSService {
        
        public EFSServiceClient() {
        }
        
        public EFSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EFSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EFSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EFSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int ConnectUsingDefaultValues(bool listener) {
            return base.Channel.ConnectUsingDefaultValues(listener);
        }
        
        public System.Threading.Tasks.Task<int> ConnectUsingDefaultValuesAsync(bool listener) {
            return base.Channel.ConnectUsingDefaultValuesAsync(listener);
        }
        
        public int Connect(bool listener, bool explain, bool logEvents, int keepEventCount) {
            return base.Channel.Connect(listener, explain, logEvents, keepEventCount);
        }
        
        public System.Threading.Tasks.Task<int> ConnectAsync(bool listener, bool explain, bool logEvents, int keepEventCount) {
            return base.Channel.ConnectAsync(listener, explain, logEvents, keepEventCount);
        }
        
        public Value GetVariableValue(string variableName) {
            return base.Channel.GetVariableValue(variableName);
        }
        
        public System.Threading.Tasks.Task<Value> GetVariableValueAsync(string variableName) {
            return base.Channel.GetVariableValueAsync(variableName);
        }
        
        public Value GetExpressionValue(string expression) {
            return base.Channel.GetExpressionValue(expression);
        }
        
        public System.Threading.Tasks.Task<Value> GetExpressionValueAsync(string expression) {
            return base.Channel.GetExpressionValueAsync(expression);
        }
        
        public void SetVariableValue(string variableName, Value value) {
            base.Channel.SetVariableValue(variableName, value);
        }
        
        public System.Threading.Tasks.Task SetVariableValueAsync(string variableName, Value value) {
            return base.Channel.SetVariableValueAsync(variableName, value);
        }
        
        public void ApplyStatement(string statement) {
            base.Channel.ApplyStatement(statement);
        }
        
        public System.Threading.Tasks.Task ApplyStatementAsync(string statement) {
            return base.Channel.ApplyStatementAsync(statement);
        }
        
        public bool Cycle(int clientId, Step step) {
            return base.Channel.Cycle(clientId, step);
        }
        
        public System.Threading.Tasks.Task<bool> CycleAsync(int clientId, Step step) {
            return base.Channel.CycleAsync(clientId, step);
        }
        
        public void Suspend(int clientId) {
            base.Channel.Suspend(clientId);
        }
        
        public System.Threading.Tasks.Task SuspendAsync(int clientId) {
            return base.Channel.SuspendAsync(clientId);
        }
        
        public void Awake(int clientId) {
            base.Channel.Awake(clientId);
        }
        
        public System.Threading.Tasks.Task AwakeAsync(int clientId) {
            return base.Channel.AwakeAsync(clientId);
        }
        
        public void Restart() {
            base.Channel.Restart();
        }
        
        public System.Threading.Tasks.Task RestartAsync() {
            return base.Channel.RestartAsync();
        }
        
        public void Load(string filename) {
            base.Channel.Load(filename);
        }
        
        public System.Threading.Tasks.Task LoadAsync(string filename) {
            return base.Channel.LoadAsync(filename);
        }
        
        public void Stop() {
            base.Channel.Stop();
        }
        
        public System.Threading.Tasks.Task StopAsync() {
            return base.Channel.StopAsync();
        }
        
        public void Close(int clientId) {
            base.Channel.Close(clientId);
        }
        
        public System.Threading.Tasks.Task CloseAsync(int clientId) {
            return base.Channel.CloseAsync(clientId);
        }
    }
}
