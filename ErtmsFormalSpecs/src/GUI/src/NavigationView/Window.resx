<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SIEAAAAASUVORK5CYII=
</value>
  </data>
</root>