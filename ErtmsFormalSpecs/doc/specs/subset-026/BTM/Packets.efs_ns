<NameSpace
 X="40"
 Y="20"
 Width="100"
 Height="50"
 Name="Packets"
 Guid="a3a09cf2-49aa-4205-8e92-aca81ed58b5d"
>
<Comment>Procedures for handling individual packets and functions for identifying received packets in a BG message.</Comment>
<NameSpaces>
</NameSpaces>
<Functions>
<Function
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Message"
 Default=""
 X="20"
 Y="130"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ProvideRevAreaPacketToHandle"
 Guid="849bf35a-7622-45ba-bf86-281e2aa818a0"
>
<Comment>Given a Reversing Area Information packet, returns this packet if it is available and can be handled and returns EMPTY otherwise.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Message"
 Name="aPacket"
 Guid="2c53e7e1-aaef-4da0-b23f-81b73f52cb3d"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="73c3d6e3-046f-425f-86c1-bde46a971a87"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is available"
 Guid="8e78f827-b5c7-491a-8b00-32731ca2f936"
>
<PreConditions>
<PreCondition
 Guid="7f2f5be6-a2f3-4bc4-a457-ebe771773c8c"
>RevAreaPacketAvailable(
    aPacket =&gt; aPacket,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition></PreConditions>
<Expression>aPacket</Expression>
</Case><Case
 Name="Otherwise"
 Guid="c25c99d4-9ae0-4d79-9ad3-0f4ce1a17553"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Message"
 Default=""
 X="240"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ProvideRevSupPacketToHandle"
 Guid="becae289-1edb-41fe-babe-b5f1e1e06ed1"
>
<Comment>Given a Reversing Supervision Information packet, returns this packet if it is available and can be handled and returns EMPTY otherwise.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Message"
 Name="aPacket"
 Guid="4f1e17e0-eacf-4d74-84a6-711f77b5748a"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="08aa4c85-c5a5-4ff3-b0f1-5df9db94c1d5"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is available"
 Guid="23e02682-1557-4ae3-8164-1c8268cf06ed"
>
<PreConditions>
<PreCondition
 Guid="786ceabc-42e9-40a6-b5d9-f055f8ebd612"
>RevSupPacketAvailable(
    aPacket =&gt; aPacket,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition></PreConditions>
<Expression>aPacket</Expression>
</Case><Case
 Name="Otherwise"
 Guid="a179ccb3-80cd-4f31-bd09-739522d2dc78"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="350"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RevAreaPacketAvailable"
 Guid="e1c305f1-2233-4bdd-b0a7-f7220d350f40"
>
<Comment>Indicates whether a Reversing Area Information packet is available.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Message"
 Name="aPacket"
 Guid="91b32c95-09fc-462c-8c90-3e708016c9f6"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="1320b56c-5533-4c1b-8cf5-5fbb918b23d6"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is not empty"
 Guid="5f593ccb-9b54-4fd9-a6ce-83aa65678fc8"
>
<PreConditions>
<PreCondition
 Guid="e14e7585-37e2-4bea-adeb-fcf857a7fdac"
>aPacket != EMPTY</PreCondition></PreConditions>
<Expression>ConsiderBTMPacket (
    PacketOrientation =&gt; aPacket.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)
  AND
Kernel.AcceptInformation.ReversingAreaInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="128113f1-00a9-4011-b2d9-031940921a40"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="350"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RevSupPacketAvailable"
 Guid="2d41eb1a-3aca-4e2c-aa04-117a1ba896ae"
>
<Comment>Indicates whether a Reversing Supervision Information packet is available.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Message"
 Name="aPacket"
 Guid="43232690-9816-4ca1-947c-dfb3ba7c55d3"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="ec0a83cf-adf6-40fa-ac32-39092c86462f"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is not empty"
 Guid="d7b4d836-06d2-49c7-b877-e0c9518838d7"
>
<PreConditions>
<PreCondition
 Guid="aea590da-9233-4091-bdaa-7e129f1a1909"
>aPacket != EMPTY</PreCondition></PreConditions>
<Expression>ConsiderBTMPacket (
    PacketOrientation =&gt; aPacket.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)
  AND
Kernel.AcceptInformation.ReversingSupervisionInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="6d166964-7ab0-476a-af1d-63ddca1fcd88"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.SubStructure1"
 Default=""
 X="20"
 Y="70"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ModeProfileOfTelegram"
 Guid="56402f8b-c1d4-41d4-af27-16d374cf98af"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="890e771b-b580-439d-8c68-c8f2fdc19879"
>
</ReqRef><Comment>Provides the mode profile sent in the balise telegram, if any.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="aTelegram"
 Guid="364edc85-1964-448c-91cc-e4750682c605"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="c37b381a-04e7-4dc2-ba26-6fd4c86d5d81"
>
<Expression>FIRST X IN aTelegram.Sequence1 | X.TRACK_TO_TRAIN.MODE_PROFILE  != EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.SubStructure1"
 Default=""
 X="240"
 Y="70"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="MAOfTelegram"
 Guid="93fca8b1-bdc9-42c4-ae84-3f961d540f93"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="05e60619-cf07-4bf6-b3e5-894ac1958f33"
>
</ReqRef><Comment>Provides the movement authority sent in the balise telegram, if any.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="aTelegram"
 Guid="c6038b4e-df19-4246-a1cd-61f2ace4a7c1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="4ee689aa-f596-4543-b312-4d096e591647"
>
<Expression>FIRST X IN aTelegram.Sequence1 | X.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY  != EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.SubStructure1"
 Default=""
 X="130"
 Y="70"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LevelOfTelegram"
 Guid="47d1ae3c-f078-4b9c-8546-ec99aa2eb7fe"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="b9ad9e1d-af84-4050-911d-da61b6a7dab1"
>
</ReqRef><ReqRef
 Id="b5196e2e-7094-49d5-ac1b-4bcf4821fd9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bfa8324f-35b7-4d34-be47-4b566324a022"
>
</ReqRef><Comment>Provides the movement authority sent in the balise telegram, if any.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="aTelegram"
 Guid="606dcfbd-d473-4366-b518-8f62001ac86d"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="acfb6c3c-937f-4a13-ba33-761f58569317"
>
<Expression>FIRST X IN aTelegram.Sequence1 | X.TRACK_TO_TRAIN.LEVEL_TRANSITION_ORDER != EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="20"
 Y="10"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsiderBTMPacket"
 Guid="dd01bcbc-e748-427d-a352-41a5eff3f636"
>
<ReqRef
 Id="84a3e716-7b2f-4eb0-93b4-872e90faf619"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="677c3283-928f-487a-b70b-5d93061ef40b"
>
</ReqRef><ReqRef
 Id="1918ec5c-54a5-4240-8cd2-5f860383b37c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="760f2b91-f167-4914-976b-34e4434be317"
>
</ReqRef><ReqRef
 Id="8cde1181-2190-4ab0-bba8-82047564e48b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44aebfce-d0ba-417c-854a-97eca234c442"
>
</ReqRef><ReqRef
 Id="b0c8610c-cc5b-424b-9f13-59254ed991bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="72277804-c35c-4eb0-a7f5-6d8762eb58ce"
>
</ReqRef><ReqRef
 Id="082b9d97-81b9-4995-87a2-07e6e31bd2d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ceef2a99-20be-46d1-94bc-da30e82a6dd6"
>
</ReqRef><ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0baaa13d-730d-413e-b76e-c64599e61e5c"
>
</ReqRef><ReqRef
 Id="bd668bbe-6aea-492e-a1bb-5683e651c453"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="78bda153-aac1-4291-98c3-2befac265518"
>
</ReqRef><ReqRef
 Id="9ffb7f56-2bd6-43f5-8def-6aac968df073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26941921-eb8c-4dbe-a375-afbb3ad5d54a"
>
</ReqRef><ReqRef
 Id="e40c0b71-8a09-48e2-afa1-209598ab1a8a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="854e687d-1e69-415d-aefd-db6b4f24ab98"
>
</ReqRef><ReqRef
 Id="1491cc62-39cf-4aac-9887-c6a659e8f015"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a11ae52-4e7d-4af0-9eb5-1c804ed0869d"
>
</ReqRef><ReqRef
 Id="09b7fcaa-8fd0-4fe9-8eed-a4c1fee31c2b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="496efc07-24d1-4398-890e-4ab1014e0451"
>
</ReqRef><ReqRef
 Id="6649ff98-11a8-49c6-8b46-6c93216ad250"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5906fdfd-0717-477f-b70a-c8c7b2d15bc6"
>
</ReqRef><ReqRef
 Id="24a635be-ba49-419a-8cc5-c37817d23f66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6308d2b1-fb90-444c-8ca2-58d518981235"
>
</ReqRef><Comment>Returns true if the packet has to be considered, that is 
  - if the packet is available (hence its orientation is also available),
  - this is not an infill information, or the infill transmission media is available on-board and 
  - its information is valid for the current orientation of the train or for both directions). 
If the train direction is unknown, this function returns true only if the packet&apos;s information if valid for both directions.</Comment>
<Parameters>
<Parameter
 Type="Messages.Q_DIR"
 Name="PacketOrientation"
 Guid="d715d88e-2743-4b56-9099-d4f21cdb9c34"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="95d39f6b-2411-4065-9457-7c6d0e6c73ba"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Empty orientation"
 Guid="a74508a2-aed1-4cc4-9e6e-a2a30fcccc99"
>
<PreConditions>
<PreCondition
 Guid="177c2d52-1519-43c6-bdba-f47ef81b1e79"
>NOT Available ( PacketOrientation )</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Train position unknown"
 Guid="6ef69ff5-4ba0-4be0-aefc-526ba8ce03bc"
>
<PreConditions>
<PreCondition
 Guid="86aff26d-9d64-4966-aac1-a41e04d16e27"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Unknown</PreCondition></PreConditions>
<Expression>PacketOrientation == Messages.Q_DIR.Both_directions</Expression>
</Case><Case
 Name="Value"
 Guid="8ecc0b19-4add-4c5e-82e5-c56868836734"
>
<Expression>PacketOrientation == EFSOrientationConverter(MessageOrientation)
  OR
PacketOrientation == Messages.Q_DIR.Both_directions</Expression>
</Case></Cases>
</Function><Function
 Type="StoredBaliseStruct"
 Default=""
 X="130"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DuplicateBalise"
 Guid="185af630-3a5c-4817-a76e-ed6e4fc4a6cd"
>
<Comment>Provides the duplicating balise.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Balise"
 Guid="cb60f42e-ec5d-4bd1-bf65-7828af051dd5"
>
</Parameter><Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="9d9693b8-d98a-4f99-8603-019fdb355fbf"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Duplicate of the next balise"
 Guid="dd0197e0-8d6a-4de3-8644-0111e1919e32"
>
<PreConditions>
<PreCondition
 Guid="eff994b4-3615-45a8-aa7b-0f8ebe6856c6"
>Balise.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_next_balise__seen_in_the_nominal_direction_of_the_balise_group</PreCondition></PreConditions>
<Expression>FIRST X IN aBaliseGroup | X.Telegram.N_PIG == Balise.N_PIG + 1</Expression>
</Case><Case
 Name="Duplicate of the previous balise"
 Guid="49c7ee14-4263-4343-a897-558b4e36f7d6"
>
<PreConditions>
<PreCondition
 Guid="fcdc7999-90e2-4d29-adf7-6ce07cd84427"
>Balise.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_previous_balise__seen_in_the_nominal_direction_of_the_balise_group</PreCondition></PreConditions>
<Expression>FIRST X IN aBaliseGroup | X.Telegram.N_PIG == Balise.N_PIG - 1</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="0"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DefaultBGInformationReceived"
 Guid="a5071e5f-5468-4460-aae0-8255f6778a3c"
>
<ReqRef
 Id="bc4a8f14-8d10-4de8-a92c-674ccd9bcb00"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="69c74632-ae35-429e-a99d-d0008cc76b95"
>
</ReqRef><ReqRef
 Id="fd86664a-527a-4152-a9b5-793dcc75f1b9"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="79272a36-2ddf-4f92-9a66-0cfefff37ade"
>
</ReqRef><ReqRef
 Id="2a940406-f81d-432f-bdd6-c0e58ba44bd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="361aeffa-6a5a-4dc8-a642-8ca8bf169af1"
>
</ReqRef><ReqRef
 Id="5c7f8e6f-d144-42ee-91a5-5bc97116d06d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="86448695-4c41-4e18-bf70-268023db3c3d"
>
</ReqRef><Comment>Indicates that a packet &quot;Default balise information&quot; was received.
This is a Trackside malfunction, and should be displayed to the driver and recorded in the JRU.</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="5780f2c8-8dde-453a-9284-71fa2e72a536"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No BG"
 Guid="2b52fd9e-6b28-4fe6-b96a-b40c215d6b38"
>
<PreConditions>
<PreCondition
 Guid="0c36d46c-88ec-4d15-a45b-e5889b463ff7"
>aBaliseGroup == []
  OR  
NOT FullBGReceived( aBaliseGroup )</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Value"
 Guid="68c25b87-edc7-421d-8a17-ddff8bf5549f"
>
<Expression>THERE_IS aTelegram IN aBaliseGroup |
(
  THERE_IS aPacket IN aTelegram.Telegram.Sequence1 |
  (
    Available( aPacket.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION )
  )
)</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="240"
 Y="210"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandlePacket"
 Guid="052d0827-c337-4549-9724-72afe831fafd"
>
<ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7d1a8168-b8bc-4b96-af40-5b9e285f9491"
>
</ReqRef><Comment>This procedure is called for each packet received with a balise telegram.
The relevant procedure is called to store and handle the data contained in the packet.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.SubStructure1"
 Name="Packet"
 Guid="ec46a4f0-3fc0-4db7-9ada-3d3456f83231"
>
</Parameter><Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="ca00b294-0df9-4d9d-9d66-46fbbd6b6b8d"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="671540ca-c9a8-4a2c-9c97-169becba5b2d"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistance"
 Guid="1f7dc1ec-11a8-4b68-b8b7-8ab540849b2c"
>
</Parameter><Parameter
 Type="Boolean"
 Name="infilledPacket"
 Guid="38815ef9-8e60-40b1-817b-646f5d98a194"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle new packet"
 Guid="b65b19ff-3968-4c36-8ee8-fc038e0d4821"
>
<ReqRef
 Id="88930fd0-2a41-48f8-ac88-35d8c1d60f47"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="b1bac924-6dc6-4d14-bacc-59c1d6247393"
>
</ReqRef><Comment>We suppose that an element of type Messages.EUROBALISE.SubStructure1 can only contain one field defined, representing a single packet. The rule looks for the first available element and when it is found, calls the corresponding routing to store the received information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Adhesion factor available"
 Guid="d5642e3e-304c-4468-91e2-996697f57585"
>
<ReqRef
 Id="edb711e6-2b8c-4c00-88b8-563ee23ec94b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10b3393f-d736-4af5-baa4-8d492566e0a0"
>
</ReqRef><ReqRef
 Id="115b09d2-66f8-4553-9085-6484d37ec385"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fcd09a16-ff2b-4fd8-8a5f-9398280995f4"
>
</ReqRef><ReqRef
 Id="f83a7563-dcc4-4041-8201-a5d79f86a5c0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7dc9c887-3bad-458b-8366-67c48f7f9747"
>
</ReqRef><ReqRef
 Id="ed2472a1-ec6f-4b94-b43e-a0b17ee7080c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cbdfafe3-98a1-4e46-87df-3e4056d65c43"
>
</ReqRef><ReqRef
 Id="7ee3b877-7ff2-4541-aa86-6af70c0cb7c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03a19c5e-5b39-4b5f-9eb0-7f9546959a7b"
>
</ReqRef><ReqRef
 Id="903134a0-7b20-4b2e-ab42-30cae27fea81"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="72df286c-b028-4f29-be77-e201172cc4a5"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b3dbfb9-ce69-4147-99ce-c77c38d3a2d1"
>
</ReqRef><Comment>Handles Adhesion Factor packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="3df15a50-e4cd-4343-8a41-cb8d3cec0b37"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.ADHESION_FACTOR.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="5a708ddb-07ae-4860-89ce-d0747b1ab121"
>Kernel.AcceptInformation.AdhesionFactor( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="962f5801-f0a9-42c3-a4c0-6ea2c50f0797"
>Kernel.TrackDescription.AdhesionFactors.AdhesionFactorReceived ( Packet.TRACK_TO_TRAIN.ADHESION_FACTOR, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Axle Load Speed Profile available"
 Guid="f7984559-8457-4272-977c-a4c77df06487"
>
<ReqRef
 Id="0bc77f7e-62ac-42cc-bf02-051522a4d11a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2bfd9db-c889-4bf3-91e1-b1a74acca3ed"
>
</ReqRef><ReqRef
 Id="6a6eebd7-7178-4712-b7fa-135df10c5a4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3741a9bd-7bad-48fa-af4e-6a49ba8b3035"
>
</ReqRef><ReqRef
 Id="a3345820-31df-4b78-835f-d02b8d42d3bc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd48f242-0f6e-42c2-b2b6-a5833d9a5635"
>
</ReqRef><ReqRef
 Id="9e4cc30b-7c23-4202-aa4b-87839eea29a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a846ead-4f95-4e27-b0f7-c1ccbbf3590f"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dca6b8bc-0668-448b-ab1b-00b3411d6eeb"
>
</ReqRef><Comment>Handles Axle Load packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7e4e2969-37b5-42c9-be79-a5cabaec81d7"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="0850e212-45c4-447c-ae3b-a10a6ccc2731"
>Kernel.AcceptInformation.AxleLoadSpeedProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d6ca9514-566f-4887-a3f1-0764c122aa72"
>Kernel.TrackDescription.AxleLoad.AxleLoadProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Conditional Level Transition Order available"
 Guid="0d362c8e-af10-4435-ab72-0549d5138943"
>
<ReqRef
 Id="51ddbc44-360a-4339-9b7c-fc91347a5da2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0bc128a5-192b-44fe-9d95-5b1cb7d5232d"
>
</ReqRef><ReqRef
 Id="377cc4cc-52bc-4bc6-8489-759a13078b63"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f8f13fbe-4d40-49a7-8358-0d5681997ea5"
>
</ReqRef><Comment>Handles Conditionan Level Transition Order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7d08f93b-f3cf-41fe-8d7c-ded1a543e64d"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.CONDITIONAL_LEVEL_TRANSITION_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="d97dda75-aa31-4a67-9b83-9d5f0812eda4"
>Kernel.AcceptInformation.ConditionalLevelTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="edbec74c-90c8-4666-8493-c72753b8e924"
>Kernel.LevelTransition.CLTOReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.CONDITIONAL_LEVEL_TRANSITION_ORDER )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Danger for Shunting Information available"
 Guid="e8ccf594-23b3-4744-b15f-c4b35864e52f"
>
<ReqRef
 Id="7fc85086-374e-4ffb-8cf2-1b9f49820e19"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="15a6020a-063d-4e4b-9cff-bf13e794d102"
>
</ReqRef><ReqRef
 Id="48f89af6-963e-401c-b92f-a9358f6df7a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbaee891-2543-4787-a0ff-b5e598fb457b"
>
</ReqRef><ReqRef
 Id="d932cea7-ce9f-4909-afff-2c36046cea2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="af8bc229-2270-4e7f-8349-2b622375e36c"
>
</ReqRef><Comment>Handles danger for shunting information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="ee3f0441-5064-4305-9a97-cb34fdfcb6ae"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.DANGER_FOR_SHUNTING_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="cd9409cf-f236-4e01-b50f-35db0d073fff"
>Kernel.AcceptInformation.DangerForSHInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f9fc9537-6eef-4645-990f-5fbf39d7d5be"
>Kernel.Modes.Shunting.DangerForShuntingReceived( Packet =&gt; Packet.TRACK_TO_TRAIN.DANGER_FOR_SHUNTING_INFORMATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Default Gradient for TSR available"
 Guid="18227d52-0953-4a2b-bce9-bb1eb4ee7ea6"
>
<ReqRef
 Id="02d9f252-59e9-4dbb-a7cc-b66f2b96fe25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe789e53-144f-4e59-bce0-c5694d6ce0c7"
>
</ReqRef><ReqRef
 Id="e7979a56-555a-422e-9a04-9210ecca2b25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89d8594e-bd6d-487b-b2f1-030bd881ea7b"
>
</ReqRef><ReqRef
 Id="e1e65985-7379-4bca-be54-78d665b5f59b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74533123-26df-4d3a-8361-7b8b097f09b9"
>
</ReqRef><Comment>Handles Default Gradient for TSR packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="547b3821-fa99-449c-83b4-8d095143005d"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="5dc5809b-4774-4887-8dc5-2115747ced74"
>Kernel.AcceptInformation.DefaultGradientForTSR( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="dd9b765f-3dcf-48d2-bac3-19ee389e9f1a"
>Kernel.TrackDescription.Gradient.DefaultGradientForTSRReceived ( Packet.TRACK_TO_TRAIN.DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Fixed text message available"
 Guid="b6057604-414a-41d3-832f-b7d12d856cab"
>
<ReqRef
 Id="85fef952-5e74-4514-b7d4-1c70f23587c0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="acc0c4a9-782b-4c2b-bb9e-bab94186c287"
>
</ReqRef><ReqRef
 Id="c3338b70-b8f1-4525-ae95-a94e1b92981b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="02d12123-9562-4dda-a3f9-6397a02aedaa"
>
</ReqRef><ReqRef
 Id="13227255-d959-4724-9371-31427e4538a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97136d4f-6d25-4064-af7a-d1aa768083b2"
>
</ReqRef><ReqRef
 Id="52943307-1c06-4cc3-94d3-f778ce8dd8d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bf50b4c-52b0-4da2-800c-2b9bef9e3258"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6281d087-992c-4f9c-94fd-b93ee85d03c9"
>
</ReqRef><Comment>Handles fixed text message packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="cfc39b91-6fff-4355-b014-54bb786fdf6d"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="1dc85993-5040-4605-bb00-d6e220f6c2dd"
>Kernel.AcceptInformation.FixedTextInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1db0e5a3-813a-47ec-82c2-e6aa26ebb770"
>Kernel.TextMessages.FixedTextMessageReceived( aPacket =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Geographical Position Information available"
 Guid="58f36235-339e-4d9e-a330-534564370838"
>
<ReqRef
 Id="bfb92914-1319-4a13-bb8f-c623e5f7e53a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b847fa2e-92db-443a-878c-7e801b35892a"
>
</ReqRef><ReqRef
 Id="16e1df6b-c27b-4c82-8dcf-37b394753241"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18d0aefc-97f4-4a87-99ea-513e747f15ef"
>
</ReqRef><ReqRef
 Id="3f471e44-8594-4731-ba67-b7173dc06106"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f536e705-bca2-45fb-a91f-bf477c1ef940"
>
</ReqRef><Comment>Handles Geographical Position packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e7d4f283-e559-4695-af6d-3d536bd9b26f"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.GEOGRAPHICAL_POSITION_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="132a1d5d-1ce0-4c2a-a4de-f9c2704da604"
>Kernel.AcceptInformation.GeographicalPosition( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1c876aff-a87a-4254-9bd2-29322f74ea4b"
>Kernel.GeographicalPosition.GeographicalPositionReceived ( aPacket=&gt; Packet.TRACK_TO_TRAIN.GEOGRAPHICAL_POSITION_INFORMATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Gradient Profile available"
 Guid="572ec7e7-dce1-4a08-a6ff-898d9b85f56e"
>
<ReqRef
 Id="d96e7170-b578-4e28-bb03-82d0b7cc6a6d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="90795abf-dac5-4a23-9b9c-c4065f08767c"
>
</ReqRef><ReqRef
 Id="e1e59e57-94a5-48ea-bb40-d183aa229e20"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb123abf-ec1e-4c1a-9985-29a01e88bcd9"
>
</ReqRef><ReqRef
 Id="91c896f9-c3d0-473b-bb99-e2dfb219ae1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a423c1f2-fcdf-4a40-9abb-3af782c6c62e"
>
</ReqRef><ReqRef
 Id="4396f131-3dd7-4601-be15-b4827d98bf32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="13228851-bc2a-4830-9cf6-001dedbf6e09"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad164c1d-031a-45b3-8d55-1b347bac98e9"
>
</ReqRef><Comment>Handles Gradient packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="707ec8bf-fadd-4254-9e70-04791d061d52"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.GRADIENT_PROFILE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="95f2c2bb-dbf6-41e8-ad9c-017f485637c0"
>Kernel.AcceptInformation.GradientProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f8e04781-7b14-4460-bedf-dfcad86bfaf6"
>Kernel.TrackDescription.Gradient.GradientProfileReceived(
    Packet =&gt; Packet.TRACK_TO_TRAIN.GRADIENT_PROFILE,
    aDistanceFromRef =&gt; aDistance
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="9b996a70-75ee-44f8-83f1-dcd1bfa4cd70"
>
<ReqRef
 Id="7ba0f65c-e1b5-422f-a1fb-e947e73cd4f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fba3ed3b-43f9-4a7e-ae85-1d0035c7ec8c"
>
</ReqRef><ReqRef
 Id="beb70c99-c336-489a-a97e-b8236a026061"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="280e64b2-2408-4b00-b8ac-5b047b36e0ba"
>
</ReqRef><ReqRef
 Id="9570bc20-fe09-49cb-8e1d-d7adbb5fdfbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d3dcf489-908e-4a6e-9dd8-2675337864fa"
>
</ReqRef><ReqRef
 Id="9e0c6d45-0f4a-482d-9a28-dbe1f41746ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="146aa7d5-90c2-4351-a2b0-7c02ff13fb23"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d692c91a-a341-4ea3-8748-20fa453e76cf"
>
</ReqRef><Comment>Handles Static Speed Profile packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="f883aba6-4c27-4a72-b986-d0388d7577cd"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="0a981d98-4459-449e-8252-0b98745e8cb8"
>Kernel.AcceptInformation.InternationalSSP( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e20f018d-a037-46f0-a3ad-a27b7eb1d05f"
>Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level Crossing information available"
 Guid="3ca382d8-714f-4601-a04e-5e6340ece1bb"
>
<ReqRef
 Id="0f039a3b-873b-484c-913f-292a6031b162"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dd858604-cb55-4252-87a2-7a1b27172996"
>
</ReqRef><ReqRef
 Id="8a060a51-4b93-4eb7-aa9b-5b5c264b6820"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed90fe7b-8bf5-48ae-9e67-71af60a9e0cc"
>
</ReqRef><ReqRef
 Id="4744429f-fce3-4833-817a-c0cd74ffcd7f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9e8d51c7-a816-47a4-bebb-7b8c472c39a6"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="503c19d5-7218-4650-b01e-cfd61b0975e7"
>
</ReqRef><Comment>Handles Level Crossing packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e44772b8-5ec5-4de6-9609-3ddde969f874"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LEVEL_CROSSING_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="8daf8ed5-ae52-4f28-8c1f-9db08ae5c8ad"
>Kernel.AcceptInformation.LevelCrossingInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )
  OR
True</PreCondition></PreConditions>
<Actions>
<Action
 Guid="961a9459-5891-48f0-8de2-eddc845ec82f"
>Kernel.LX.LXReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.LEVEL_CROSSING_INFORMATION, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level Transition Order available"
 Guid="5f1e3e65-a3ef-4e80-912c-fb9c02e93e8b"
>
<ReqRef
 Id="6b26f38c-d98d-4eee-a314-ae6b48256d36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="961c810f-337d-47d8-b58d-d30ed7065bdb"
>
</ReqRef><ReqRef
 Id="3c872475-fbad-4a03-b13a-a6fa51c6a722"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="25e16a8b-c824-417d-80ce-3dc80c2ae039"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4341b2f6-2291-4e80-855a-6d8a37deddc4"
>
</ReqRef><Comment>Handles Level Transition packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="c699e0e8-5eba-4330-a272-1e0c67473cbc"
>ConsiderBTMPacket (
    PacketOrientation=&gt;Packet.TRACK_TO_TRAIN.LEVEL_TRANSITION_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="52d75df0-f01e-4f02-878e-11fe1a035ea6"
>Kernel.LevelTransition.LTOReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.LEVEL_TRANSITION_ORDER, aDistanceFromRef =&gt; aDistance)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Linking available"
 Guid="ee5a8bbe-075b-4889-b827-8eb384463824"
>
<ReqRef
 Id="a3ce052d-3ac7-4adb-a97c-c53d647cded7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="729e4e83-d2d2-40f1-8b2e-3414452f81a9"
>
</ReqRef><ReqRef
 Id="4ae178ee-6db4-474c-aa88-d5f8bd8ea1d7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="82c4cc0c-66ea-4a14-b302-490fb733c5a2"
>
</ReqRef><ReqRef
 Id="5e8ed861-509f-4d98-8c04-8bea3a8cd6c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c406e150-d303-4dd6-a853-f797e41df06a"
>
</ReqRef><ReqRef
 Id="4a52b034-1229-440d-b33c-bd9b65c26dab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5f46219-8aa8-4efb-909f-5049863aff96"
>
</ReqRef><ReqRef
 Id="0d145136-9c1d-4c04-bd9a-5987931ed765"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c2cd562b-ed41-4e52-aaf4-21994a871464"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="675acaac-123e-4d0b-84dc-67359475d56f"
>
</ReqRef><Comment>Handles linking packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="740ed4a7-b7cc-46f8-b0c9-dd3a37c4a2c5"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LINKING.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="04ae732a-d2f6-421d-8ffe-17d22831641d"
>Kernel.AcceptInformation.Linking( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="250427e6-8ddb-431d-a76d-b4432281374f"
>Linking.LinkingProfileReceived(
    Packet =&gt; Packet.TRACK_TO_TRAIN.LINKING,
    aDistanceFromRef =&gt; aDistance,
    infilledLinking =&gt; infilledPacket
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="List of balises for SH Area available"
 Guid="288c4793-5378-4958-85b2-98e5600ac740"
>
<ReqRef
 Id="e6b9b34b-5183-45ec-96a2-8eef4909b34c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="600fda9b-e497-4e8f-9fb6-1e61e86a9f9a"
>
</ReqRef><ReqRef
 Id="d52b6935-7a67-4676-ae5b-0c905452c8d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c48f8f17-8039-45f7-a699-bc4853b11bff"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a568580-fa87-49d8-b5e4-9e8cecf335c4"
>
</ReqRef><ReqRef
 Id="e915fc9d-2b27-4f90-b3bb-ca784a55e1ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b2295954-b470-48cc-93e3-fcab64350d27"
>
</ReqRef><Comment>Handles List of Balises for SH packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="90ab8949-4dbb-4fdc-973b-d6f4b75d9912"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="3b824ad9-a3ef-452b-a33e-98f9852625f0"
>Kernel.AcceptInformation.MovementAuthority( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2906dae6-d0c9-4e48-a5e0-1fea924865a0"
>Kernel.Modes.Shunting.HandleNewListOfBaliseGroups ( Packet =&gt; Packet.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="LSSMA display toggle order available"
 Guid="693073bb-3954-46f2-a554-5ac6a8f876d7"
>
<ReqRef
 Id="a6eade55-4b84-45f2-a021-fd589f3d1760"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c179bd82-0773-4e55-af7e-4d2770287dee"
>
</ReqRef><ReqRef
 Id="6eeca2b4-7feb-46e5-9918-59197fd2bd89"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d7a77846-723c-4382-a8af-167818814509"
>
</ReqRef><Comment>Handles LSSMA display toggle order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="6849aabe-b0ac-4fbc-8d10-a3200c6580e6"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="7efc1a9f-9602-44bc-9569-71ebb28a94ac"
>(
  Kernel.AcceptInformation.LSSMADisplayToggleOffOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )
    AND
  Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER.Q_LSSMA == Messages.Q_LSSMA.Toggle_off
)
  OR
(
  Kernel.AcceptInformation.LSSMADisplayToggleOnOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )
    AND
  Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER.Q_LSSMA == Messages.Q_LSSMA.Toggle_on
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="004ed3f5-351e-4130-868e-a4960e2b944e"
>Kernel.Modes.LimitedSupervision.LSSMAToggleReceived(
    Packet =&gt; Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER,
    Timestamp =&gt; BTM.BGLocationReference.Timestamp
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="MA Lvl1 available"
 Guid="d268c47d-602c-4549-aab4-1541c75205f4"
>
<ReqRef
 Id="ab5117d0-92b0-4488-9084-9e07dba02cec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c47a5a53-84ac-4562-9979-531be2defee9"
>
</ReqRef><ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="79026bf6-0003-44dd-80e2-90afc8b8b987"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22f70d1a-a76e-439c-bdf5-1a10880797ea"
>
</ReqRef><ReqRef
 Id="ab682687-0117-4289-925f-65a6680a3644"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="935b840f-0f34-460d-ad5e-dfeb473503a5"
>
</ReqRef><ReqRef
 Id="20241a08-e360-4144-b573-5a0e657dd9a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a25dc54-29d3-4938-b92e-fb0f5b37a2c7"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22595e3b-4c44-4777-84e9-d057f61ad1b1"
>
</ReqRef><Comment>Processes the MA for level 1.</Comment>
<PreConditions>
<PreCondition
 Guid="5277d858-f9be-415e-b52c-0e742bb35c08"
>Packets.ConsiderBTMPacket (
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e8f2e263-eb09-49d0-93f3-2f4d98af2694"
>Kernel.MA.MALvl1ProfileReceived
(
    Packet =&gt; Packet.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY,
    aDistanceFromRef =&gt; aDistance,
    isInfillMA =&gt; infilledPacket
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Mode Profile"
 Guid="423c865a-29c8-402c-807e-61b70a9a5867"
>
<ReqRef
 Id="e6b9b34b-5183-45ec-96a2-8eef4909b34c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="19dec718-ae7c-4f9b-bf59-fe5f4a2ce5f5"
>
</ReqRef><ReqRef
 Id="85399986-8b1a-4ee5-ba62-20eb7ca0a3b9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5a8e89a-68af-46b9-8e80-d01bc69509be"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b5a95273-5ea6-47fe-88d7-09f109a361f6"
>
</ReqRef><ReqRef
 Id="2ef2992f-43ce-4f58-abf6-55560cf910bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be414b46-e05a-49d0-81d0-276ad0fd8fff"
>
</ReqRef><ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="60c748c4-6ffd-48db-8256-509ca1d5e9df"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9874877b-cfc0-4e98-b18c-b9bfda371e57"
>
</ReqRef><Comment>Handles Mode Profile packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7c611cdb-ccf2-4f3c-a343-9d77f47c5412"
>ConsiderBTMPacket (
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.MODE_PROFILE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation )</PreCondition><PreCondition
 Guid="8d956f8e-378b-482f-bc27-26c54c49af35"
>Kernel.MA.MAIsAccepted</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2db6933b-ffcd-41fc-b5ab-90177389d406"
>Kernel.MA.ModeProfile.ModeProfileReceived (
    Packet =&gt; Packet.TRACK_TO_TRAIN.MODE_PROFILE,
    GenericLSMarker =&gt; Kernel.Modes.LimitedSupervision.LSMarkerPresent(BTM.CurrentBaliseGroup),
    aDistanceFromRef =&gt; aDistance,
    infillModeProfile =&gt; infilledPacket
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="National Values available"
 Guid="4574cd3f-8492-4e0c-a1d8-c04d2324f265"
>
<ReqRef
 Id="766f0274-5b6e-4050-a48d-226dccf68782"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e7814fa-2ca8-4150-ac0f-0e8939d52c32"
>
</ReqRef><ReqRef
 Id="967fe971-b137-4079-b900-5f6c1f5f25ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ba4ae04f-33e3-467c-86c7-c8b361bb570f"
>
</ReqRef><ReqRef
 Id="da594ef9-d8e9-4553-af3e-77f9102ec171"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="459bf5f8-2273-40d3-8549-3b6d58b7dfd5"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="41106ae2-f7bb-4465-b932-78232dc6e469"
>
</ReqRef><Comment>Handles National Values packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="5ba39e2d-0d86-4404-b853-53b808070955"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.NATIONAL_VALUES.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="6f2ee328-827c-4fb1-93da-3d55a15e4fb4"
>Kernel.AcceptInformation.NationalValues( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2719277d-f12f-479c-8278-abb173a2d862"
>Kernel.NationalValues.NationalValuesReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.NATIONAL_VALUES, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Permitted Braking Distance Information available"
 Guid="d158b9d7-ea35-4ceb-ad40-fa4b692c4efc"
>
<ReqRef
 Id="0c087a57-86f8-4190-81b9-2698efc3cc18"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c249119-30cc-445b-a862-da63a45c9756"
>
</ReqRef><ReqRef
 Id="18e66d36-7f79-47c5-92e4-d8b744a4513d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92aebd50-1d64-45fc-8a8d-d2468bcdccde"
>
</ReqRef><ReqRef
 Id="1b02a3e8-5313-4a1e-8209-c203e96ab40f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d50e4849-9617-4801-84b7-431e4ada478b"
>
</ReqRef><ReqRef
 Id="faca2edb-7220-4d55-bebe-f367d8f8d94a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bc21fce-7dbe-4d3a-a50f-35eb553ae092"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04ea5d44-6161-49fd-b0bd-95c13ce9e23c"
>
</ReqRef><Comment>Handles Permitted Braking Distance Information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="ce7592d3-5d36-42a6-a430-0f02f26d87b3"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.PERMITTED_BRAKING_DISTANCE_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="63b17e86-0a51-4eea-820f-70178c39402a"
>Kernel.AcceptInformation.PermittedBrakingDistanceInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a7bf6d39-8ef9-4f76-b5e1-4b42aae162ea"
>Kernel.TrackDescription.PermittedBrakingDistance.PermittedBrakingDistanceProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.PERMITTED_BRAKING_DISTANCE_INFORMATION, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Plain text message available"
 Guid="ddb5d31a-d42a-4f09-8e82-268f192f63d0"
>
<ReqRef
 Id="cc1f66d4-6eec-4fe4-a302-2e6287ccb3f0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb6397f1-eaa3-49b2-b6c1-bca940170c53"
>
</ReqRef><ReqRef
 Id="c3338b70-b8f1-4525-ae95-a94e1b92981b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c41b327b-3426-4505-8aea-0fda63d12f3d"
>
</ReqRef><ReqRef
 Id="13227255-d959-4724-9371-31427e4538a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="643e7b8b-78b4-4ea4-82fe-b560d0cc0bd1"
>
</ReqRef><ReqRef
 Id="2b4cc227-208a-49c5-8f4c-a566e7eac74b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="885582da-e304-43fe-987a-6e05289ee108"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6fb7ee4f-8ecc-432c-b53f-8871bb7b1493"
>
</ReqRef><Comment>Handles plain text message packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="d8ba5bcd-8223-429d-8277-f448777e729d"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="4f7c7fe6-236a-4386-aea5-ac1f82161f3a"
>Kernel.AcceptInformation.PlainTextInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7713bd12-2bc6-49fa-ab02-d4c7ff500cb1"
>Kernel.TextMessages.PlainTextMessageReceived( aPacket =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Radio Network registration available"
 Guid="2b59e652-a400-4d6a-89c2-e13efd458d81"
>
<ReqRef
 Id="6476afb5-0645-4298-926a-e67147752ddf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b32c1d05-cb39-483f-8534-e688a9e7a3f4"
>
</ReqRef><ReqRef
 Id="031d12f5-b1df-4716-9eda-a3495861e160"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5aaf0fc4-3913-45e1-ad04-f0030332d4b7"
>
</ReqRef><ReqRef
 Id="da86aaf7-6b30-4a15-b59d-37e639bcdfc8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e4041e40-e667-4343-ba04-8dda9ee940ec"
>
</ReqRef><Comment>Handles Radio Network registration packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7dde0488-8df7-418d-95ee-21082e23dfa7"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.RADIO_NETWORK_REGISTRATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="080e884b-999a-43f0-91f0-7d8e8a6b11ec"
>Kernel.AcceptInformation.RadioNetworkRegistration( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="29555d56-e93d-4b03-bcd8-cd57ddaba9f7"
>EURORADIO.Terminal.RadioNetworkRegistrationReceived ( aPacket=&gt;Packet.TRACK_TO_TRAIN.RADIO_NETWORK_REGISTRATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="RBC Transition Order available"
 Guid="70731a0e-ba5f-484f-a027-c4d09e290b80"
>
<ReqRef
 Id="277de94f-c4cd-4612-97ca-ead1fdd29073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1bc2eb0c-ef5d-4f83-9cb0-c80ca1ee51b0"
>
</ReqRef><ReqRef
 Id="f69899f9-70f7-4f0e-bc95-d9d97964dc81"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a4dd1bba-b81d-4621-b98b-0832708d52cf"
>
</ReqRef><ReqRef
 Id="813504ec-6af8-4d96-be72-5e3b6b595a0a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bfd9533a-7171-4d80-8b95-5dc0b2eb2741"
>
</ReqRef><ReqRef
 Id="fb5cdb2c-826a-4be7-babf-d16c11e9720c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d9017d87-989b-4dcc-a391-96224434351b"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74ba226f-d312-4f1a-bfec-9a7f9fef906c"
>
</ReqRef><Comment>Handles RBC Transition order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="61f518c1-008f-4e7d-ac92-f0ede5ce7df0"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.RBC_TRANSITION_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="d37ce7be-6772-4045-a266-ec125aa50d15"
>Kernel.AcceptInformation.RBCTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="05bdf5ca-1d21-43e2-bb2e-7ef9acba75c3"
>EURORADIO.RBCConnection.RBCHandover.RBCTransitionOrderReceived ( aPacket =&gt;Packet.TRACK_TO_TRAIN.RBC_TRANSITION_ORDER, aDistanceFromRef  =&gt; aDistance)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Repositioning Information available"
 Guid="36a11ebc-d5b0-4502-aa98-6972b7158392"
>
<ReqRef
 Id="d68a643a-2faa-429a-a1d6-2724d7c3ccbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="165c9b40-d9d0-4661-8b16-be10960d7c80"
>
</ReqRef><ReqRef
 Id="62aa6f8e-f444-4ed1-90b7-43dc64aa7594"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="680a4c3b-fd19-4bd8-8d77-e450c704f254"
>
</ReqRef><ReqRef
 Id="08e951b3-e2c5-45bd-a768-68580e2d4307"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a5c4a18-a8d3-4e4a-ae6b-b79ef9b41293"
>
</ReqRef><ReqRef
 Id="c786d14c-c637-4877-8d02-28ce94f66515"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84d2f221-ed2d-4ef1-99f7-9074ef84cb68"
>
</ReqRef><Comment>Handles Repositioning information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="a5ae63f6-8d36-44a3-bbd2-212a49b20d81"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="d86ad34c-f29d-4680-8d17-fef9ba598939"
>BTM.Linking.CurrentLinking().BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN</PreCondition><PreCondition
 Guid="0fa33894-ee64-4a71-b7fb-662d079bb38b"
>Kernel.AcceptInformation.RepositioningInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="11ff0426-7369-4b98-8ea9-b7674aadda0c"
>Kernel.MA.RepositioningInformationReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION, DistanceToBG =&gt; DistanceFromReference(True) )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Reversing Area or Supervision Information available"
 Guid="8c565102-6dfc-467b-bba2-7bdae0720fa5"
>
<ReqRef
 Id="571b7bcf-500a-4e43-8f4b-dfb64cfd4845"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9eb1fb56-9f26-49ac-b649-a813769429e3"
>
</ReqRef><ReqRef
 Id="54c20a27-60da-4df1-80ba-7ba841d7258f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03f063a1-d979-44f2-b73a-f4329f61d3ba"
>
</ReqRef><ReqRef
 Id="f3aec789-8e42-4041-befb-bf3d53519577"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="86396db2-9bf2-44f1-85b2-981f6ea478da"
>
</ReqRef><ReqRef
 Id="e9d57d91-d39a-4190-841c-fb33c0eeee48"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="506ea474-c557-42c9-941c-3d1555744dfc"
>
</ReqRef><ReqRef
 Id="f32ad7de-67d9-4075-bb38-75a13996ad98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f217554-67f7-4f8b-8222-39736c4f1466"
>
</ReqRef><ReqRef
 Id="796923a0-8b8a-4e7b-8af3-43f3398b27dd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ee588ecf-e52d-4e87-89b5-7ceb19383b5f"
>
</ReqRef><ReqRef
 Id="46356051-e464-4ceb-b54c-41ef8dc6017f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6f108d26-7bb6-4017-829b-07be0a892e76"
>
</ReqRef><ReqRef
 Id="c93e250c-fc42-406f-9706-6ec7488b8982"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b139424f-252b-4a32-98af-e3f786f4b561"
>
</ReqRef><ReqRef
 Id="690dfc40-042d-4c8d-9e60-17b85d455fd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11fb4149-95a7-4929-a77a-4e880788cc70"
>
</ReqRef><ReqRef
 Id="f08e576d-1c61-4c2b-b742-29f729a5728f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93584cec-5df3-41f2-a600-5f9b8a06e9b7"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ab221fe7-18d1-4221-8ccd-a994c25d640b"
>
</ReqRef><Comment>Handles Reversion Area Information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="63bcc506-85c0-4763-9549-2f5c4eec0646"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)
  OR
Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1ee33c0c-afa3-45e6-af12-67634aef90fc"
>Kernel.TrackDescription.ReversingArea.ReversingAreaOrSupervisionInformationReceived
(
    RvAreaPacket =&gt; Packets.ProvideRevAreaPacketToHandle(
        aPacket =&gt; Packet.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION,
        MessageOrientation =&gt; MessageOrientation
    ),
    RvSupPacket =&gt; Packets.ProvideRevSupPacketToHandle(
        aPacket =&gt; Packet.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION,
        MessageOrientation =&gt; MessageOrientation
    ),
  aDistanceFromRef =&gt; aDistance
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Route Suitability Data available"
 Guid="44902d7c-8bf5-4dc5-bae9-be190af0d975"
>
<ReqRef
 Id="3eae43ab-6f26-4908-9360-5a8ce0bec069"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d07142e7-5480-42ec-845a-0f490543849f"
>
</ReqRef><ReqRef
 Id="352086ee-e08d-456c-a884-d2ee94aec4e9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="783c6e19-ecb4-43e6-aa0f-e67c79e1b870"
>
</ReqRef><ReqRef
 Id="655cd82d-364d-40cf-9540-62e1d8292f94"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d30b80de-ed78-424d-b01f-acd191b04430"
>
</ReqRef><ReqRef
 Id="21443e68-000d-4c84-b4f4-17c5373d0a4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b54a6043-dcde-4532-aef6-ee05ecce933b"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc8b01db-2e34-4ff0-adb2-73a51ef3ae5b"
>
</ReqRef><Comment>Handles Route Suitability packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="41f1baa5-c1ed-48ea-91a9-de8a5b5fbaef"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.ROUTE_SUITABILITY_DATA.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="bf657fe9-3da3-47c9-a5c1-642d726973e4"
>Kernel.AcceptInformation.RouteSuitabilityData( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="17d0d98e-1746-417e-b3d1-a0409a79647c"
>Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfileReceived ( Packet.TRACK_TO_TRAIN.ROUTE_SUITABILITY_DATA, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Session Management available"
 Guid="68003d12-e6dc-4138-a684-695bf74a4f41"
>
<ReqRef
 Id="ff45f18e-7a7b-412e-8847-569b6605d632"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93a3b5b2-7382-44ed-90cc-739df63b7fb8"
>
</ReqRef><ReqRef
 Id="af0db000-6b09-4a25-b01b-439fa27cbc6a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f525ce1-f6fd-45db-a9bc-14e85abac630"
>
</ReqRef><ReqRef
 Id="18318a83-420a-41a7-b3eb-e4e67f1e3f97"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="551dbd77-2393-41c7-9fed-40126a123a95"
>
</ReqRef><Comment>Handles Session Management packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e5602e17-2393-423c-b397-89dcba576dcf"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.SESSION_MANAGEMENT.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="26169b37-911f-4e40-9127-f2f5a4805ea3"
>Kernel.AcceptInformation.SessionManagement( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8e4e8741-f67b-46ff-a5e6-fcfa1ce7192f"
>EURORADIO.RBCConnection.Contact.TracksideOrderedSessionReceived(Packet.TRACK_TO_TRAIN.SESSION_MANAGEMENT)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Stop if in Staff Responsible received"
 Guid="c81a37f3-9453-49af-8106-2a112ae51ef0"
>
<ReqRef
 Id="06ef59af-bb51-412c-87ce-d6392fed31d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ac70e3a-7371-40ea-ac78-1d94399cfe97"
>
</ReqRef><ReqRef
 Id="31fb455b-2925-497c-b09a-b8b9573a81ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc8c6131-376a-4df9-93e9-6fa93fd35002"
>
</ReqRef><ReqRef
 Id="d932cea7-ce9f-4909-afff-2c36046cea2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe412d94-645e-4e66-8efd-d7afe571ecda"
>
</ReqRef><Comment>Handles stop if in Staff Responsible packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="f3d31b2a-4feb-4fc0-89e6-2a8af9b05bb0"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.STOP_IF_IN_STAFF_RESPONSIBLE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="ae3b8881-0559-4f9b-bf45-671195823a70"
>Kernel.AcceptInformation.StopIfInSRMode( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b3cc9653-78b6-414b-a8a6-81914195a393"
>Kernel.Modes.StaffResponsible.StopIfInSRReceived( Packet =&gt; Packet.TRACK_TO_TRAIN.STOP_IF_IN_STAFF_RESPONSIBLE )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction available"
 Guid="a9e0a232-d628-4b76-8f04-dcb40810f997"
>
<ReqRef
 Id="0ef0898e-cf23-489a-a1ec-efefda2bff98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="debfab3a-faab-46ce-ba90-55530b2190c9"
>
</ReqRef><ReqRef
 Id="37cb1c8d-6ea0-43c6-85a9-6ce724bf590e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac60629c-9a25-4729-a760-e04a89fcd270"
>
</ReqRef><ReqRef
 Id="2d4205fe-a62e-4306-88c0-fa8ed50b9d93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7586b6bb-6cfb-456b-bb84-4b9c27e74646"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3004849e-c559-48e4-bd07-56f1fac10ac3"
>
</ReqRef><Comment>Handles Temporary Speed Restriction packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="695bdf97-2135-4805-808a-b6281c1da123"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="f7f0dee3-8164-4d11-996e-7a7ec24af01f"
>Kernel.AcceptInformation.TemporarySpeedRestriction
(
  aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup,
  aNID_TSR =&gt; Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.NID_TSR
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c77c6a04-53bc-449e-b9d8-d1ccaa963ef5"
>Kernel.TSR.TemporarySpeedRestrictionsProfileReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction Revocation available"
 Guid="ce66e060-6753-4da8-b589-9d445416c640"
>
<ReqRef
 Id="1c1c2dc5-c171-456d-9a54-a4480effe5a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="984372ba-6c35-4d69-b98e-ec62f161d139"
>
</ReqRef><ReqRef
 Id="fcf6574b-fd16-4246-81d9-07cda44db502"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="80044d87-8774-474a-9c14-55493631c929"
>
</ReqRef><ReqRef
 Id="a12cbea0-bfe5-4f24-ae74-56261d93466b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eb900dcb-c1ed-45fd-8fdc-4a0ba23f0acb"
>
</ReqRef><Comment>Handes Temporary Speed Restriction Revocation packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="673297fe-8eba-443e-93e0-6cde374acf93"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION_REVOCATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="4889cb99-67ac-476c-ac67-96baed35877f"
>Kernel.AcceptInformation.TemporarySpeedRestrictionRevocation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e619da6c-cc31-4f62-be09-57e9632df39f"
>Kernel.TSR.TemporarySpeedRestrictionRevocationReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION_REVOCATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Ahead Free up to level 2/3 transition location available"
 Guid="3e1e35c2-8ca1-4ddf-82d7-0e25d78a10e7"
>
<ReqRef
 Id="864033cc-a0bd-4284-9de8-2572cad9faf5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="66f64433-ce22-4bbb-8377-14fa4c38c76d"
>
</ReqRef><ReqRef
 Id="a5cab7d5-9533-4bee-9cb2-2fb89da811cd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8acbd76e-5078-4625-8fcd-fcd98f750c4d"
>
</ReqRef><ReqRef
 Id="7ae2241b-9a89-4829-8cca-c5d8339cd425"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1ae791f7-4e57-44fb-a86b-69cbe6b14168"
>
</ReqRef><Comment>Handles Track Ahead Free up to lebel 2/3 transition location packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="09dc7e93-e179-44cf-a996-1512cd99d929"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_AHEAD_FREE_UP_TO_LEVEL_2_3_TRANSITION_LOCATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="9e67ba68-22f6-4e7c-a781-e7f5dc5f343d"
>Kernel.AcceptInformation.TrackAheadFreeUpToLevel2_3TransitionLocation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Send MA request"
 Guid="f9d974f9-1e11-40b0-a44b-d38c1c34fa97"
>
<ReqRef
 Id="0ee0129e-1504-4c7f-ab04-b8c8d596fe5a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="727358ea-e3d6-4107-ad07-3f703ee3b577"
>
</ReqRef><ReqRef
 Id="4443416b-4b5b-4896-a845-222b762d3950"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="42371c33-8091-4e62-9d37-57c8b350b245"
>
</ReqRef><ReqRef
 Id="cf6c6b17-27a3-476b-8db5-eab7f0aceb1e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b4154eed-f979-4136-9fd7-3f0c1d8ad63d"
>
</ReqRef><ReqRef
 Id="f119af99-2c5a-4a79-9d1f-bad360c248ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="965a9ebf-3ad0-4a94-9737-67d7db918c60"
>
</ReqRef><Comment>In level 0,1,NTC: if a level 2/3 transition is announced and a communication session is already established, an MA request is sent to the RBC.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send MA request"
 Guid="d9afa2e8-bc08-487a-b28e-cc0c9370afb6"
>
<PreConditions>
<PreCondition
 Guid="e9f7503a-a201-4ce0-be40-99cef91b92ba"
>EURORADIO.Terminal.HasActiveSession()</PreCondition><PreCondition
 Guid="afc8b3ae-0a5f-413b-a613-0d8145a1c32f"
>Kernel.LevelTransition.LevelTransitionToProcess != EMPTY
  AND
  Kernel.LevelTransition.LevelTransitionToProcess.TRLevel.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition><PreCondition
 Guid="9f677cc3-085c-4916-af03-783e04349ffc"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.L1, LevelEnum.L2]</PreCondition><PreCondition
 Guid="ee018937-eccf-4494-9c69-0260e6686b07"
>Kernel.ActiveFunctions.RequestMA_TrackAheadFreeUpToL2_3()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8b6b13bc-da05-493a-8895-bd58979b488e"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendMARequest
(
    aReason =&gt; Messages.Q_MARQSTREASON.TAF_up_to_level_2_3_transition_location,
    aPacket =&gt; Messages.PACKET.TRAIN_TO_TRACK.LEVEL_2_3_TRANSITION_INFORMATION.Message
    {
        NID_PACKET =&gt; 9,
        NID_LTRBG =&gt; Packet.TRACK_TO_TRAIN.TRACK_AHEAD_FREE_UP_TO_LEVEL_2_3_TRANSITION_LOCATION.NID_BG
    }
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition available"
 Guid="288dd8f6-b8e0-484e-b5d9-84abc3b56c83"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9590434-0ba2-4393-9a3d-2d85419aa7f0"
>
</ReqRef><ReqRef
 Id="ee609856-411d-4bb2-ab88-76b574aa3013"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c221cd2-82c8-4ea7-932b-460c26f2c972"
>
</ReqRef><ReqRef
 Id="46ff0663-ed84-4dea-af46-b87941a77c51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c81bae62-b211-4262-abf9-f2e877c51023"
>
</ReqRef><ReqRef
 Id="9eb67bec-5e3a-407d-8b6e-e3d49d57e883"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ddcb67aa-989d-4464-87fa-f13ebb021a8b"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f326508-7a58-433b-a1c0-7d1d5cd9ac10"
>
</ReqRef><Comment>Handles Track Condition packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="0d34e791-f010-453b-b97f-105cc27ebddb"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="8f322232-1723-481f-85d9-b14c2fde161e"
>Kernel.AcceptInformation.TrackConditionsIncludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b347e32c-19e6-4ec5-8505-a3bae2deeed2"
>Kernel.TrackDescription.TrackConditions.General.TrackConditionProfileReceived( Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Big Metal Masses available"
 Guid="ced1a7db-bddb-4b6e-9e46-0ea249622bfd"
>
<ReqRef
 Id="a013028b-ded7-4e9f-9521-43654f2cb992"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d9fb7cb1-8637-4910-8436-7ce771958686"
>
</ReqRef><ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="551e1e38-b27e-4697-9dcc-60e0b422a7d6"
>
</ReqRef><ReqRef
 Id="32b93913-0b12-48e8-8867-1fabfb0ae322"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a944689a-9002-41e3-bb3c-13734be82b5c"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c465f4c6-dd9e-4e2b-8036-a00e17534e81"
>
</ReqRef><Comment>Handles Track Condition Big Metal Masses packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="a21202a1-5f8b-4294-a6a7-80d366dcaf78"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_BIG_METAL_MASSES.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="cca34d29-a193-4757-b982-b2b39d7a641d"
>Kernel.AcceptInformation.TrackConditionsBigMetalMasses( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a8168c14-8dea-4896-9b29-5f71ec706278"
>Kernel.TrackDescription.TrackConditions.BigMetalMasses.HandleBMMTrackConditionProfile( Packet.TRACK_TO_TRAIN.TRACK_CONDITION_BIG_METAL_MASSES, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Change of allowed current consumption available"
 Guid="8448c5a5-bbd8-48f5-ae84-e1b63f672c7d"
>
<ReqRef
 Id="3b292c0a-1360-49a7-9047-9707757f6e7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="190fb223-2c21-4e2f-abdd-bca79a7608e4"
>
</ReqRef><ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="47ea4e15-5a4d-4581-b3fa-17ea4b4ab0fa"
>
</ReqRef><ReqRef
 Id="526da681-fc2c-4e56-908e-7d41f5632d7e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fdc21444-3601-465f-bb86-965441d7340d"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ba7ed8b-ca2d-425b-a7e1-1c6ff3513492"
>
</ReqRef><Comment>Handles Track Condition Change of allowed current consumption packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="2ae476f8-85fe-405e-9228-8e0cf7bf9516"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="e320cf30-ddc4-4568-94c4-370dc6fac3e0"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f3afa4bc-a50e-4fbb-818c-4f503b306e90"
>Kernel.TrackDescription.TrackConditions.CurrentConsumption.HandleCCTrackConditionProfile( Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION, aDistanceFromRef =&gt; aDistance)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Change of traction system available"
 Guid="fc4e8dd5-7ad3-4fd2-b44a-13afc089db60"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1d812680-2c70-4fbf-a7a5-33665bb908ad"
>
</ReqRef><ReqRef
 Id="2559c745-3a6f-444a-b3bd-fb143a2a1fc6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e664de52-c95e-45a0-8e42-e3bbcb3d67a1"
>
</ReqRef><ReqRef
 Id="9221690b-b0bc-4a5c-9307-9de49243cfef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e26a34c-60d6-4a61-b9ea-9147b49412f4"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d645e84f-c87d-4359-ba28-bae5edf05206"
>
</ReqRef><Comment>Handles Track Condition Change of Traction System packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="08e11111-2014-42e6-98f6-54a7fe1b3c8e"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="9fda324c-48ab-40d4-a6c3-a266822c2cb5"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0720e95d-207d-40f6-9fb3-40fbbf1628f7"
>Kernel.TrackDescription.TrackConditions.TractionSystems.HandleTractionSystemProfile(
    Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM, 
    aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Station Platforms available"
 Guid="848f07ff-38f9-43db-a24b-426c19fd0b9f"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="86fe59f8-52b0-4db0-ac6a-f2b2dc6a5150"
>
</ReqRef><ReqRef
 Id="47c59e98-996c-4daa-84b7-bda20f4e45ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fda02217-3575-4818-8aa9-e47e3ef07114"
>
</ReqRef><ReqRef
 Id="0be2ea06-0c8b-4622-9a32-bd8954c01555"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e1f6383c-4c01-438c-a0ac-2d720dcd42c1"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b9cdbfd-6403-4fdb-b2ae-100e777439b8"
>
</ReqRef><Comment>Handles Track Condition Station Platforms packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="c3cf8574-ecaa-4d54-b4cf-cc3262950012"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_STATION_PLATFORMS.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="7f7b7b5a-c73f-4577-a4be-fd53a96683e6"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e37299ce-6e60-4015-9897-e33c8b3ca56c"
>Kernel.TrackDescription.TrackConditions.StationPlatform.SPTrackConditionProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_STATION_PLATFORMS, aDistanceFromRef =&gt; aDistance)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Virtual Balise Cover Order available"
 Guid="feba58f7-b47c-4901-a9e9-6ee8cfbe6e91"
>
<ReqRef
 Id="c7942b2d-7ebd-4feb-904d-0b6f4653b2a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4071e969-5a7d-440c-85f7-9c5bbdbe6636"
>
</ReqRef><ReqRef
 Id="b7cd2da7-45be-44f8-893a-a97c68151f82"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a243efc7-9e91-4202-ba05-9c82a530ed2b"
>
</ReqRef><ReqRef
 Id="e3da46a5-96c4-40d3-9e8d-24a6c6bc8f12"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed6b60c2-644f-40ed-a850-3e20c2f00bc8"
>
</ReqRef><Comment>Handles Virtual Balise Cover Order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e115cfb9-acb3-4a62-9d4f-531cce8adebf"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.VIRTUAL_BALISE_COVER_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="d0fbabae-a7ff-4cd8-afd7-acf8eb4f6c50"
>Kernel.AcceptInformation.VirtualBaliseCoverOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="50f67d89-da94-4bb0-b44b-2f9d06b85685"
>Kernel.VirtualBaliseCover.VBCReceivedFromBalise( Packet.TRACK_TO_TRAIN.VIRTUAL_BALISE_COVER_ORDER )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="130"
 Y="210"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleTelegram"
 Guid="99858b9d-1417-47df-8644-63e0b422c4ff"
>
<ReqRef
 Id="f0ea8f90-356c-47de-a7fd-4827ae488f00"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fa0d04f8-14f6-4f19-a3a7-3bc3330b1215"
>
</ReqRef><Comment>Handles a new complete balise group message (when all its balise messages have been received). There are several steps:
- Test if the new BG is linked and has to be considered as a new LRBG
- If the new BG is not linked and is marked as unlinked, its information has to be considered
- After that all the packets of this BG are handled

Some generic packets need to know whether they are infilled or not 
(e.g. Linking), hence the infilledTelegram parameter.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="a26ba75b-6d2a-41ca-ab13-bd5ff4eb3365"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="cc8333ee-b612-45d4-a877-4b2dce380272"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistance"
 Guid="dc0e7899-07fe-4c5d-b58e-71e5c9feb626"
>
</Parameter><Parameter
 Type="Boolean"
 Name="infilledTelegram"
 Guid="4db520ae-99f8-4c8e-b7fb-ab0e38d5c739"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle balise telegram"
 Guid="f6523a73-b90d-4f95-8f4c-448ca057bd7d"
>
<ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84b9cb4b-0d98-4456-ba5b-3d807059f356"
>
</ReqRef><ReqRef
 Id="282cca1e-53d5-447c-b9a4-589f5627a991"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="556c6c8a-94a0-4c4d-bdd4-c158dc2988fa"
>
</ReqRef><ReqRef
 Id="30187272-dc83-4027-afd9-a7a9754c22a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="413a5e48-677c-46a2-a3aa-80991b4b5d91"
>
</ReqRef><ReqRef
 Id="766f0274-5b6e-4050-a48d-226dccf68782"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dd5d0d2-89b4-4df4-b25c-b7e32a39e27f"
>
</ReqRef><Comment>Handles the packets received within the current balise telegram and applies the linking reaction, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle balise telegram"
 Guid="fe32348d-91f9-476a-97ec-c3c2f59fcb40"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="feca666a-c800-4808-8ad5-6479427df552"
>APPLY Packets.HandlePacket(
  Packet=&gt;X, 
  NID_BG=&gt;Message.NID_BG,
  MessageOrientation =&gt; MessageOrientation,
  aDistance =&gt; aDistance,
  infilledPacket =&gt; infilledTelegram
) 
ON Message.Sequence1 | 
(
  X != MAOfTelegram(Message)
    AND  
  X != ModeProfileOfTelegram(Message)
    AND  
  X != LevelOfTelegram(Message)
)</Action><Action
 Guid="b3c6e5e0-e2f2-45cb-8684-a9a4a0596fbe"
>Kernel.NationalValues.CheckNVValidity( NewNID_C =&gt; Message.NID_C )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="20"
 Y="210"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleConsistentMessage"
 Guid="f800b718-c1c5-4270-b280-bc814a553449"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="c238ead1-8ba7-4613-ae49-4288833ea80d"
 Guid="57f88de2-990f-44d3-991a-1909b344d05f"
>
</ReqRef><Comment>Handle the consistent message. It is called twice. Once on non-infill packets, once on infill packets.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="selectInfillPackets"
 Guid="193014b8-4ed7-484f-9049-729b8c6be5e3"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistance"
 Guid="d536133d-7f09-4400-a22b-a718712c7ace"
>
</Parameter><Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="9fb354e6-3bf1-42ca-8be7-5f10705eb6b1"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle Level Transition Order in balise telegrams"
 Guid="099aa022-31f0-4aae-aa5c-48dc76bdc4cb"
>
<ReqRef
 Id="b5196e2e-7094-49d5-ac1b-4bcf4821fd9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="56b5d922-3f2f-4e44-ac07-dff89ba10aa0"
>
</ReqRef><Comment>First, handle the LevelTransitionOrder packets in all the telegrams.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle level transition order packet in balise telegrams"
 Guid="ef4783a5-3854-483a-8f53-38b1d9e72164"
>
<ReqRef
 Id="c858a6b4-4d06-4efa-83f0-ac640ef8c373"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e4ea8db-5735-48ad-b453-daa31396cfc8"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2ee57ad5-960b-4923-b510-882802803ed1"
>APPLY Packets.HandlePacket(
    Packet =&gt; Packets.LevelOfTelegram(
        Infill.CurrentInfillTelegram(
            selectInfill =&gt; selectInfillPackets, 
            aTelegram =&gt; X.Telegram)
         ),
    NID_BG =&gt; GetNID_BG( aBaliseGroup ),
    MessageOrientation =&gt; BGOrientation( aBaliseGroup ),
    aDistance =&gt; aDistance,
    infilledPacket =&gt; selectInfillPackets
) ON aBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Clear mode profile"
 Guid="843333de-ec8d-428b-8030-16cf2ddff736"
>
<ReqRef
 Id="74a25803-8c28-4708-b506-55a76bd8bc21"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5e05338d-e93e-4b29-8cdd-fb151214b19c"
>
</ReqRef><ReqRef
 Id="2a495f6e-680c-4def-a6b5-d8bcd1f41a9d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97826179-bdde-4b4e-8abd-830754d61041"
>
</ReqRef><ReqRef
 Id="413303d1-7e96-41b7-a03e-3a9d6380e93a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ea6272d-693d-4454-8053-be46bf1f2925"
>
</ReqRef><ReqRef
 Id="3d5f5d1a-384b-4310-bf6b-e35579ea0ee5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="338c7e89-32fe-495e-ab8e-24ce2eac1f5b"
>
</ReqRef><ReqRef
 Id="bd3f7106-e2c1-465f-be7e-f47543c5f94b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8321d3b2-218c-406e-a5c5-f55df74207a9"
>
</ReqRef><Comment>On reception of a new MA, the previously stored mode profile has to be deleted unless the new MA is an infill MA in which case only that part of the mode profile which is beyond the infill reference location should be deleted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Clear mode profile if MA received"
 Guid="e44a7aeb-06b0-41ca-b5de-6a1c63e40993"
>
<PreConditions>
<PreCondition
 Guid="d1b129b9-3710-484a-a016-43785cf9051e"
><Comment>Check for the presence of an MA packet within infill or non-infill packets depending on the selectInfillPackets parameter.</Comment>
THERE_IS X IN aBaliseGroup | (THERE_IS V IN Infill.CurrentInfillTelegram(selectInfillPackets, X.Telegram).Sequence1 | ( Available ( V.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY ) OR Available ( V.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY ) ))</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="MA packet available"
 Guid="e0157cf8-5a4a-4793-9350-acf28037c283"
>
<Comment>Delete ModeProfile or part of it depending on whther the new MA is infilled or not.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Infill MA"
 Guid="15714707-69ca-42cc-896d-c5d145bdea7a"
>
<Comment>Delete ModeProfile beyond infill location reference.</Comment>
<PreConditions>
<PreCondition
 Guid="197e5eb7-ca0d-49fc-80ef-f9a9c61c8aa9"
>selectInfillPackets</PreCondition></PreConditions>
<Actions>
<Action
 Guid="840d737c-0711-45fa-aa7c-6d7614ac52b5"
><Comment>In this case, &apos;aDistance&apos; will be the distance to the infill reference location.</Comment>
Kernel.MA.ModeProfile.DeleteModeProfileBeyondLocation 
(
  aDistance
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Non Infill MA"
 Guid="7a2dc097-6738-4924-93b5-ea2506a1f22e"
>
<Comment>Delete ModeProfile.</Comment>
<PreConditions>
<PreCondition
 Guid="d8706bcf-8b81-4e20-975f-d383d003ebcc"
>NOT selectInfillPackets</PreCondition></PreConditions>
<Actions>
<Action
 Guid="53fff272-02d3-4959-ab47-d2fcffd42bb3"
>Kernel.MA.ModeProfile.Profile &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle general packets in balise telegrams"
 Guid="afdc7b3a-9acf-4598-a628-bdf218a7beb3"
>
<Comment>First, handle the &quot;non-MA&quot; packets in all the telegrams. Some generic packets 
need to know whether they are infilled or not (e.g. Linking), hence the 
infilledTelegram parameter.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle general packets in balise telegrams"
 Guid="e7516273-ac16-4172-b145-c531401e38e3"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="71fe05ea-2e2a-441e-a4c5-fa8e04162cb8"
>APPLY Packets.HandleTelegram( Message =&gt; Infill.CurrentInfillTelegram(selectInfillPackets, X.Telegram), 
MessageOrientation =&gt; BGOrientation(aBaliseGroup),
aDistance =&gt; aDistance,
infilledTelegram =&gt; selectInfillPackets
 ) 
ON aBaliseGroup | ToBeHandled ( aMessage =&gt; X , aBaliseGroup =&gt; aBaliseGroup )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle MA packet in balise telegrams"
 Guid="8bf64490-ce74-42a8-aa77-fcbf0d2bf6c9"
>
<ReqRef
 Id="3d5f5d1a-384b-4310-bf6b-e35579ea0ee5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a19ddb8b-c51f-40ee-be8e-1b46188a2170"
>
</ReqRef><ReqRef
 Id="bd3f7106-e2c1-465f-be7e-f47543c5f94b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="867638d8-ef8f-425d-9c86-1dbd606aacc8"
>
</ReqRef><ReqRef
 Id="f0ea8f90-356c-47de-a7fd-4827ae488f00"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ffa78bcb-296a-4072-a140-c57067760098"
>
</ReqRef><Comment>Then, handle the movement authority packet.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle MA packet in balise messages"
 Guid="ae268b7a-92cb-4598-bc02-a2f04005d973"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2b02118c-1658-46b1-bae6-dc0ff97ec611"
>APPLY Packets.HandlePacket(
    Packet =&gt; Packets.MAOfTelegram ( 
         Infill.CurrentInfillTelegram(
            selectInfill =&gt; selectInfillPackets,
            aTelegram =&gt; X.Telegram )),
    NID_BG =&gt; GetNID_BG(aBaliseGroup) ,
    MessageOrientation =&gt; BGOrientation( aBaliseGroup ),
    aDistance =&gt; aDistance,
    infilledPacket =&gt; selectInfillPackets
)
ON aBaliseGroup | ToBeHandled ( aMessage =&gt; X, aBaliseGroup =&gt; aBaliseGroup  )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle Mode Profile packet in balise telegram"
 Guid="0df23762-fca4-4e00-9a26-27caab55459e"
>
<ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b907baf-4341-4167-b523-4aae1850c852"
>
</ReqRef><ReqRef
 Id="6f370d19-a99b-404b-9718-80331a17d9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="211eb7c7-66d8-48d5-9e32-d1658184c3de"
>
</ReqRef><ReqRef
 Id="3d5f5d1a-384b-4310-bf6b-e35579ea0ee5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d70821fe-7e49-4550-a19b-6ee04572ec30"
>
</ReqRef><ReqRef
 Id="bd3f7106-e2c1-465f-be7e-f47543c5f94b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3575957d-8238-4e1c-bc07-57ce9f8d2f8d"
>
</ReqRef><Comment>After the MA has been handled, the Mode Profile can eventually be accepted (only if the MA was accepted).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle Mode Profile packet in balise telegram"
 Guid="5f12ad32-9f33-4855-a8a7-0406c9644f44"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="42ecabaf-6fb9-4cf2-887a-2b6158ff1c6b"
>APPLY HandlePacket(
    Packet =&gt; ModeProfileOfTelegram(
        Infill.CurrentInfillTelegram(
            selectInfill =&gt; selectInfillPackets,
            aTelegram =&gt;  X.Telegram )
        ),
    NID_BG =&gt; GetNID_BG( aBaliseGroup ),
    MessageOrientation =&gt; BGOrientation( aBaliseGroup ),
    aDistance =&gt; aDistance,
    infilledPacket =&gt; selectInfillPackets
)
ON aBaliseGroup | ToBeHandled ( aMessage =&gt; X, aBaliseGroup =&gt; aBaliseGroup )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
</NameSpace>
