<NameSpace
 X="10"
 Y="10"
 Width="100"
 Height="50"
 Name="General"
 Guid="001c183d-5aef-4e1a-8af5-a5486825cba9"
>
<NameSpaces>
</NameSpaces>
<Structures>
<Structure
 Default=""
 X="550"
 Y="90"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TrackConditionStruct"
 Guid="9551ddbd-7e41-4f3e-9604-48e640b42f6f"
>
<ReqRef
 Id="b95a22fb-0a06-4d2a-b9f8-73a082712d4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="590f237b-904e-4cbb-ab57-8ee1ee6c0560"
>
</ReqRef><Comment>Contains the 11 standard track conditions and says whether they are active</Comment>
<StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="NonStoppingArea"
 Guid="1cd8a95c-7b69-4c16-8052-5a5579512286"
>
<ReqRef
 Id="4fa2b4ab-63de-48d0-8aab-49412bba6dbd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5d0d9a32-4391-4279-8e64-bde266f80297"
>
</ReqRef><Comment>Are where the train is not permitted to stop</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="TunnelStoppingArea"
 Guid="218f58fb-b378-4b4b-8cbd-47fcda70251c"
>
<ReqRef
 Id="e99e7257-597e-43d5-a002-54bb45f5028c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="21a3f7b5-ef12-4e95-91b9-4fc09a285e11"
>
</ReqRef><Comment>Area in a tunnel where the train is permitted to stop</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SoundHorn"
 Guid="8a521c1e-b818-4fb8-b3f9-c803e34aacea"
>
<ReqRef
 Id="55f1d2d0-00ef-4dfe-82a4-6a5f97d8f297"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="abdb9841-e825-47fb-9e28-f0917032cb3f"
>
</ReqRef><Comment>The driver should sound the hor,n as long as the train is in this section</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="PowerlessSection_LowerPantograph"
 Guid="755b0b97-53f9-401d-b6bc-1c9df5e14526"
>
<ReqRef
 Id="7fb81a1f-d79e-4219-b000-e6ca80f0fad5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1588fa7-a246-4452-b62b-e8cca569178a"
>
</ReqRef><Comment>The train&apos;s pantograph should be lowered in the upcoming powerless section</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="RadioHole"
 Guid="b51eecdd-85ea-44ae-8ba1-f535137b616d"
>
<ReqRef
 Id="ce600cdf-eced-43b6-addb-8f9bb1416880"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="239d29e6-5e2d-4181-ab4d-1790a7fb5189"
>
</ReqRef><Comment>No RBC connections in the area</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="AirTightness"
 Guid="5735b8a6-9925-42cc-b12b-147466e98459"
>
<ReqRef
 Id="a01c8799-5739-48a1-a667-753dbdb30d26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="34db9f5d-1fb3-4756-8e8a-233bb40ea33c"
>
</ReqRef><Comment>The air conditioning intake should be cut off</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffRegenerativeBrake"
 Guid="b7a82e4e-cbf0-410d-b843-dbef9970d579"
>
<ReqRef
 Id="f15d27d3-b5ee-451f-8207-28272d95b5e3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e648763a-da2c-4096-8094-f8fb24bfe30e"
>
</ReqRef><Comment>The regenerative brake should be disabled</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffEddyCurrentBrakeForSB"
 Guid="8b8c14d0-3c94-4a2c-bdeb-aaefdf766996"
>
<ReqRef
 Id="6eac506c-d1f4-4981-81f7-4f88b90d86a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e29759c-974c-4b1e-9ebc-753fc511e2cc"
>
</ReqRef><Comment>The eddy current brake should be disabled for the service brake</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffMagneticShoeBrake"
 Guid="07fafbc5-91ec-4f97-9924-98628f6f36b9"
>
<ReqRef
 Id="fc19b494-1816-4d9e-b9a9-6452f06d0582"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="943dd1d0-8bd9-49d4-a6be-d39f804e007a"
>
</ReqRef><Comment>The magnetic shoe brake should be disabled</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="PowerlessSection_SwitchOffTheMainPowerSwitch"
 Guid="ce6cf55a-da2f-4c6f-b095-ccab9fbc4743"
>
<ReqRef
 Id="ef395ab0-84e3-439a-9e7e-7ef8bb61984c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3ddbc6e9-968b-4110-889f-c0a1545b148e"
>
</ReqRef><Comment>Powerless area where the main power switch should be turned off</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffEddyCurrentBrakeForEB"
 Guid="5728745d-23f3-4d28-97f1-6e56dc3dada8"
>
<ReqRef
 Id="caccfa50-6817-419a-bde5-f5880f4e795e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d4bebd7-d02b-4733-bb32-9b2399eed347"
>
</ReqRef><Comment>The eddy current brake should be disabled for the emergency brake</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="380"
 Y="90"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TrackConditionInformationStruct"
 Guid="b131c7c4-48fb-4898-b13b-188aab27e08c"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18c99035-99e3-42cf-9048-8bdafcea014e"
>
</ReqRef><ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fba870a3-6097-4b32-b2a1-aed150b7287d"
>
</ReqRef><ReqRef
 Id="588756eb-1786-4776-86ae-3aaa296881a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="154d2d7b-48a0-4fbd-b6fa-8b24dc0e8118"
>
</ReqRef><Comment>Structure holding the information indicating a change in the track conditions</Comment>
<StructureElement
 TypeName="BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Location"
 Guid="01907eb8-5281-475e-99e9-b01b9ff48ab3"
>
<ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec871a23-1a9c-48f4-8adc-da607bcf6cba"
>
</ReqRef><Comment>Start location of the track condition</Comment>
</StructureElement><StructureElement
 TypeName="TrackConditionStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
 Guid="4d07defa-ff4a-4deb-bee7-fb7676afdf6e"
>
<ReqRef
 Id="b95a22fb-0a06-4d2a-b9f8-73a082712d4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb0a3a0e-53ac-46c5-8da4-fd9b78778a80"
>
</ReqRef><Comment>Which track conditions are in effect</Comment>
</StructureElement><Interfaces>
<StructureRef
 Name="BaseTypes.LocationInterface"
 Guid="7181115f-3bac-40d9-bbf1-aefc93ea2da5"
>
</StructureRef></Interfaces>
</Structure></Structures>
<Collections>
<Collection
 TypeName="TrackConditionInformationStruct"
 MaxSize="20"
 Default="[]"
 X="380"
 Y="0"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="TrackConditions"
 Guid="a62e502d-64a2-445d-a8f7-47bda4192457"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8d9da7a2-9205-4e18-baa7-5861eec9b346"
>
</ReqRef><ReqRef
 Id="7dc8d485-8ec6-42c9-8941-24c0652f1455"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed25c3de-fddf-4846-a080-c5c953bd66d6"
>
</ReqRef><Comment>Collection of TrackConditionInformation items. Is the type of TCProfile</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="BaseTypes.Distance"
 Default=""
 X="440"
 Y="240"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="EndSectionDistance"
 Guid="ab2ac694-c9e0-4902-892f-50aa0730adfe"
>
<ReqRef
 Id="00dfa999-7dd3-4fe9-a2d0-8fab1506a7d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6dee63ba-4275-459b-9354-2f3bf2b50025"
>
</ReqRef><ReqRef
 Id="71debd8d-545a-49ca-835b-4ce037e22fb7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94ba3ec5-9d56-46b7-a211-c649fc3f1362"
>
</ReqRef><ReqRef
 Id="75f0036b-52d0-4886-96af-89590c44b242"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="31c2a7de-bb4f-41a0-a2b9-d4ba035f7c28"
>
</ReqRef><Comment>Returns the location of the end of the section, based on the start and the type of track condition</Comment>
<Parameters>
<Parameter
 Type="Messages.M_TRACKCOND"
 Name="TCType"
 Guid="2bb340ea-4814-4c8b-8bb6-b797bcdc4137"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="Distance"
 Guid="800a9eed-b2c0-4360-a17f-2ed5c4fbd5ef"
>
</Parameter><Parameter
 Type="BaseTypes.Length"
 Name="Length"
 Guid="9e084487-2031-48b1-99b2-5d028d4893db"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Ends at front of train"
 Guid="81c4d603-6bff-4634-b665-5e389cd153d3"
>
<Comment>The end of powerless sections, tunnel stopping areas and sound horns are when the front of the train reaches the end</Comment>
<PreConditions>
<PreCondition
 Guid="6e8d5518-ecd2-4e1d-aa9a-8366fc7abb62"
>(TCType == Messages.M_TRACKCOND.Powerless_section___lower_pantograph__Initial_state__not_powerless_section)
 OR 
(TCType == Messages.M_TRACKCOND.Powerless_section___switch_off_the_main_power_switch__Initial_state__not_powerless_section)
 OR 
(TCType == Messages.M_TRACKCOND.Sound_horn__Initial_state__no_request_for_sound_horn)
 OR 
(TCType == Messages.M_TRACKCOND.Tunnel_stopping_area__Initial_state__no_tunnel_stopping_area)</PreCondition></PreConditions>
<Expression>Distance + BaseTypes.LengthToDistance(Length)</Expression>
</Case><Case
 Name="Ends at back of train"
 Guid="eef0771b-7324-4051-81e0-e895746a3697"
>
<Comment>All other track conditions end when the back of the train crosses the section end</Comment>
<Expression>Distance + BaseTypes.LengthToDistance(Length) + BaseTypes.LengthToDistance(TrainData.TrainData.Value.TrainLength)</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionInformationStruct"
 Default=""
 X="110"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleTCPwhenEnteringGivenMode1"
 Guid="35f10299-f5ff-4c0d-b4f8-f78b962452bf"
>
<ReqRef
 Id="c1c2e72d-abfa-40cc-ab4e-10dd67d304e9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1f461114-8a3f-40d1-9dde-42626bb93364"
>
</ReqRef><Comment>On mode switch, resets a subset of the track conditions in all future profile points</Comment>
<Parameters>
<Parameter
 Type="TrackConditionInformationStruct"
 Name="TCPacket"
 Guid="8504f3e3-f3fd-458e-bae5-f4e2cebad52c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="HandleTCPwhenEnteringGivenMode1"
 Guid="83a0413c-e973-46d1-9bda-92bad763fadb"
>
<Comment>Reset all but NonStoppingArea, TunnelStoppingArea and SoundHorn</Comment>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct
{
    Location =&gt; TCPacket.Location,
    Value =&gt; TrackConditionStruct
    { 
        NonStoppingArea =&gt; TCPacket.Value.NonStoppingArea ,
        TunnelStoppingArea =&gt; TCPacket.Value.TunnelStoppingArea ,
        SoundHorn =&gt; TCPacket.Value.SoundHorn ,
        PowerlessSection_LowerPantograph =&gt; False,
        RadioHole =&gt; False,
        AirTightness =&gt; False,
        SwitchOffRegenerativeBrake =&gt; False,
        SwitchOffEddyCurrentBrakeForSB =&gt; False,
        SwitchOffMagneticShoeBrake =&gt; False,
        PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; False,
        SwitchOffEddyCurrentBrakeForEB =&gt; False
    }
}</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionInformationStruct"
 Default=""
 X="220"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="HandleTCPwhenEnteringGivenMode2"
 Guid="0483f942-5889-47b6-9389-754a7f066adf"
>
<ReqRef
 Id="81e057d0-016b-449f-8994-c2a6d7b34729"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1c4d285a-6897-4408-85af-d49d8a9d95bf"
>
</ReqRef><Comment>On mode switch, resets a subset of the track conditions in all future profile points</Comment>
<Parameters>
<Parameter
 Type="TrackConditionInformationStruct"
 Name="TCPacket"
 Guid="d9557982-b23b-4119-b4a0-6da78566f568"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="HandleTCPwhenEnteringGivenMode2"
 Guid="e6321890-fcd5-4b05-a315-f53dc94bfef3"
>
<Comment>Reset NonStoppingArea, TunnelStoppingArea and SoundHorn</Comment>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct
{
    Location =&gt; TCPacket.Location,
    Value =&gt; TrackConditionStruct
    { 
        NonStoppingArea =&gt; False,
        TunnelStoppingArea =&gt; False,
        SoundHorn =&gt; False,
        PowerlessSection_LowerPantograph =&gt; TCPacket.Value.PowerlessSection_LowerPantograph,
        RadioHole =&gt;TCPacket.Value.RadioHole ,
        AirTightness =&gt; TCPacket.Value.AirTightness ,
        SwitchOffRegenerativeBrake =&gt;TCPacket.Value.SwitchOffRegenerativeBrake ,
        SwitchOffEddyCurrentBrakeForSB =&gt; TCPacket.Value.SwitchOffEddyCurrentBrakeForSB ,
        SwitchOffMagneticShoeBrake =&gt; TCPacket.Value.SwitchOffMagneticShoeBrake ,
        PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; TCPacket.Value.PowerlessSection_SwitchOffTheMainPowerSwitch,
        SwitchOffEddyCurrentBrakeForEB =&gt; TCPacket.Value.SwitchOffEddyCurrentBrakeForSB
    }
}</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="220"
 Y="240"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="IsInsideRadioHole"
 Guid="0c0fb865-3ccc-4d90-b7ca-cbd61d842b50"
>
<ReqRef
 Id="558b2068-001d-4f9f-902b-2cd23fb269d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5fd492e8-d3a2-4e29-a0d7-f7dc18d44964"
>
</ReqRef><ReqRef
 Id="e36dd5fc-81ea-4253-8535-4e5b4afd1b54"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a6c240b-d646-4652-b75a-8ad149bc7cdc"
>
</ReqRef><Comment>Indicates if there is an applicable track condition for radio hole</Comment>
<Cases>
<Case
 Name="Value"
 Guid="d500abeb-937a-4158-bde3-df9a023e35ff"
>
<Comment>Returns True if the train is currently inside a RadioHole</Comment>
<Expression>Kernel.TrackDescription.TrackConditions.General.CurrentConditions().RadioHole</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionStruct"
 Default=""
 X="330"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CombineConditions"
 Guid="0aa6f792-317d-417a-9d75-100ac37e2858"
>
<Comment>Combines the conditions held in two Track Conditions that apply to the same section of track 
(Condition A  OR  Condition B)</Comment>
<Parameters>
<Parameter
 Type="TrackConditionStruct"
 Name="Profile1"
 Guid="fe7b67e3-89d5-4779-a638-0bb141b805ee"
>
</Parameter><Parameter
 Type="TrackConditionStruct"
 Name="Profile2"
 Guid="b598db9e-9187-4717-8a79-2f0205c0e215"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Combine"
 Guid="87af9430-62ad-49c7-b1ad-abd576e61c85"
>
<Comment>Returns the combination of the two profiles</Comment>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionStruct
{
    NonStoppingArea =&gt; (Profile1.NonStoppingArea OR Profile2.NonStoppingArea),
    TunnelStoppingArea =&gt; (Profile1.TunnelStoppingArea OR Profile2.TunnelStoppingArea),
    SoundHorn =&gt; (Profile1.SoundHorn OR Profile2.SoundHorn),
    PowerlessSection_LowerPantograph =&gt; (Profile1.PowerlessSection_LowerPantograph OR Profile2.PowerlessSection_LowerPantograph),
    RadioHole =&gt; (Profile1.RadioHole OR Profile2.RadioHole),
    AirTightness =&gt; (Profile1.AirTightness OR Profile2.AirTightness),
    SwitchOffRegenerativeBrake =&gt; (Profile1.SwitchOffRegenerativeBrake OR Profile2.SwitchOffRegenerativeBrake),
    SwitchOffEddyCurrentBrakeForSB =&gt; (Profile1.SwitchOffEddyCurrentBrakeForSB OR Profile2.SwitchOffEddyCurrentBrakeForSB),
    SwitchOffMagneticShoeBrake =&gt; (Profile1.SwitchOffMagneticShoeBrake OR Profile2.SwitchOffMagneticShoeBrake),
    PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; (Profile1.PowerlessSection_SwitchOffTheMainPowerSwitch OR Profile2.PowerlessSection_SwitchOffTheMainPowerSwitch),
    SwitchOffEddyCurrentBrakeForEB =&gt; (Profile1.SwitchOffEddyCurrentBrakeForEB OR Profile2.SwitchOffEddyCurrentBrakeForEB)
}</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionStruct"
 Cacheable="TRUE"
 Default=""
 X="330"
 Y="240"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="CurrentConditions"
 Guid="fb96e527-60c0-4a0c-a1a9-051dc1c5cc85"
>
<ReqRef
 Id="00dfa999-7dd3-4fe9-a2d0-8fab1506a7d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8f34a726-2224-4e49-8c55-2804bab18db4"
>
</ReqRef><ReqRef
 Id="75f0036b-52d0-4886-96af-89590c44b242"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="222f4bcd-2a1c-413f-a896-71284a305776"
>
</ReqRef><ReqRef
 Id="00a69e16-494d-4601-947a-02a6541733da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e4595ffb-5b27-485f-82ac-12af29025e7e"
>
</ReqRef><ReqRef
 Id="444d11ee-84f0-4837-8c17-f111d045857d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="261a5a4f-476b-4a4e-8d40-65f0ed0c00f9"
>
</ReqRef><ReqRef
 Id="a2d32abf-08a0-4bc5-b97e-117e6a4fd998"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a0a9df9-007a-4006-8191-4c16e10f4c2b"
>
</ReqRef><Comment>Gives the current track conditions
This function is explained in ErtmsFormalSpecs/doc/specs/ModellingNotes</Comment>
<Cases>
<Case
 Name="Value"
 Guid="8b949ae1-4434-4dff-9942-d3de6084c8e3"
>
<Comment>For most profiles, the starting point is when the max safe front end of the train passes the location specified in the message and the end point is when the min safe rear end passes the location + the section length. (the exceptions to this are powerless sections (which use the min safe front end of the train for the end point), and tunnel stopping and sound horn areas (which use the estimated front end of the train).
When this is recorded in TCProfile, the end points are adjusted so that they are measured with respect to the front end of the train.
When the train passes over a profile point, it doesn&apos;t know if that point marks a start of section, end of section or even both. If it is a start of section, the condition takes effect as soon as the max safe front end of the train passes over it. If it is an end, the condition stays in effect until the min safe front end passes over it. So to account for all cases, each condition is given as the combination of the profile at the max safe front end and the min safe front end of most conditions, and the value at the estimated front end of the train for Tunnel Stopping Area and Sound Horn</Comment>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionStruct {
    NonStoppingArea =&gt; CombineConditions(
    Profile1=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)),
    Profile2=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min))
).NonStoppingArea,
    TunnelStoppingArea =&gt; ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom)).TunnelStoppingArea,
    SoundHorn =&gt; ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom)).SoundHorn,
    PowerlessSection_LowerPantograph =&gt; CombineConditions(
    Profile1=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)),
    Profile2=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min))
).PowerlessSection_LowerPantograph,
    RadioHole =&gt; CombineConditions(
    Profile1=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)),
    Profile2=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min))
).RadioHole,
    AirTightness =&gt; CombineConditions(
    Profile1=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)),
    Profile2=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min))
).AirTightness,
    SwitchOffRegenerativeBrake =&gt; CombineConditions(
    Profile1=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)),
    Profile2=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min))
).SwitchOffRegenerativeBrake,
    SwitchOffEddyCurrentBrakeForSB =&gt; CombineConditions(
    Profile1=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)),
    Profile2=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min))
).SwitchOffEddyCurrentBrakeForSB,
    SwitchOffMagneticShoeBrake =&gt; CombineConditions(
    Profile1=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)),
    Profile2=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min))
).SwitchOffMagneticShoeBrake,
    PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; CombineConditions(
    Profile1=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)),
    Profile2=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min))
).PowerlessSection_SwitchOffTheMainPowerSwitch,
    SwitchOffEddyCurrentBrakeForEB =&gt; CombineConditions(
    Profile1=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Max)),
    Profile2=&gt;ProfileAtDistance(aDistance=&gt;TrainPosition.FrontEndPosition(DistanceIntervalEnum.Min))
).SwitchOffEddyCurrentBrakeForEB 
}</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionStruct"
 Cacheable="TRUE"
 Default=""
 X="440"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ProfileAtDistance"
 Guid="439dae37-429f-4e83-b249-e8a4f50717b5"
>
<ReqRef
 Id="b25e8d2d-5034-4a5d-bf39-2ddf58ec8b98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5df5cb37-7ff9-4e30-b3bd-e1e474f7931e"
>
</ReqRef><ReqRef
 Id="00a69e16-494d-4601-947a-02a6541733da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4019ad75-7934-4951-a2eb-fd0aba92d82b"
>
</ReqRef><ReqRef
 Id="444d11ee-84f0-4837-8c17-f111d045857d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89663c48-39fe-4659-a4e1-b1bcec95e1a4"
>
</ReqRef><ReqRef
 Id="a2d32abf-08a0-4bc5-b97e-117e6a4fd998"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="96a8a9dd-a2ba-48f0-b528-9e3d3110860f"
>
</ReqRef><Comment>Returns the profile for when the train position is the given distance.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="aDistance"
 Guid="2678be51-6010-4be4-96e2-76ffc257d512"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Previous conditions exist"
 Guid="4cdb4c07-7e8d-4b91-8869-34d03070a4e3"
>
<Comment>There are track conditions prior to the requested distance</Comment>
<PreConditions>
<PreCondition
 Guid="52fe1d2c-2078-4728-828e-aae8e72d359f"
>THERE_IS X IN Kernel.TrackDescription.TrackConditions.General.TCProfile | (X.Location &lt;= aDistance)</PreCondition></PreConditions>
<Expression>(LAST GenCond IN TCProfile | GenCond.Location &lt;= aDistance).Value</Expression>
</Case><Case
 Name="Otherwise"
 Guid="264e9b1f-172c-4ce9-9266-3c27430f3c9f"
>
<Comment>There are no track conditions that apply before the requested distance</Comment>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionStruct { }</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionInformationStruct"
 Default=""
 X="1"
 Y="181"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MakeTCProfilePoint"
 Guid="4d777606-3c03-4815-8f35-4fe5cdec9500"
>
<Comment>Creates a TrackConditionInformation structure from the value received from the trackside.
The use of profile points and the functions in this namespace can be found in ErtmsFormalSpecs/doc/specs/ModellingNotes</Comment>
<Parameters>
<Parameter
 Type="Messages.M_TRACKCOND"
 Name="TCType"
 Guid="0b2c1829-e9bd-489b-87df-97795d5d45fe"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="Location"
 Guid="49845eb0-ef22-4286-90b0-35ff896faf06"
>
</Parameter><Parameter
 Type="Boolean"
 Name="EndOfSection"
 Guid="e9febe12-8e31-4a9e-b038-8c1552dfec67"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="End of a received section, return to previous values"
 Guid="63fce524-59da-424b-a430-6625a7b7d7bb"
>
<PreConditions>
<PreCondition
 Guid="5420d501-031e-434a-99af-4f3b301f6c0f"
>EndOfSection</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct
{
    Location =&gt; Location,
    Value =&gt; ProfileAtDistance(aDistance=&gt; Location)
}</Expression>
</Case><Case
 Name="AirTightness"
 Guid="8ed96d02-188e-4ec2-ba78-3772ab0d0247"
>
<PreConditions>
<PreCondition
 Guid="158d39b3-532d-4194-ade2-b55879fde745"
>TCType == Messages.M_TRACKCOND.Air_tightness__Initial_state__no_request_for_air_tightness</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{AirTightness=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="NonStoppingArea"
 Guid="6491c83f-ef64-42d0-a582-658398b2c07a"
>
<PreConditions>
<PreCondition
 Guid="e0e6c996-6144-43d4-a85f-0dbfd3f32b7d"
>TCType == Messages.M_TRACKCOND.Non_stopping_area___tunnel__Initial_state__stopping_permitted</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{NonStoppingArea=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="PowerlessSection_LowerPantograph"
 Guid="9e5e200a-1459-4059-89ba-d8716f95eab1"
>
<PreConditions>
<PreCondition
 Guid="144ceff9-9e3e-46b6-8e89-ef91a389cd51"
>TCType == Messages.M_TRACKCOND.Powerless_section___lower_pantograph__Initial_state__not_powerless_section</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{PowerlessSection_LowerPantograph=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="PowerlessSection_SwitchOffTheMainPowerSwitch"
 Guid="a0ed634e-a9c0-4861-b332-083563c2428e"
>
<PreConditions>
<PreCondition
 Guid="dde20f85-6d5d-4e69-a9a5-b7e93ff39437"
>TCType == Messages.M_TRACKCOND.Powerless_section___switch_off_the_main_power_switch__Initial_state__not_powerless_section</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{PowerlessSection_SwitchOffTheMainPowerSwitch=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="RadioHole"
 Guid="94e1163f-60ca-4dea-a0b8-93ff799883dd"
>
<PreConditions>
<PreCondition
 Guid="8fc8792d-fc48-4bd4-8936-90484c256055"
>TCType == Messages.M_TRACKCOND.Radio_hole__stop_supervising_T_NVCONTACT___Initial_state__supervise_T_NVCONTACT</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{RadioHole=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="SoundHorn"
 Guid="4a0335dd-7047-478c-883f-f3a754f5555b"
>
<PreConditions>
<PreCondition
 Guid="9fcd2282-2e72-4499-af37-7b619e32e280"
>TCType == Messages.M_TRACKCOND.Sound_horn__Initial_state__no_request_for_sound_horn</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{SoundHorn=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="SwitchOffEddyCurrentBrakeForEB"
 Guid="00ec2f78-d0c3-4974-b105-e53b92fb5fb1"
>
<PreConditions>
<PreCondition
 Guid="d7f70660-d556-4cdc-80b8-c7216f02f496"
>TCType == Messages.M_TRACKCOND.Switch_off_eddy_current_brake_for_emergency_brake__Initial_state__eddy_current_brake_for_emergency_brake_on</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{SwitchOffEddyCurrentBrakeForEB=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="SwitchOffEddyCurrentBrakeForSB"
 Guid="31bd1586-0706-49c6-99ce-de5797fc8d81"
>
<PreConditions>
<PreCondition
 Guid="2cef8605-475c-4208-8ff7-23b85212d584"
>TCType == Messages.M_TRACKCOND.Switch_off_eddy_current_brake_for_service_brake__Initial_state__eddy_current_brake_for_service_brake_on</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{SwitchOffEddyCurrentBrakeForSB=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="SwitchOffMagneticShoeBrake"
 Guid="6338213b-d521-4f31-a18c-42c9b6d2d8a3"
>
<PreConditions>
<PreCondition
 Guid="381a52ec-a69d-42a9-ad0d-c1dd0156bfc0"
>TCType == Messages.M_TRACKCOND.Switch_off_magnetic_shoe_brake__Initial_state__magnetic_shoe_brake_on</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{SwitchOffMagneticShoeBrake=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="SwitchOffRegenerativeBrake"
 Guid="89e90947-01a2-485a-a58f-448a68a822e4"
>
<PreConditions>
<PreCondition
 Guid="a69c371f-bec7-428e-b998-08bf43054fff"
>TCType == Messages.M_TRACKCOND.Switch_off_regenerative_brake__Initial_state__regenerative_brake_on</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{SwitchOffRegenerativeBrake=&gt;True} 
    )
}</Expression>
</Case><Case
 Name="TunnelStoppingArea"
 Guid="29928c6f-b392-41f1-ad23-d582af5e1b9b"
>
<PreConditions>
<PreCondition
 Guid="8447cc3f-c1b7-4388-9540-0b4c613ef5a8"
>TCType == Messages.M_TRACKCOND.Tunnel_stopping_area__Initial_state__no_tunnel_stopping_area</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct{
    Location =&gt; Location,
    Value =&gt; CombineConditions
    (
        Profile1=&gt; ProfileAtDistance(aDistance=&gt;Location),
        Profile2=&gt;TrackConditionStruct{TunnelStoppingArea=&gt;True} 
    )
}</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionInformationStruct"
 Default=""
 X="110"
 Y="240"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdatedTCProfile"
 Guid="4fb26885-3c76-4e5d-a634-a14c381f66a8"
>
<Comment>Takes a track condition profile point and data from a track condition packet and merges them together</Comment>
<Parameters>
<Parameter
 Type="TrackConditionInformationStruct"
 Name="Profile"
 Guid="5e72dc8c-9bf9-42d6-8475-f02835f4f524"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="Location"
 Guid="e53c813a-a0df-4125-8e67-99aa76bf25e8"
>
</Parameter><Parameter
 Type="BaseTypes.Length"
 Name="Length"
 Guid="4944568a-d745-4584-b44d-d3ae5f24b986"
>
</Parameter><Parameter
 Type="Messages.M_TRACKCOND"
 Name="TCType"
 Guid="c9af5f25-9e8e-4eb4-9695-3b1daeed46a0"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Profile to be combined"
 Guid="2bce27e9-b2ec-4f01-861f-b606243c3931"
>
<Comment>The profile is inside the section of track delimited by Distance and (Distance + Length)</Comment>
<PreConditions>
<PreCondition
 Guid="1fa5ac73-cb6b-439b-b27c-59259d113e7d"
>Profile.Location &gt;= Location</PreCondition><PreCondition
 Guid="13ab1164-7246-493c-b844-37fd7b218a61"
>Profile.Location &lt; Kernel.TrackDescription.TrackConditions.General.EndSectionDistance(
    TCType=&gt;TCType,
    Distance=&gt;Location,
    Length=&gt;Length
)</PreCondition></PreConditions>
<Expression>Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct
{
    Location =&gt; Profile.Location,
    Value =&gt; CombineConditions
    (
        Profile1 =&gt; Profile.Value,
        Profile2 =&gt; MakeTCProfilePoint
        (
            TCType =&gt; TCType,
            Location =&gt; Location,
            EndOfSection =&gt; False
        ).Value
    )
}</Expression>
</Case><Case
 Name="Otherwise"
 Guid="e16def7f-7165-4221-9cb5-8f8dbfb1754f"
>
<Comment>If the profile point is outside the section, it is unaffected by the new section</Comment>
<Expression>Profile</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 Name="DistanceToPoint"
 Guid="65f2e012-2f18-4acf-9ca4-83a3bc5dfa2d"
>
<Comment>Sums the distances of all points up to the start of the requested track condition.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.SubStructure1"
 Name="TrackCondition"
 Guid="d57c976f-5154-4bdd-81aa-410702be6b62"
>
</Parameter><Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Collection1"
 Name="Conditions"
 Guid="bb835330-4df1-4323-9928-aa6849a09721"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="FirstPointLocation"
 Guid="b7916204-d019-4886-a962-dbcb4475ed09"
>
</Parameter><Parameter
 Type="Messages.Q_SCALE"
 Name="Scale"
 Guid="a710922d-9883-423b-966c-8e4060d580e2"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="3781fa00-2d52-4cae-b847-30eca03cdbb6"
>
<Expression>REDUCE Conditions | NOT Before(
        ExpectedFirst =&gt; X,
        ExpectedSecond =&gt; TrackCondition,
        Collection =&gt; Conditions
    )
 USING X IN RESULT + MessageTypes.QScaleDistance(
        distance =&gt; X.D_TRACKCOND,
        scale =&gt; Scale
    )
 INITIAL_VALUE FirstPointLocation</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="1"
 Y="241"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="AddSectionToProfile"
 Guid="b009a873-079a-439e-88d4-ce0131898a9c"
>
<ReqRef
 Id="00dfa999-7dd3-4fe9-a2d0-8fab1506a7d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8fde21bb-6740-4be8-bd4f-a0003c816c62"
>
</ReqRef><ReqRef
 Id="75f0036b-52d0-4886-96af-89590c44b242"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="703ca9a3-65c8-4a50-b33d-ba63581eb1c1"
>
</ReqRef><ReqRef
 Id="71debd8d-545a-49ca-835b-4ce037e22fb7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d7222b57-4989-4bef-8428-833308a1be84"
>
</ReqRef><Comment>Takes a distance, a length and a track condition type and inserts them all in TCProfile</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="Distance"
 Guid="593b3e33-c06e-4d3e-a38d-aa1667c836e2"
>
</Parameter><Parameter
 Type="BaseTypes.Length"
 Name="Length"
 Guid="1116012c-b720-45ba-85a8-08a0e7d136b8"
>
</Parameter><Parameter
 Type="Messages.M_TRACKCOND"
 Name="TCType"
 Guid="00378ab1-f1e8-4ebd-bbd6-1eb07fdab0f3"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Add end of section"
 Guid="fa1bee7b-7c72-483b-a7c7-f899c6b1b808"
>
<Comment>It&apos;s important that the end of the section be added first, so that the profile is built properly</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="End of section is a new point"
 Guid="bf60bf58-4971-4952-b4d9-c3b151e71117"
>
<Comment>The end of the new section does not match any existing section boundaries
If there is already at a point at the end location, the values will not be changed</Comment>
<PreConditions>
<PreCondition
 Guid="5c2fd295-1fa0-4273-8634-53b3ce87e09e"
>NOT (THERE_IS X IN Kernel.TrackDescription.TrackConditions.General.TCProfile| X.Location == Kernel.TrackDescription.TrackConditions.General.EndSectionDistance(
    TCType =&gt; TCType,
    Distance =&gt; Distance,
    Length =&gt; Length
    )
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4b054b67-3098-417b-8cab-bb8d689d1032"
><Comment>EndSectionDistance provides the end location (in terms of the front end of the train) of the section</Comment>
INSERT Kernel.TrackDescription.TrackConditions.General.MakeTCProfilePoint(
TCType=&gt;TCType,
Location=&gt;Kernel.TrackDescription.TrackConditions.General.EndSectionDistance(
    TCType =&gt; TCType,
    Distance =&gt; Distance,
    Length =&gt; Length
    ),
EndOfSection=&gt;True
    )
IN
    Kernel.TrackDescription.TrackConditions.General.TCProfile</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Add start of section"
 Guid="81a8e7c3-caef-4433-99ad-920af5316b1f"
>
<Comment>After the end of the section is added, the start is added too</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Start of section is a new point"
 Guid="5dec3438-de77-49b3-bfe9-0dd5745bcb38"
>
<Comment>If the start of the section is a new point, add a TCProfilePoint to the TCProfile
If there is already a point at the start of the section, its conditions will be merged with the new one in the following step</Comment>
<PreConditions>
<PreCondition
 Guid="e75ca188-658d-4763-a32d-985d6154454c"
>NOT (THERE_IS X IN Kernel.TrackDescription.TrackConditions.General.TCProfile| X.Location == Distance)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="be8dab85-6e95-4b9e-b7b4-0a9c8968a606"
>INSERT Kernel.TrackDescription.TrackConditions.General.MakeTCProfilePoint(
    TCType =&gt; TCType,
    Location =&gt; Distance,
    EndOfSection =&gt; False
    )
IN
    Kernel.TrackDescription.TrackConditions.General.TCProfile</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Combine with intermediate points"
 Guid="0bcfb44a-1965-44ba-a1a6-c7e921aff7b7"
>
<Comment>Add the track condition to all the points inside the added section</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Combine with intermediate points"
 Guid="a411a708-c6b6-4c0e-8c34-b4ab01ef08a6"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0c73a213-20bf-4acb-9a85-b05e04dcdd19"
>Kernel.TrackDescription.TrackConditions.General.TCProfile&lt;- MAP Kernel.TrackDescription.TrackConditions.General.TCProfile USING X IN Kernel.TrackDescription.TrackConditions.General.UpdatedTCProfile(
    Profile =&gt; X,
    Location =&gt; Distance,
    Length =&gt; Length,
    TCType =&gt; TCType
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="110"
 Y="330"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleNewTrackCondition"
 Guid="f1d8b1e1-a151-4f17-94f5-0d5c099b6a36"
>
<Comment>Updates the track conditions according to the values of the packet received as parameter.
The handling of track conditions is decribed in  ErtmsFormalSpecs/doc/specs/ModellingNotes</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Message"
 Name="Packet"
 Guid="1d5c9f0a-7cfe-4ea2-8671-1b7b2f77ef0f"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistanceFromRef"
 Guid="f2ebbcae-8736-492a-8936-6acd40ca0709"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Remove old information and announcements"
 Guid="4c889b61-eb2b-4bd5-ba0d-91b2d6514374"
>
<ReqRef
 Id="07495681-fe6b-45c8-b0b9-9768f78e0985"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2114f3d4-5e6c-4a8e-941e-7c8d23133337"
>
</ReqRef><ReqRef
 Id="1cb531d4-2809-484c-bf3f-445bebb332ef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e03551e6-c169-4fdd-9991-46963f574ccf"
>
</ReqRef><Comment>When new data is received, all old data starting from the start of the new data is overwritten</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Remove old information"
 Guid="23d47766-bd5e-4cae-a557-9102df6d5fc2"
>
<ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d95e8494-eba9-4371-a5cb-ebaaef8a68b7"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e442a836-0892-422d-9982-9577731091f3"
>REMOVE ALL X.Location &gt;= aDistanceFromRef + MessageTypes.QScaleDistance(
    distance =&gt; Packet.D_TRACKCOND,
    scale =&gt; Packet.Q_SCALE
)
    IN TCProfile</Action><Action
 Guid="ad4e2691-c733-4e4d-8db1-ff6fd0667df6"
>REMOVE ALL X.Location &gt; Display.AnnouncementLocation(aTrackCondition=&gt;TrackConditionStruct{}, aDistance =&gt; aDistanceFromRef + MessageTypes.QScaleDistance(
    distance =&gt; Packet.D_TRACKCOND,
    scale =&gt; Packet.Q_SCALE
))
    IN Display.ActiveConditions</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Add first track condition + announcements"
 Guid="65ddcb36-4bef-42bb-8990-277543a93ade"
>
<Comment>Inserts the newly received track conditions in TCProfile</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert first point in the track conditions profile with corresponding announcements"
 Guid="a0e066da-f080-415a-aa9e-b727e25af178"
>
<ReqRef
 Id="13a5ea24-0fd2-4281-99df-f3585e1e8e67"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be00d504-2e1e-4736-b01b-1385f522a922"
>
</ReqRef><ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e4b3579-e957-48f5-958c-7d432de14dc1"
>
</ReqRef><ReqRef
 Id="d93685bd-18ea-422e-8641-3e9ed6427e66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f69fd2df-78c4-4e05-b977-e25bef8e94bd"
>
</ReqRef><ReqRef
 Id="b95a22fb-0a06-4d2a-b9f8-73a082712d4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6b483b8-9037-4c7b-9311-4b1741f8b72a"
>
</ReqRef><Comment>Handle the M_TRACKCOND, D_TRACKCOND and L_TRACKCOND fields in Packet</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="ac96795b-c14a-4b35-9f61-1888f3f2ce6e"
>Kernel.TrackDescription.TrackConditions.General.AddSectionToProfile(
    Distance =&gt; aDistanceFromRef + MessageTypes.QScaleDistance(
        distance =&gt; Packet.D_TRACKCOND,
        scale =&gt; Packet.Q_SCALE ),
    Length =&gt; MessageTypes.QScaleLength(
        length =&gt; Packet.L_TRACKCOND,
        scale =&gt; Packet.Q_SCALE ),
    TCType =&gt; Packet.M_TRACKCOND
)</Action><Action
 Guid="476cb606-a0af-42f5-b297-1cf9bb8e1672"
>Display.MakeAnnouncements(
    TCType =&gt; Packet.M_TRACKCOND,
    Distance =&gt; aDistanceFromRef + MessageTypes.QScaleDistance(
        distance =&gt; Packet.D_TRACKCOND,
        scale =&gt; Packet.Q_SCALE  ),
    Length =&gt; MessageTypes.QScaleLength(
        length =&gt; Packet.L_TRACKCOND,
        scale =&gt; Packet.Q_SCALE  )
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Add subsequent track conditions + announcements"
 Guid="1b213efd-92c3-4280-b0a5-4ab9fa631c4b"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert further points in the track condition and announcements profiles"
 Guid="f825e64f-589c-4c0b-9bed-6757f77d7c26"
>
<Comment>Handle Sequence1 in Packet</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="9f1d4d9f-5bbe-4618-a012-23fcf1167225"
>APPLY
    Kernel.TrackDescription.TrackConditions.General.AddSectionToProfile(
        Distance =&gt;
          DistanceToPoint(
             TrackCondition =&gt; X,
             Conditions =&gt; Packet.Sequence1,
             FirstPointLocation =&gt; aDistanceFromRef + MessageTypes.QScaleDistance(
                 distance =&gt; Packet.D_TRACKCOND,
                 scale =&gt; Packet.Q_SCALE ),
             Scale =&gt; Packet.Q_SCALE ),
        Length =&gt; MessageTypes.QScaleLength(
            length =&gt; X.L_TRACKCOND,
            scale =&gt; Packet.Q_SCALE ),
        TCType =&gt; X.M_TRACKCOND
    )
ON
    Packet.Sequence1</Action><Action
 Guid="afebcc0b-73d8-47ef-b24b-7b726330c6b0"
>APPLY
    Display.MakeAnnouncements(
        TCType =&gt; X.M_TRACKCOND,
        Distance =&gt; 
          DistanceToPoint(
             TrackCondition =&gt; X,
             Conditions =&gt; Packet.Sequence1,
             FirstPointLocation =&gt; aDistanceFromRef + MessageTypes.QScaleDistance(
                 distance =&gt; Packet.D_TRACKCOND,
                 scale =&gt; Packet.Q_SCALE ),
             Scale =&gt; Packet.Q_SCALE ) +
          MessageTypes.QScaleDistance(
            distance =&gt; X.D_TRACKCOND,
            scale =&gt; Packet.Q_SCALE ),
        Length =&gt; MessageTypes.QScaleLength(
            length =&gt; X.L_TRACKCOND,
            scale =&gt; Packet.Q_SCALE  )
    )
ON
   Packet.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="220"
 Y="330"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TrackConditionReceived"
 Guid="ffe9ac21-3e40-46fe-9612-29a0ab5ff84f"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9a7e103-3cbf-4851-8d37-2947666417e8"
>
</ReqRef><ReqRef
 Id="ee609856-411d-4bb2-ab88-76b574aa3013"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f6eba0fa-c8cd-4f2c-8496-061edf66f841"
>
</ReqRef><ReqRef
 Id="9eb67bec-5e3a-407d-8b6e-e3d49d57e883"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="033872d3-39d7-4d42-811d-c8bbaee83e50"
>
</ReqRef><Comment>This procedure is called when a new track condition profile is received. There are two cases:
  - If the initial states have to be resumed, the distance to where they have to be resumed is saved
  - If no initial states have to be resumed, the axle load profile is updated (done by the HandleNewTrackCondition procedure)</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Message"
 Name="Packet"
 Guid="d30fa5db-2c47-4413-b475-ba618d5e7a74"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistanceFromRef"
 Guid="0d4eacb7-dc40-435a-b0d8-b5ef36a21e10"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateTrackConditions"
 Guid="90a94ff8-c2f4-4bd8-ac3c-65c786db514b"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Initial states to be resumed"
 Guid="8cf096f7-b753-44fd-9730-942361ef7450"
>
<ReqRef
 Id="6b051981-5a69-4e3f-aabf-12c19aba8faa"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1bcc618a-01fd-497f-9002-0385e19df895"
>
</ReqRef><ReqRef
 Id="5b9cb291-20b3-4b57-b985-9777f8e49ebc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c9e4813-9b76-4011-9792-aff2dc3d390f"
>
</ReqRef><Comment>The packet contains &quot;reset track conditions&quot;</Comment>
<PreConditions>
<PreCondition
 Guid="8fabb5f7-5fa8-45f4-b36d-c0420a360baf"
>Packet.Q_TRACKINIT == Messages.Q_TRACKINIT.Empty_profile__initial_states_to_be_resumed</PreCondition><PreCondition
 Guid="01ebe7ba-e0ba-409b-82c0-915c9bc7139f"
>Kernel.ActiveFunctions.ManageTrackConditions_BrakeInhibition()
  OR  
Kernel.ActiveFunctions.ManageTrackConditions_SoundHorn()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cc227c70-643c-452b-b941-13c9a55589e2"
>REMOVE ALL X.Location &gt;= aDistanceFromRef + MessageTypes.QScaleDistance(
    distance=&gt;Packet.D_TRACKINIT,
    scale=&gt;Packet.Q_SCALE
    )
IN
    TCProfile</Action><Action
 Guid="b5b87575-a081-4006-956f-527bfabc9dfd"
>INSERT Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct
{
    Location =&gt; aDistanceFromRef + MessageTypes.QScaleDistance
    (
        distance =&gt; Packet.D_TRACKINIT,
        scale =&gt; Packet.Q_SCALE
    )
}
IN
    Kernel.TrackDescription.TrackConditions.General.TCProfile</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="No initial states to be resumed"
 Guid="3c74e934-0111-4385-92a4-03602e3e7b11"
>
<Comment>The packet contains track conditions information</Comment>
<PreConditions>
<PreCondition
 Guid="3d6d20c8-f705-4764-be32-ab6e2707a483"
>Packet.Q_TRACKINIT == Messages.Q_TRACKINIT.No_initial_states_to_be_resumed__profile_to_follow</PreCondition><PreCondition
 Guid="9414ff03-62f4-460a-b382-0d796a7af864"
>Kernel.ActiveFunctions.ManageTrackConditions_BrakeInhibition()
  OR  
Kernel.ActiveFunctions.ManageTrackConditions_SoundHorn()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c78472f5-3741-4e00-a564-1bebf1643278"
>Kernel.TrackDescription.TrackConditions.General.HandleNewTrackCondition( 
Packet =&gt; Packet, aDistanceFromRef =&gt; aDistanceFromRef )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="0"
 Y="330"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DeleteTrackConditionsBeyondLocation"
 Guid="989fe49b-37c1-4c66-a511-f29117c35c76"
>
<ReqRef
 Id="8cd5d7d8-c20a-4927-9990-dacc4a577a3e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8dae6473-17aa-461f-a094-17c1cf74be56"
>
</ReqRef><ReqRef
 Id="69c41e0d-de0a-4c0e-9b6d-32a32fdf13e2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7c0f0bfd-cab0-4550-952b-2def4193c0d0"
>
</ReqRef><ReqRef
 Id="2c2f3d46-b62b-44a6-a8ab-393ec946e9dd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7f7196fb-c1dd-4050-8ac3-b241f9ed4537"
>
</ReqRef><ReqRef
 Id="d7f09170-28ec-4015-8c03-8e1612c5ccc4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="962a86f3-c9ee-434f-a701-29eb3d9763c0"
>
</ReqRef><Comment>Deletes the general track conditions beyond the provided location.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Distance"
 Name="aLocation"
 Guid="041f2635-b66a-4f96-8332-8a803e7b164c"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Delete track conditions beyond the given location"
 Guid="99e0478f-2610-4fa1-9a8d-241636c916fd"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Delete track conditions beyond the given location"
 Guid="e7eebad8-67ec-4be9-bb70-3d131dfca805"
>
<PreConditions>
<PreCondition
 Guid="5bf0eea7-1dd6-4740-be51-61d4948a794d"
>Kernel.TrackDescription.TrackConditions.General.TCProfile != []</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Remove the elements beyond the given location"
 Guid="4a25e3af-0d39-44d6-bbc5-40e1f333b6f3"
>
<Comment>First, remove all the general track conditions that are beyond the provided location.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Remove the elements beyond the given location"
 Guid="a34510b1-6f54-41ae-8fd2-aff234cc09a6"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a5ae5f84-8f75-40c8-a285-7509f42ad9f6"
>Kernel.TrackDescription.TrackConditions.General.TCProfile &lt;- MAP Kernel.TrackDescription.TrackConditions.General.TCProfile | X.Location &lt;= aLocation USING X IN X</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle the last element"
 Guid="0384dd67-c8be-4f42-aa94-0a2ca8c588d5"
>
<Comment>Then, create the final element, with Value set to its default value (only if the current last element has Value different from its default value).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle the last element"
 Guid="559d1231-c317-43cf-afe0-8e1875bf617a"
>
<PreConditions>
<PreCondition
 Guid="8ed228f6-54a5-4023-8b84-264f65fc88d9"
>(LAST TC IN Kernel.TrackDescription.TrackConditions.General.TCProfile).Value != Kernel.TrackDescription.TrackConditions.General.TrackConditionStruct{}</PreCondition></PreConditions>
<Actions>
<Action
 Guid="62a1a552-8537-4e3b-8e25-fd1e617f491e"
>INSERT
  Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct
  {
    Location =&gt; aLocation,
    Value =&gt; TrackConditionStruct{}
  }
IN
  Kernel.TrackDescription.TrackConditions.General.TCProfile</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="TrackConditions"
 DefaultValue=""
 VariableMode="Internal"
 X="220"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TCProfile"
 Guid="cccc0a77-8fa1-4a0d-a42d-ef124c77a533"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="873d386b-aff6-4f28-8601-bc8d49cc1a6e"
>
</ReqRef><ReqRef
 Id="8306ee07-3124-4992-96a3-0cf3c84e47b7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="edc4183d-a273-4327-9256-6b9409ec4747"
>
</ReqRef><ReqRef
 Id="0d1804a4-9b7c-406f-bb28-e8e42df86344"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94fb2018-a948-446d-bf12-0a40d5d0147d"
>
</ReqRef><ReqRef
 Id="c9386a51-4e30-4b1e-915c-aad5f1f5488f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="650f6c2d-1706-4dd4-8043-80e2fa0d9ec6"
>
</ReqRef><ReqRef
 Id="a2d32abf-08a0-4bc5-b97e-117e6a4fd998"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b8e66afd-d19f-49f8-bc21-0f8f29d3a6e0"
>
</ReqRef><ReqRef
 Id="444d11ee-84f0-4837-8c17-f111d045857d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da5849cb-2a9c-4b1c-bc21-f13cf8f22a92"
>
</ReqRef><ReqRef
 Id="ee609856-411d-4bb2-ab88-76b574aa3013"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="189783c6-52e9-4e03-8d17-c98f3d5ca55e"
>
</ReqRef><ReqRef
 Id="46ff0663-ed84-4dea-af46-b87941a77c51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2124b7ca-ef8b-4550-a4dc-682e5fefe0eb"
>
</ReqRef><ReqRef
 Id="00a69e16-494d-4601-947a-02a6541733da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03f43435-44b8-4002-8161-f95568d23717"
>
</ReqRef><ReqRef
 Id="fd0688e1-7912-499e-8db3-590b6e01d887"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a0607fd6-9169-46ca-8408-d161bfdc091e"
>
</ReqRef><ReqRef
 Id="9eb67bec-5e3a-407d-8b6e-e3d49d57e883"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="32ac1e6a-809b-475f-89d5-105b42fdabd9"
>
</ReqRef><Comment>The list of track conditions received from the trackside.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="4.0"
 VariableMode="Constant"
 X="110"
 Y="0"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="T_SoundHorn"
 Guid="4fea4751-da92-4903-896f-7f1ddc8a4b6c"
>
<ReqRef
 Id="1584ea94-55a5-467d-80a1-4927882da658"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a39cc8c-c11a-4d4d-a6e3-d70f3d9f1900"
>
</ReqRef><Comment>Driver reaction time for sounding the horn. This value is also used as the reaction time for the other track conditions, as their value is not specified.</Comment>
</Variable></Variables>
</NameSpace>
