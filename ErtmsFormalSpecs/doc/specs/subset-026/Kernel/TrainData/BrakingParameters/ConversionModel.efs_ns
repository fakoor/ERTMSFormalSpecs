<NameSpace
 X="800"
 Y="10"
 Width="100"
 Height="50"
 Name="ConversionModel"
 Guid="785a0e41-5ce3-4f0e-9075-e9d56cee7e2a"
>
<NameSpaces>
<NameSpaceRef
 Name="EmergencyBrakes"
 Guid="359589eb-c12a-46d5-9caa-89273433d261"
>
</NameSpaceRef><NameSpaceRef
 Name="ServiceBrakes"
 Guid="02aa2541-529d-4427-8023-67ec65892a37"
>
</NameSpaceRef></NameSpaces>
<Functions>
<Function
 Type="Boolean"
 Default=""
 X="40"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ConversionModelIsUsed"
 Guid="8dbae3f6-8684-4588-8f53-af5848c87bba"
>
<ReqRef
 Id="597cfdc2-80f1-4a68-807f-b6173d958e91"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10795e83-f548-4021-bca4-7d63c8ce8326"
>
</ReqRef><ReqRef
 Id="c4a82032-36c3-4bf2-b9f1-7beadd359a45"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f196079a-ff04-4ef8-a81b-0f81ab7def34"
>
</ReqRef><ReqRef
 Id="d4abd686-74e0-4be7-8850-63b0d76f32da"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="392ca139-5685-4764-8f06-c5ddb994c4a5"
>
</ReqRef><Comment>Indicates whether the conversion model is used (i.e. the train satisfies the requirements for the use of conversion model). If the conversion model is used, the train is called &quot;Lambda&quot; train, otherwise it is called &quot;Gamma train&quot;.</Comment>
<Cases>
<Case
 Name="ConversionModelIsUsed"
 Guid="833a0587-3a60-4c33-84c4-eddbf6afd905"
>
<PreConditions>
<PreCondition
 Guid="34841063-c56b-4747-8a29-d4ee8c1f936e"
>0.0 &lt;= Kernel.TrainData.TrainData.Value.MaximumSpeed
  AND
Kernel.TrainData.TrainData.Value.MaximumSpeed &lt;= 200.0</PreCondition><PreCondition
 Guid="44dea8f6-d254-4297-b71b-73fbc4ac8c22"
>Kernel.TrainData.TrainData.Value.BrakePercentage != Percentage.NA
  AND
30.0 &lt;= Kernel.TrainData.TrainData.Value.BrakePercentage
  AND
Kernel.TrainData.TrainData.Value.BrakePercentage &lt;= 250.0</PreCondition><PreCondition
 Guid="64762d77-7852-4461-8d32-8035e2c4fd42"
>0.0 &lt;= Kernel.TrainData.TrainData.Value.TrainLength
  AND
Kernel.TrainData.TrainData.Value.TrainLength &lt;= Kernel.TrainData.BrakingParameters.ConversionModel.Lmax()</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="ConversionModelIsNotUsed"
 Guid="1eca3392-96f6-4459-a717-0e52d880c305"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Acceleration"
 Default=""
 X="610"
 Y="130"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="BasicDecelerationNextAcceleration"
 Guid="8fb8a45b-581a-4a5c-a8c7-f94f2555f476"
>
<ReqRef
 Id="2742e47b-7d1f-4835-bca3-c4cb765d768e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4245918f-1c95-45b6-87ea-da5d85513d53"
>
</ReqRef><ReqRef
 Id="bd14268e-c4d0-44f2-a9dd-817a03791b18"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f09f4580-9959-49a6-9970-b4fde702c3fe"
>
</ReqRef><ReqRef
 Id="69eb44b6-5dcc-4aaa-8dec-be4b4fb57ae5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4e46796c-9304-4821-b8c5-b5fb66c23aec"
>
</ReqRef><ReqRef
 Id="2ef37bff-8989-46c0-9063-09171140c28b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aa2025c5-fd7f-4d3a-b647-2525f5eb3878"
>
</ReqRef><ReqRef
 Id="15cb35c0-53a6-4098-9d3f-e50aa8bbc883"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8f1d5a33-4336-4790-9230-840df1608cd5"
>
</ReqRef><Comment>Computes the acceleration value for A_brake_emergency or A_brake_service that will be applicable after the speed V provided as parameter, according to the algorithm described in 3.A3.7.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Speed"
 Name="V"
 Guid="5bcfac88-66b3-4636-81d9-ff186c9ab369"
>
</Parameter><Parameter
 Type="Percentage"
 Name="aBrakePercentage"
 Guid="7553dceb-ea49-46b3-b9c3-92a2ca1807b1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Below 100 km/h"
 Guid="2e3e8c51-d1f1-482b-9427-32f2ec368170"
>
<PreConditions>
<PreCondition
 Guid="94cfdace-fcda-4ad5-a861-847385ec9eb4"
>V &lt; 100.0</PreCondition></PreConditions>
<Expression>- 0.00000063 * aBrakePercentage * aBrakePercentage * aBrakePercentage + 0.000061 * aBrakePercentage * aBrakePercentage + 0.00472 * aBrakePercentage + 0.0663</Expression>
</Case><Case
 Name="Between 100 km/h and 120 km/h"
 Guid="5c3682fd-6346-46b8-b85c-5d5b28656998"
>
<PreConditions>
<PreCondition
 Guid="bfcb0395-95d4-419d-8442-447988aa9a3b"
>V &lt; 120.0</PreCondition></PreConditions>
<Expression>0.000000273 * aBrakePercentage * aBrakePercentage * aBrakePercentage - 0.00000454 * aBrakePercentage * aBrakePercentage + 0.00514 * aBrakePercentage + 0.13</Expression>
</Case><Case
 Name="Between 120 km/h and 150 km/h"
 Guid="fc904521-4fe6-4997-a662-cf956595adea"
>
<PreConditions>
<PreCondition
 Guid="b2611d26-8732-4f6d-8674-fdb3db4c2748"
>V &lt; 150.0</PreCondition></PreConditions>
<Expression>0.0000000558 * aBrakePercentage * aBrakePercentage * aBrakePercentage - 0.00000676 * aBrakePercentage * aBrakePercentage + 0.00581 * aBrakePercentage + 0.0479</Expression>
</Case><Case
 Name="Between 150 km/h and 180 km/h"
 Guid="27b11cdc-fba1-4cf7-accf-c8681f609255"
>
<PreConditions>
<PreCondition
 Guid="082bc876-00e6-4588-9fd5-5206265adcf4"
>V &lt; 180.0</PreCondition></PreConditions>
<Expression>0.00000003 * aBrakePercentage * aBrakePercentage * aBrakePercentage - 0.00000385 * aBrakePercentage * aBrakePercentage + 0.00552 * aBrakePercentage + 0.048</Expression>
</Case><Case
 Name="Above 180 km/h"
 Guid="82110394-9b62-48a8-87f4-41bdd9a0b341"
>
<Expression>0.00000000323 * aBrakePercentage * aBrakePercentage * aBrakePercentage + 0.00000166 * aBrakePercentage * aBrakePercentage + 0.00506 * aBrakePercentage + 0.0559</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Default=""
 X="610"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="BasicDecelerationNextSpeedStep"
 Guid="b43be340-3269-4533-8763-5ae56b8f1bfb"
>
<ReqRef
 Id="647f9258-84ae-4447-8675-ab0aaa2b5b37"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4ba27e81-5cc5-4510-8fe8-1a9ad3364c55"
>
</ReqRef><Comment>Computes the nexr speed step for A_brake_emergency or A_brake_service, according to the algorithm described in 3.A3.7.</Comment>
<Parameters>
<Parameter
 Type="BaseTypes.Speed"
 Name="V"
 Guid="6c96d34a-e9df-46c7-9cf3-f8d396636228"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="100 km/h"
 Guid="b3aa722a-ff62-49b6-add4-632039dbc6f6"
>
<PreConditions>
<PreCondition
 Guid="34301833-6ccf-4f9c-9c44-93c1b616d337"
>V &lt; 100.0</PreCondition></PreConditions>
<Expression>100.0</Expression>
</Case><Case
 Name="120 km/h"
 Guid="1df7680f-bb15-4ac7-bf6f-aa3105cbb786"
>
<PreConditions>
<PreCondition
 Guid="02dbeb2f-ca25-4c25-8fa6-9d94a2613f16"
>V &lt; 120.0</PreCondition></PreConditions>
<Expression>120.0</Expression>
</Case><Case
 Name="150 km/h"
 Guid="8341d58c-7fbe-49eb-be55-77d768003f04"
>
<PreConditions>
<PreCondition
 Guid="282f743f-623e-4930-b9f0-0f84ec704a94"
>V &lt; 150.0</PreCondition></PreConditions>
<Expression>150.0</Expression>
</Case><Case
 Name="180 km/h"
 Guid="4736854d-7da8-4e3f-a351-bf5527e871ad"
>
<PreConditions>
<PreCondition
 Guid="2aa3af5b-25c2-4fc7-a137-e825b504d4aa"
>V &lt; 180.0</PreCondition></PreConditions>
<Expression>180.0</Expression>
</Case><Case
 Name="Otherwise"
 Guid="bf224277-2e29-4332-ba7f-9e724b7aa453"
>
<Expression>BaseTypes.Speed.Infinity</Expression>
</Case></Cases>
</Function><Function
 Type="CorrectionFactor"
 Default=""
 X="610"
 Y="190"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="kto"
 Guid="cf85717e-8026-41e3-85f9-f393a22cd6bc"
>
<ReqRef
 Id="2a16c4e1-5fbe-4cc3-be52-bcf5134b0d62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d26776eb-fd16-42e1-8e71-25d3e77a8ade"
>
</ReqRef><ReqRef
 Id="6daa6231-e601-4f4d-80cc-590024cf24ec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e73bca4-cdfb-4b7c-bac2-7e1e046d08bd"
>
</ReqRef><ReqRef
 Id="cc6b11e9-5928-4e32-8541-d493ac66d126"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1ae308e2-3a12-4e3d-b124-9337f27c105e"
>
</ReqRef><Comment>Provides the correction factor kto.</Comment>
<Cases>
<Case
 Name="Passenger train"
 Guid="69fd2670-9ce7-4675-8097-deae1bafac10"
>
<PreConditions>
<PreCondition
 Guid="0e496ad6-4f6f-4a70-9b05-c327b32bb0c7"
>Kernel.TrainData.TrainData.Value.BrakePosition == BrakePositionsEnum.PassengerTrainInP</PreCondition></PreConditions>
<Expression>1.0 + 0.2</Expression>
</Case><Case
 Name="Freight train in P"
 Guid="0836fa19-0d54-4d53-ad8d-de419d62a0c4"
>
<PreConditions>
<PreCondition
 Guid="6d135189-dee9-426e-8e80-4c1b0fde55ba"
>Kernel.TrainData.TrainData.Value.BrakePosition == BrakePositionsEnum.FreightTrainInP</PreCondition></PreConditions>
<Expression>1.0 + 0.2</Expression>
</Case><Case
 Name="Freight train in G"
 Guid="093fd897-c508-45f6-b5e6-c97c4d57b4e6"
>
<Expression>1.0 + 0.16</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Default=""
 X="150"
 Y="280"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Lmax"
 Guid="2b069dd2-6b71-4016-855d-bafc9711d98b"
>
<ReqRef
 Id="c4a82032-36c3-4bf2-b9f1-7beadd359a45"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7576ed95-5d4b-4a28-999b-90e6375fa64b"
>
</ReqRef><Comment>Computes Lmax, as described in point c of 3.13.3.2.1.</Comment>
<Cases>
<Case
 Name="Passenger train in P"
 Guid="f85fe917-e5db-4290-a660-16d15d113f75"
>
<PreConditions>
<PreCondition
 Guid="8533cd6f-5214-4c02-a4ad-23c8d006817a"
>Kernel.TrainData.TrainData.Value.BrakePosition == BrakePositionsEnum.PassengerTrainInP</PreCondition></PreConditions>
<Expression>900.0</Expression>
</Case><Case
 Name="Otherwise"
 Guid="313269a5-d1ea-4670-9a7a-be05b2273bab"
>
<Expression>1500.0</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="500"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ComputeA_safe"
 Guid="2214f0ca-b108-4e00-a384-47ca87633f1a"
>
<ReqRef
 Id="dab30622-ead4-4ae3-9850-6741b4ecce7c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc52a9d9-af82-4b67-8ed7-cf496f1caf7c"
>
</ReqRef><ReqRef
 Id="62689fec-ca19-4998-acad-cc57c3417b24"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a577d3d5-beab-4f93-81c3-1e8770946040"
>
</ReqRef><Comment>Computes A_safe from conversion model using the algorithm described in 3.A.3.7.</Comment>
<Parameters>
<Parameter
 Type="BrakingModelStruct"
 Name="aBrakingModel"
 Guid="c0d8df87-fa28-4ff9-8edd-04d8887bdabc"
>
</Parameter><Parameter
 Type="Percentage"
 Name="aBrakePercentage"
 Guid="8fc994fd-18b9-4446-9ec6-84ce32b0aae3"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="ComputeFirstStep"
 Guid="0ac59cfd-c424-4683-b8a3-112738e06133"
>
<ReqRef
 Id="9bdd6bd2-815b-459e-9502-eb132d07441c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d5a5603-3482-4596-8052-f193a818ebe7"
>
</ReqRef><ReqRef
 Id="e3d644fb-c036-4224-b526-df091cf86b8c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb4d281f-b47b-4380-93c7-3913eba9c2c9"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Calculate first step"
 Guid="768df6db-7d92-4e0f-b13e-87d5e6bda692"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="d7e2b725-c96a-4c35-b758-e15e4eabbd1e"
>aBrakingModel.Val0.SpeedStep &lt;- 0.0</Action><Action
 Guid="aa5b3921-9105-4baf-87de-8d12581adaf6"
>aBrakingModel.Val0.Acceleration &lt;- 0.0075 * aBrakePercentage + 0.076</Action><Action
 Guid="70d85e3b-fc77-40ab-913c-7709953fdd0c"
>aBrakingModel.Val1.SpeedStep &lt;- 16.85 * aBrakePercentage ^ 0.428</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ComputeFollowingSteps"
 Guid="a50dade1-f24a-4ec6-b03b-b87b119ac506"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Calculate following steps"
 Guid="c55cf769-5233-4db3-8940-37319fdcfb90"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="bbb40c9b-4a91-4203-a00d-df8b755c24c6"
>aBrakingModel.Val1.Acceleration &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextAcceleration ( V =&gt; aBrakingModel.Val1.SpeedStep, aBrakePercentage =&gt; aBrakePercentage )</Action><Action
 Guid="29905a73-c2da-4a3b-93b4-82837f7821cf"
>aBrakingModel.Val2.SpeedStep &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextSpeedStep ( aBrakingModel.Val1.SpeedStep )</Action><Action
 Guid="cc558af0-ff56-4f4c-9253-3ccdc323b58c"
>aBrakingModel.Val2.Acceleration &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextAcceleration ( V =&gt; aBrakingModel.Val2.SpeedStep, aBrakePercentage =&gt; aBrakePercentage )</Action><Action
 Guid="d879ee76-41ef-4c72-9131-6b14220147b3"
>aBrakingModel.Val3.SpeedStep &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextSpeedStep ( aBrakingModel.Val2.SpeedStep )</Action><Action
 Guid="6aa8704d-360d-4bf4-adb5-36bf94995598"
>aBrakingModel.Val3.Acceleration &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextAcceleration ( V =&gt; aBrakingModel.Val3.SpeedStep, aBrakePercentage =&gt; aBrakePercentage )</Action><Action
 Guid="fb581b46-c93d-48d6-a727-a89c47bef563"
>aBrakingModel.Val4.SpeedStep &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextSpeedStep ( aBrakingModel.Val3.SpeedStep )</Action><Action
 Guid="bd257293-72f3-4014-a6ca-1635997ba2ed"
>aBrakingModel.Val4.Acceleration &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextAcceleration ( V =&gt; aBrakingModel.Val4.SpeedStep, aBrakePercentage =&gt; aBrakePercentage )</Action><Action
 Guid="92ea5ad7-1d04-4258-8ff2-658fd677a3f0"
>aBrakingModel.Val5.SpeedStep &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextSpeedStep ( aBrakingModel.Val4.SpeedStep )</Action><Action
 Guid="c3d87dd1-f2db-4305-9daf-863cc051c191"
>aBrakingModel.Val5.Acceleration &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextAcceleration ( V =&gt; aBrakingModel.Val5.SpeedStep, aBrakePercentage =&gt; aBrakePercentage )</Action><Action
 Guid="21b08493-c9e7-4afe-9ba4-6f0bf958fb1f"
>aBrakingModel.Val6.SpeedStep &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextSpeedStep ( aBrakingModel.Val5.SpeedStep )</Action><Action
 Guid="c8cdc33c-f7a7-4eea-8b3f-87acedd17411"
>aBrakingModel.Val6.Acceleration &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.BasicDecelerationNextAcceleration ( V =&gt; aBrakingModel.Val6.SpeedStep, aBrakePercentage =&gt; aBrakePercentage )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="330"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ComputeBasicDeceleration"
 Guid="a6a07570-27a1-4eb4-af21-b1048ad0c092"
>
<ReqRef
 Id="943f0d8a-2c25-443e-957c-c6906bd25a76"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e03f6aff-117a-4c34-8c1d-e17d63dcdf05"
>
</ReqRef><ReqRef
 Id="67da3cda-51d3-4c5a-9777-f23e6403b954"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="06d6a4ec-6cea-42ae-b562-535ea38e7826"
>
</ReqRef><ReqRef
 Id="62689fec-ca19-4998-acad-cc57c3417b24"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1715426b-0831-4374-9ac1-51ad3a6fd9e1"
>
</ReqRef><Comment>Computes A_brake_emergency and A_brake_service from conversion model using the algorithm described in 3.A.3.7.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="ComputeBasicDeceleration_SB"
 Guid="cd406c6d-25ea-4806-ba2c-45fbafddfa41"
>
<ReqRef
 Id="aa226185-c9bd-4c7b-abbd-b09c49dee0bf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="01e86226-ebd7-45d3-8353-1e2f6f0b5a22"
>
</ReqRef><ReqRef
 Id="342dae78-d6d5-4626-8b5f-5f2f1d85c458"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b9bb584-ec90-435b-a41d-b1f4839b01e1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ComputeBasicDeceleration_SB"
 Guid="0df7168c-9b32-40bb-94f1-9dfddf31de8a"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a302e1a2-0224-4cba-929a-d8b95dae5eaf"
>ServiceBrakes.A_brake_service &lt;- BrakingModelStruct{}</Action><Action
 Guid="2f647c3e-ddf5-4d59-ae49-e30c06c092d7"
>Kernel.TrainData.BrakingParameters.ConversionModel.ComputeA_safe ( aBrakingModel =&gt; ServiceBrakes.A_brake_service, aBrakePercentage =&gt; MinPercentage ( Kernel.TrainData.TrainData.Value.BrakePercentage, 135.0 ) )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="ComputeBasicDeceleration_EB"
 Guid="342beec8-f3b6-4e0d-982c-010746f6257b"
>
<ReqRef
 Id="aa226185-c9bd-4c7b-abbd-b09c49dee0bf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="743b04e7-50d4-4537-aeee-22938ce33457"
>
</ReqRef><ReqRef
 Id="342dae78-d6d5-4626-8b5f-5f2f1d85c458"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="af8d56db-1035-43a6-bef8-7380c9ffde6b"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ComputeBasicDeceleration_EB"
 Guid="777d0ba4-c992-423a-aa6e-db309844c7c3"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="1686d2ad-14a1-48a5-a38c-dbc7bc0a210d"
>EmergencyBrakes.A_brake_emergency &lt;- BrakingModelStruct{}</Action><Action
 Guid="825c4443-e0c7-4ab7-ad1d-40fc9e1bb0ca"
>Kernel.TrainData.BrakingParameters.ConversionModel.ComputeA_safe ( aBrakingModel =&gt; EmergencyBrakes.A_brake_emergency, aBrakePercentage =&gt; Kernel.TrainData.TrainData.Value.BrakePercentage )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="330"
 Y="190"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ComputeServiceBrakeEquivalentTime"
 Guid="256193e2-1960-4a39-9a1b-aca05e9c671d"
>
<ReqRef
 Id="a611b24a-cae4-4c3a-abe1-f83752cce43f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd8af278-302b-4b10-8d69-34511ea7d89e"
>
</ReqRef><ReqRef
 Id="c1352e10-31a1-42f0-91d6-9607590f3cd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e35398d0-1099-4ed8-acd9-e3422b94fc4e"
>
</ReqRef><ReqRef
 Id="8ffaf5d1-c6dd-466e-ac21-b0075ae250ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fdc200da-75a4-414a-badf-53020f271936"
>
</ReqRef><ReqRef
 Id="6daa6231-e601-4f4d-80cc-590024cf24ec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="039c33e6-ed75-4dc4-a8b4-37690ba538af"
>
</ReqRef><ReqRef
 Id="62689fec-ca19-4998-acad-cc57c3417b24"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1bcdee9-8b66-465a-8785-827d4c560a47"
>
</ReqRef><Comment>Computes service brake equivalent time from conversion model.</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ComputeServiceBrakeEquivalentTime"
 Guid="8a9c5178-98ba-467a-a473-0f75f82552ed"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Target speed equals 0"
 Guid="515f43f8-fd74-4865-87de-4131c942ba0b"
>
<PreConditions>
<PreCondition
 Guid="57202dfb-af3b-4403-9a5c-6746ae915293"
>Kernel.MA.MA.TargetSpeed == 0.0</PreCondition></PreConditions>
<Actions>
<Action
 Guid="fbd445d5-2b36-45ba-a0f4-fc686f733951"
>ServiceBrakes.T_brake_service_cm0 &lt;- ServiceBrakes.T_brake_basic_sb ()</Action><Action
 Guid="a6134211-0b7f-479d-9e3d-e9cf23eb2a98"
>ServiceBrakes.T_brake_service_cmt &lt;- BaseTypes.Time.NA</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Target speed different from 0"
 Guid="84f8ff31-3469-49fe-a969-ad028191150a"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="b020aefd-2749-41e1-923b-19e70ba556f7"
>ServiceBrakes.T_brake_service_cmt &lt;- ServiceBrakes.T_brake_basic_sb () * BaseTypes.Time ( Kernel.TrainData.BrakingParameters.ConversionModel.kto () )</Action><Action
 Guid="965303f2-9bb5-4e2f-97d1-eeb72e2ff1c9"
>ServiceBrakes.T_brake_service_cm0 &lt;- BaseTypes.Time.NA</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="330"
 Y="130"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ComputeEmergencyBrakeEquivalentTime"
 Guid="7d5e97ee-3dbc-40e2-be06-cd249fe22e54"
>
<ReqRef
 Id="a611b24a-cae4-4c3a-abe1-f83752cce43f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7d89fded-24b8-41a6-a6fe-d4f1decf0eed"
>
</ReqRef><ReqRef
 Id="c1352e10-31a1-42f0-91d6-9607590f3cd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f678717-ce4c-4296-af57-49c58fb49f6d"
>
</ReqRef><ReqRef
 Id="6daa6231-e601-4f4d-80cc-590024cf24ec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd3e469e-663e-4962-98bf-0b84bdad302e"
>
</ReqRef><ReqRef
 Id="62689fec-ca19-4998-acad-cc57c3417b24"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="95e8fdac-b7a6-4ade-82b6-0dc00ab1ac51"
>
</ReqRef><ReqRef
 Id="ea0e1acc-6fa2-4987-bc51-834e1dc560df"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a3e427d-22a4-41ec-ae68-c40f99f361bc"
>
</ReqRef><Comment>Computes emergency brake equivalent time from conversion model.</Comment>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ComputeEmergencyBrakeEquivalentTime"
 Guid="89f348e9-b83d-4cfd-a7a7-d3a2e3d545a0"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Target speed equals 0"
 Guid="581e21e8-fd5c-4fd0-b8c1-fd79a9edb4f2"
>
<PreConditions>
<PreCondition
 Guid="8a13b628-74c0-4666-b466-c3936f0c479d"
>Kernel.MA.MA.TargetSpeed == 0.0</PreCondition></PreConditions>
<Actions>
<Action
 Guid="953d96e5-3544-4b56-acce-b18217e6b143"
>Kernel.TrainData.BrakingParameters.ConversionModel.EmergencyBrakes.T_brake_emergency_cm0 &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.EmergencyBrakes.T_brake_basic_eb ()</Action><Action
 Guid="3bbe69a7-0fee-444c-aa28-06d58311bff1"
>Kernel.TrainData.BrakingParameters.ConversionModel.EmergencyBrakes.T_brake_emergency_cmt &lt;- BaseTypes.Time.NA</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Target speed different from 0"
 Guid="aeb17c1e-cdd9-4e57-8f46-15df93a10c1a"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="d1a40433-37c2-4742-91d0-ae70dc5b681f"
>Kernel.TrainData.BrakingParameters.ConversionModel.EmergencyBrakes.T_brake_emergency_cmt &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.EmergencyBrakes.T_brake_basic_eb () * BaseTypes.Time ( Kernel.TrainData.BrakingParameters.ConversionModel.kto () )</Action><Action
 Guid="878c9e3d-1621-4d42-bec3-b3615b6b1927"
>Kernel.TrainData.BrakingParameters.ConversionModel.EmergencyBrakes.T_brake_emergency_cm0 &lt;- BaseTypes.Time.NA</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="40"
 Y="160"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="Initialize"
 Guid="37fb9f96-056f-470d-9256-419a57f6de37"
>
<Rules>
<Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="ApplyConversionModel"
 Guid="fd476ff9-c6a7-46ce-b84f-2fe66e7c4959"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="ApplyConversionModel"
 Guid="3e3f7d65-2df2-4d89-956f-ef47808adb87"
>
<PreConditions>
<PreCondition
 Guid="9d9968f1-7c51-4c22-b2be-1cdd9bf7a9ac"
>Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelIsUsed()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="035b7c8e-f585-4eba-90ae-4a8d9791308c"
>Kernel.TrainData.BrakingParameters.ConversionModel.ComputeBasicDeceleration()</Action><Action
 Guid="285cc7a1-0bda-45b2-8551-3ca8744d4dce"
>Kernel.TrainData.BrakingParameters.ConversionModel.ComputeEmergencyBrakeEquivalentTime()</Action><Action
 Guid="4c9cb793-c3c4-430b-9cb9-1e23ca1b3cb2"
>Kernel.TrainData.BrakingParameters.ConversionModel.ComputeServiceBrakeEquivalentTime()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="40"
 Y="380"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConversionModelWasUsed"
 Guid="78c4e9b2-8599-4ea9-8ddc-6c0286912d95"
>
</Variable></Variables>
<Rules>
<Rule
 Priority="Processing"
 X="150"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Conversion model initializer"
 Guid="db501a39-4d4d-4c64-b477-20eca6f46115"
>
<Comment>Verifies if the conditions to use the conversion model are satisfied and in this case launches the computation of braking parameters from the conversion model.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Conversion model will be used"
 Guid="23b43f12-99eb-487c-b5c9-0fa03a3c2fcc"
>
<PreConditions>
<PreCondition
 Guid="b1279072-2d84-4f20-86a8-6c9133fa4010"
>Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelIsUsed()
  AND
Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelIsUsed() != Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelWasUsed</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a237e6a7-2bc6-4d20-9a09-0f25957fe7de"
>Kernel.TrainData.BrakingParameters.ConversionModel.Initialize()</Action><Action
 Guid="bd02bb54-0588-4230-9dfa-7fc6a5e523b4"
>Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelWasUsed &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelIsUsed()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Conversion model will no more be used"
 Guid="1fc82154-e9d4-4235-a47e-69616ab374dd"
>
<PreConditions>
<PreCondition
 Guid="7c62fba7-8ef4-47b8-955f-f559a750e223"
>Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelIsUsed() != Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelWasUsed</PreCondition></PreConditions>
<Actions>
<Action
 Guid="157d6136-2df1-4d46-b2b7-ecd82a7284c0"
>Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelWasUsed &lt;- Kernel.TrainData.BrakingParameters.ConversionModel.ConversionModelIsUsed()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
