<NameSpace
 X="560"
 Y="130"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Name="TrainPosition"
 Guid="9768eb28-0355-4891-b84a-b57bb9df171e"
>
<NameSpaces>
<NameSpaceRef
 Name="ConfidenceInterval"
 Guid="03bf3bcd-53a3-4113-99e7-ace3214c50bd"
>
</NameSpaceRef></NameSpaces>
<Structures>
<Structure
 Default=""
 X="560"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TrainPositionStruct"
 Guid="607a75d0-3d30-4e13-9431-91746926f303"
>
<ReqRef
 Id="3dbd1b48-23b6-40f9-a38e-77df9cc1ed68"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbad44e6-cae5-486c-93ee-01107b2048f6"
>
</ReqRef><ReqRef
 Id="4147b6c6-84d8-452d-b38e-8479cb6dc795"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="985ce938-6835-4de1-b8e0-66e0560eecc6"
>
<Comment>Even if the requirement is related to the train position, it seems more consistent to place the previous LRBGs in the BTM namespace</Comment>
</ReqRef><Comment>Represents the current position of the train, as described in 3.6.1.3.
The estimated train front end can be computed using Kernel.FrontEndPosition function.
The confidence interval can be computed using Kernel.ConfidenceInterval.ConfidenceInterval function.</Comment>
<StructureElement
 TypeName="DirectionalTrainPositionInformationStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DirectionalPositionInformation"
 Guid="b9058b7a-0709-4d30-876a-5380b1a0522b"
>
<ReqRef
 Id="4f6dd5a0-a24c-40f0-8757-8c0c86cc2c43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1a655beb-2656-49bd-aadc-d95e8780d4ef"
>
</ReqRef><Comment>The directional position information of the train (the train front end position, the train orientation and the train running direction).</Comment>
</StructureElement><StructureElement
 TypeName="DataStateEnum"
 Default="DataStateEnum.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DataState"
 Guid="409e308a-f2cb-4c85-a883-c9664e17b68c"
>
<ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7395a9af-76df-4d75-8516-d88ec7c2f838"
>
</ReqRef><Comment>The data state of the train position.</Comment>
</StructureElement><Interfaces>
<StructureRef
 Name="DataStateInterface"
 Guid="ab10bcce-e0d4-4a01-b4e0-b40a858b28d0"
>
</StructureRef></Interfaces>
</Structure><Structure
 Default=""
 X="560"
 Y="100"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DirectionalTrainPositionInformationStruct"
 Guid="ed65a176-3ac0-42bf-94aa-77bfa166d800"
>
<ReqRef
 Id="4f6dd5a0-a24c-40f0-8757-8c0c86cc2c43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="72a61b32-dcc3-456c-8c9c-1a0042c662b3"
>
</ReqRef><Comment>This structure represents the directional train position information, in reference to the balise group orientation.</Comment>
<StructureElement
 TypeName="OrientationEnum"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="TrainFrontEndPosition"
 Guid="84a2ded8-23f3-4c41-86b3-a2326f96da1f"
>
<ReqRef
 Id="18585bb5-dc2f-4e24-bb2e-10c77305d565"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="afb9f1b8-fbbb-413c-a1c4-d28befe4b689"
>
</ReqRef><Comment>Position of the train front end, corresponds to Q_DLRBG.</Comment>
</StructureElement><StructureElement
 TypeName="OrientationEnum"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="TrainOrientation"
 Guid="e61fa84b-7a43-4a6e-acb7-b9406467ce85"
>
<ReqRef
 Id="2a8febe6-f85b-423c-bc63-60828f11aa62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c2419d9e-4efc-4691-99d9-f26fd9ea716c"
>
</ReqRef><Comment>Train orientation, corresponds to Q_DIRLRBG.</Comment>
</StructureElement><StructureElement
 TypeName="OrientationEnum"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="TrainRunningDirection"
 Guid="933b46d3-8929-4b43-b211-bfef5b571fee"
>
<ReqRef
 Id="1ca933ce-9114-4bbd-b4fa-25bea496671c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2a8e6e96-d30b-44fc-8745-59fa0d6b3760"
>
</ReqRef><Comment>Train running direction, corresponds to Q_DIRTRAIN.</Comment>
</StructureElement></Structure></Structures>
<Functions>
<Function
 Type="BaseTypes.Distance"
 Default=""
 X="160"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="FrontEndPosition"
 Guid="0398d7f6-6b64-407d-9e5b-dca2fbc88cd4"
>
<ReqRef
 Id="6e85df81-278a-4eb5-8ce0-b773e472f711"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d7c69c5b-a4f9-4000-b1b0-28275b647a06"
>
</ReqRef><ReqRef
 Id="dfd8a050-ad00-42a4-969a-1da448625473"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6297e289-f36a-4369-9672-21ddb7fba4ff"
>
</ReqRef><ReqRef
 Id="137a2d02-81cd-4bb2-a7fa-6fcf738cf589"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="658e5d6f-cd8d-495b-be31-57e0f14e7371"
>
</ReqRef><ReqRef
 Id="71325bb5-51a0-4724-bf1c-658efb3ce4dc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f3cefead-eb9d-45d9-b4ef-a11b02621893"
>
</ReqRef><Comment>This function is used to compute the estimated front end position, the max and min safe front end position of the train. The parameter specifies which of the values must be returned.</Comment>
<Parameters>
<Parameter
 Type="DistanceIntervalEnum"
 Name="PointOfInterest"
 Guid="7af4ee52-9fbb-44c4-9f46-527d61a913b0"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Position not determined"
 Guid="5d7f2191-a648-4b75-9c90-464357706664"
>
<PreConditions>
<PreCondition
 Guid="7ac6b80c-17dc-4f43-8b49-b875002e5f28"
>NOT Kernel.ActiveFunctions.DeterminePositionFromLRBG()</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Train position unknown"
 Guid="fdff3051-a684-4dbb-be2b-50187f6898e8"
>
<PreConditions>
<PreCondition
 Guid="cf061e0e-d4c3-4801-88b0-96d5c524d68f"
>Kernel.TrainPosition.Position.DataState != DataStateEnum.Valid</PreCondition><PreCondition
 Guid="0ca7d233-bdf6-43af-a526-44ca5aca513a"
>NOT Available( BTM.UnlinkedBGPosition )</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Nominal"
 Guid="0a17f132-8e7f-4b1c-9e04-e43432c59031"
>
<PreConditions>
<PreCondition
 Guid="c61aea8d-3319-4f16-b8a6-d87e9c290890"
>PointOfInterest == DistanceIntervalEnum.Nom</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - ReferenceLocation()</Expression>
</Case><Case
 Name="Maximum"
 Guid="812d52ca-441b-4da6-a0d8-ce13ec19f117"
>
<PreConditions>
<PreCondition
 Guid="470ac07d-62b5-42c4-a517-866a90c3bfee"
>PointOfInterest == DistanceIntervalEnum.Max</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance + BaseTypes.LengthToDistance(Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTUNDER)) - ReferenceLocation()</Expression>
</Case><Case
 Name="Minimum"
 Guid="33a2da89-eff5-4355-8fa9-2974bb4f2c14"
>
<PreConditions>
<PreCondition
 Guid="acddaf27-c5fb-493f-8b2c-ebdc1bb73993"
>PointOfInterest == DistanceIntervalEnum.Min</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - BaseTypes.LengthToDistance(Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTOVER)) - ReferenceLocation()</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="270"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RearEndPosition"
 Guid="4a6bae4e-f993-4dba-a059-0760076ece8a"
>
<ReqRef
 Id="d61ea269-686c-486d-9852-1fd7e6f88c24"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d39884e0-a5bb-433b-80fa-0ed1ed02c038"
>
</ReqRef><ReqRef
 Id="137a2d02-81cd-4bb2-a7fa-6fcf738cf589"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89d635a3-80b1-4b4b-a8a5-628b159b8faa"
>
</ReqRef><ReqRef
 Id="71325bb5-51a0-4724-bf1c-658efb3ce4dc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1d0f9c48-fe3e-4539-8e7f-bc4e71e678c5"
>
</ReqRef><Comment>This function is used to compute the estimated rear end position, the max and min safe rear end position of the train. The parameter specifies which of the values must be returned. These values are computed iff the train integrity status is valid (confirmed by driver or by integrity monitoring device).</Comment>
<Parameters>
<Parameter
 Type="DistanceIntervalEnum"
 Name="PointOfInterest"
 Guid="649fb3a6-63d6-4a5e-94a2-a5430c53f384"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Position not determined"
 Guid="432cfe00-3605-43a1-8d81-cd7440cb03d2"
>
<PreConditions>
<PreCondition
 Guid="c2ce85a0-7d1d-4d2b-b123-8da80708e062"
>NOT Kernel.ActiveFunctions.DeterminePositionFromLRBG()</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="No valid position on-board"
 Guid="c23e833e-473b-4784-a10a-806485ebdfe1"
>
<PreConditions>
<PreCondition
 Guid="9b31b852-4b9f-4141-956b-1cad986e9b1b"
>Kernel.TrainPosition.Position.DataState != DataStateEnum.Valid</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Nominal"
 Guid="12d68e3e-9a7b-433c-85bb-e8d2bf2e40cc"
>
<PreConditions>
<PreCondition
 Guid="af6354bc-53f0-4317-a7c6-bd6f449d83af"
>PointOfInterest == DistanceIntervalEnum.Nom</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - BaseTypes.LengthToDistance(Kernel.TrainPosition.TrainLength()) - ReferenceLocation()</Expression>
</Case><Case
 Name="Maximum"
 Guid="b426890d-eef3-43d5-a1b8-fa3270e36c15"
>
<PreConditions>
<PreCondition
 Guid="39cfca21-49df-4f1e-8025-c2388dba9c80"
>PointOfInterest == DistanceIntervalEnum.Max</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - BaseTypes.LengthToDistance(Kernel.TrainPosition.TrainLength()) + BaseTypes.LengthToDistance(Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTUNDER)) - ReferenceLocation()</Expression>
</Case><Case
 Name="Minimum"
 Guid="9c92d5c6-f86d-4cb4-b67d-50e0b531635d"
>
<PreConditions>
<PreCondition
 Guid="add9c23c-ed04-4a06-be98-4afc341bfbd8"
>PointOfInterest == DistanceIntervalEnum.Min</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - BaseTypes.LengthToDistance(Kernel.TrainPosition.TrainLength()) - BaseTypes.LengthToDistance(Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTOVER)) - ReferenceLocation()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="270"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RearFrontEndIsSafe"
 Guid="07f56d73-2dc2-46eb-b458-123f514e9055"
>
<ReqRef
 Id="d61ea269-686c-486d-9852-1fd7e6f88c24"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da222675-8afc-4a03-a48f-e7ef191317d6"
>
</ReqRef><Comment>This function specifies if the rear front end of the train is safe or not. Based on train integrity information.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="c60bb9d2-75cf-4268-a4b0-c950b60fed67"
>
<Expression>TIU.TrainIntegrity.Status in
[
  Messages.Q_LENGTH.Train_integrity_confirmed_by_driver,
  Messages.Q_LENGTH.Train_integrity_confirmed_by_integrity_monitoring_device
]</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="160"
 Y="150"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DistanceRunInSR"
 Guid="773d6d2d-8050-4fef-92e6-539ea0b9728d"
>
<ReqRef
 Id="80c7f3b7-09d1-4a40-ab28-0aafd6ac3530"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c04e98fc-fc2c-4a33-b9c9-69a2cf7ed5f5"
>
</ReqRef><ReqRef
 Id="03cde0ce-fb7a-4c71-83d9-e32bb757174f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ceaf5691-5da1-4b54-91a1-b7091c3376ce"
>
</ReqRef><ReqRef
 Id="d1fd4df1-3d3f-4520-b838-9000fd3ebb82"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="700ef92b-c288-4dfc-b9e7-9cda5499b177"
>
</ReqRef><Comment>Provides the distance the train has run in SR mode, for comparison wit hthe maxmum distance allowed to run in SR.</Comment>
<Parameters>
<Parameter
 Type="DistanceIntervalEnum"
 Name="PointOfInterest"
 Guid="9039d245-ee58-4fd1-845e-23a0e2693a98"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Nominal"
 Guid="2cd35a10-37d1-401f-b71c-605833fe0011"
>
<PreConditions>
<PreCondition
 Guid="a04a9fe3-ccfe-41e7-9db0-4e4c173b87c7"
>PointOfInterest == DistanceIntervalEnum.Nom</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - Kernel.TrainPosition.SRStartDistance</Expression>
</Case><Case
 Name="Maximum"
 Guid="eea4e50b-8a7e-4d8d-9385-5e5c8f746d64"
>
<PreConditions>
<PreCondition
 Guid="e791ab41-f4e1-47ec-9211-23e80d1283e7"
>PointOfInterest == DistanceIntervalEnum.Max</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance + BaseTypes.LengthToDistance(Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTUNDER)) - Kernel.TrainPosition.SRStartDistance</Expression>
</Case><Case
 Name="Minimum"
 Guid="8daa68a5-19d7-4426-9706-3dcec08d2d2b"
>
<PreConditions>
<PreCondition
 Guid="4d659489-1337-46f0-b444-4c9721144492"
>PointOfInterest == DistanceIntervalEnum.Min</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - BaseTypes.LengthToDistance(Kernel.TrainPosition.ConfidenceInterval.ConfidenceInterval(ConfidenceIntervalEnum.L_DOUBTOVER)) - Kernel.TrainPosition.SRStartDistance</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Length"
 Default=""
 X="160"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TrainLength"
 Guid="f2c6361e-b0a6-4453-8039-fae14928bd1d"
>
<ReqRef
 Id="a3be6193-1d98-4009-8e1d-df9cd86ee857"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e59a1220-f70f-4356-a0ec-cf032e1b595c"
>
</ReqRef><ReqRef
 Id="e1d78a17-1bcd-4870-a539-278a995cac92"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6494a7a5-38f9-45d5-9701-29b57a14420a"
>
</ReqRef><ReqRef
 Id="71325bb5-51a0-4724-bf1c-658efb3ce4dc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ddb27ed5-b86c-40a0-86d4-69e228b5dca8"
>
</ReqRef><ReqRef
 Id="99b2ce8e-827d-48c7-89b4-3d1b09021dd1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a91834c4-4e9a-433c-b545-3e650524cf59"
>
</ReqRef><Comment>Provides the train length for the train position supervision.
In SL mode, the front and rear ends of the train are considered to be the front and rear of the engine.</Comment>
<Cases>
<Case
 Name="SL/NL Mode"
 Guid="9b767de0-3468-4f36-af82-70cfb7eb5281"
>
<PreConditions>
<PreCondition
 Guid="7f5f21f8-4aef-4736-b345-d96f9e3f3499"
>Kernel.Mode in [ModeEnum.SL, ModeEnum.NL, ModeEnum.PS]</PreCondition></PreConditions>
<Expression>TrainData.TrainData.Value.EngineLength</Expression>
</Case><Case
 Name="Otherwise"
 Guid="978c2759-2734-4aea-b702-6440e1f67f06"
>
<Expression>TrainData.TrainData.Value.TrainLength</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="270"
 Y="150"
 Width="100"
 Height="50"
 Name="DistanceReversed"
 Guid="8bb6bfb4-a95e-4f50-96d2-d416f2ece38a"
>
<Comment>Provides the distance the train has reversed from the reversing start.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="81c909a2-6d9e-4d66-8979-5948f199c884"
>
<Expression>Kernel.TrainPosition.ReversingStartDistance - Odometry.NominalDistance</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="10"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdatePositionState"
 Guid="6cdf2a34-87f3-4959-908b-9ba4ff2dda70"
>
<Comment>The train position is defined in relation to a LRBG. This, if the LRBG is defined, the position is valid, otherwise it is unknown.</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update position state"
 Guid="55a55aa2-e01a-4b26-a390-3a472410831f"
>
<ReqRef
 Id="3dbd1b48-23b6-40f9-a38e-77df9cc1ed68"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9e66317-3e85-4ddf-a4af-ba7a36eda376"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="LRBG is known"
 Guid="9d9c005e-2e23-456d-84c4-0297cbdc3ab4"
>
<Comment>If the LRBG is known, the position is valid.</Comment>
<PreConditions>
<PreCondition
 Guid="ebb63de6-5d6c-42ea-863c-cc45b2035c0b"
>Available ( BTM.LRBG )
  AND  
BTM.LRBG.NID != Messages.NID_LRBG.Unknown</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5de6dbe1-ecc5-4386-8dc0-d09a5a6a49de"
>ValidateInformation(Kernel.TrainPosition.Position)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LRBG is unknown"
 Guid="0928622d-2a35-4cb2-938b-03a752812d02"
>
<Comment>Otherwise, it is unknown.</Comment>
<PreConditions>
<PreCondition
 Guid="5234c501-b995-48d0-a954-656e018b210f"
>BTM.LRBG == EMPTY</PreCondition><PreCondition
 Guid="f7740abf-4293-414b-840d-342933b94656"
>Kernel.TrainPosition.Position.DataState != DataStateEnum.Invalid</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2ac2232a-f080-40b8-8b9d-71bf83d4e452"
>DeleteInformation(Kernel.TrainPosition.Position)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="TrainPositionStruct"
 DefaultValue="Kernel.TrainPosition.TrainPositionStruct{}"
 VariableMode="Internal"
 X="420"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Position"
 Guid="ae945ace-8720-498a-a351-dcc74280808f"
>
<ReqRef
 Id="3dbd1b48-23b6-40f9-a38e-77df9cc1ed68"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2cc1cad1-03f9-4a5b-b27d-425fd83c99fe"
>
</ReqRef><ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbfa7a99-0ee1-4ecc-859d-b11eb3c977fc"
>
</ReqRef></Variable><Variable
 Type="BaseTypes.Distance"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="160"
 Y="210"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SRStartDistance"
 Guid="e7248a60-09d7-4a0a-bf38-7234b34911e1"
>
<ReqRef
 Id="77289e9b-8c64-4406-8d33-fcf9d018e94c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3200b6eb-181a-40b6-8541-de165d8a5014"
>
</ReqRef><ReqRef
 Id="80c7f3b7-09d1-4a40-ab28-0aafd6ac3530"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="379e00c5-f7ff-46ba-bf22-1c929bfbdaf8"
>
</ReqRef><ReqRef
 Id="d1fd4df1-3d3f-4520-b838-9000fd3ebb82"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="148c87bb-4d08-4e03-b801-85c2f06273ae"
>
</ReqRef><ReqRef
 Id="03cde0ce-fb7a-4c71-83d9-e32bb757174f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c4b7653-be63-472f-8913-236ef25e975c"
>
</ReqRef><Comment>The odometry distance when SR mode is entered.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="420"
 Y="210"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ColdMovementDetected"
 Guid="e23d84c4-f294-4a26-b034-6df33be1cb1c"
>
<ReqRef
 Id="2998ba86-2e9d-4b02-8aa1-8368fcf74a87"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d66ec9f6-e815-4486-89cd-bfabe017b558"
>
</ReqRef><ReqRef
 Id="96c497d9-1029-481d-9775-eaf075881899"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="de367dbd-8110-4dd5-94a2-d28dc4a4402c"
>
</ReqRef><ReqRef
 Id="fcee3944-2911-422c-babf-349b36eaa478"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="28b9db3f-5130-4c53-9b78-a27a84d72ac0"
>
</ReqRef><Comment>Determines whether the train has been moved while in NP mode.</Comment>
</Variable><Variable
 Type="BaseTypes.Distance"
 VariableMode="Internal"
 X="270"
 Y="210"
 Width="100"
 Height="50"
 Name="ReversingStartDistance"
 Guid="ac6bfd88-e551-4b2b-873a-52c1f6270774"
>
<Comment>The odometry distance when reversing was initiated.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="Processing"
 X="10"
 Y="150"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Determine train orientation"
 Guid="342a3783-c702-47c4-a147-6ad4490e6b53"
>
<ReqRef
 Id="df7b5f6a-299e-410d-ac09-c0baf1903753"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="35f4480f-a62e-4ad9-bc07-ac4ffc026ac7"
>
</ReqRef><Comment>Determines the orientation of the train according to the status of the cabs.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Cab A is active =&gt; nominal orientation"
 Guid="3d4c8809-afd8-4d02-9044-21dccbd7326e"
>
<Comment>If the Cab A is active, the orientation of the train is considered to be nominal.</Comment>
<PreConditions>
<PreCondition
 Guid="8ef0a458-8454-4306-8e46-2d5be28ca190"
>TIU.CabA.Desk1IsActive</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4162fe54-0360-4c74-9828-3d6a02e65b26"
>Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation &lt;- OrientationEnum.Nominal</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Cab B is active =&gt; reverse orientation"
 Guid="da62cf88-4cf8-419a-8407-1a57dcc99883"
>
<Comment>If the Cab B is active, the orientation of the train is considered to be reverse.</Comment>
<PreConditions>
<PreCondition
 Guid="5e60262b-316b-41e8-a24c-4701b6e2618d"
>TIU.CabB.Desk1IsActive</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d3addb62-ff53-4f5c-90cb-c14436fd26bd"
>Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation &lt;- OrientationEnum.Reverse</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
