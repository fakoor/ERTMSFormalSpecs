<NameSpace
 X="120"
 Y="130"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Image="1"
 Name="BTM"
 Guid="abe3c9de-4d7b-4a03-a327-8f85ce216c28"
>
<Comment>Rules and procedures related to the reception and handling of balise group messages.</Comment>
<NameSpaces>
<NameSpaceRef
 Name="Linking"
 Guid="8fb5b694-9c14-4b50-8614-ab327fba1e03"
>
</NameSpaceRef><NameSpaceRef
 Name="Infill"
 Guid="ade9b64d-2516-4edc-81f4-09f73642687d"
>
</NameSpaceRef><NameSpaceRef
 Name="MessageConsistency"
 Guid="43aac66f-8361-46da-add0-78d5657b19c3"
>
</NameSpaceRef><NameSpaceRef
 Name="LRBG"
 Guid="cdad3bcd-47b4-4553-9fda-a4d69ecb4fea"
>
</NameSpaceRef><NameSpaceRef
 Name="Packets"
 Guid="f11f19e3-7f02-4c69-9613-7c81d2003dac"
>
</NameSpaceRef><NameSpaceRef
 Name="MissedBalises"
 Guid="621a8a89-8e87-42c3-a46b-58efea96b539"
>
</NameSpaceRef></NameSpaces>
<Structures>
<Structure
 Default=""
 X="510"
 Y="450"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PositionStruct"
 Guid="8ca407f2-8e0f-4627-b56c-5584e999d989"
>
<Comment>Saves the information provided by the odometry at the moment where a balise group is passed. Used to compute the position, over and under reading amount relative to that balise group.</Comment>
<StructureElement
 TypeName="BaseTypes.Distance"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position"
 Guid="64e0dbf9-512d-4f1f-aa55-215d81ca22df"
>
<Comment>Estimated position of the train.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UnderReadingAmountOdo"
 Guid="4a1d4052-682d-4b7f-89d2-163862a190b8"
>
<Comment>The under-reading amount.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OverReadingAmountOdo"
 Guid="a4915afe-ad95-4ea9-aac7-b511eb5fe837"
>
<Comment>The over-reading amount.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="510"
 Y="360"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LocationReferenceStruct"
 Guid="cdcfde8e-5a0f-4fae-a527-567ccb883fac"
>
<Comment>Keeps the location and time of passage over the location reference of a Balise group.</Comment>
<StructureElement
 TypeName="PositionStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position"
 Guid="b15b81c8-faa3-40b9-adf3-745bf7b8b4ff"
>
</StructureElement><StructureElement
 TypeName="DateAndTimeStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Timestamp"
 Guid="4ed3664e-befe-4a45-9b5d-42c4852d4240"
>
</StructureElement></Structure><Structure
 Default=""
 X="620"
 Y="450"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StoredBaliseStruct"
 Guid="3824a971-a03f-4913-9be2-55ee942cddf9"
>
<Comment>Structure containing a single telegram received from a balise and a flag to see if the balise was missed.</Comment>
<StructureElement
 TypeName="Messages.EUROBALISE.Message"
 Default=""
 Mode="InOut"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Telegram"
 Guid="ad863b60-3a1e-43a1-a9ee-a490ad1fdd90"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Missed"
 Guid="b1ba2f94-ae29-4f78-a71b-31f85e56796a"
>
<Comment>This variable indicates whether the Telegram was 
a) received from the trackside or 
b) is just a placeholder for a missed balise.</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="StoredBaliseStruct"
 MaxSize="8"
 Default="[]"
 X="620"
 Y="360"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BaliseGroupMessagesCol"
 Guid="e78a099b-8642-4076-a591-f69bc658f42c"
>
<ReqRef
 Id="8147a385-c93e-43f4-9eb0-fab4bf63ca62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc0e4b52-3342-412a-bfc9-83bf799fc2a8"
>
</ReqRef><Comment>List of balise telegrams representing a single balise message.</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="BaseTypes.Length"
 Default=""
 X="390"
 Y="80"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BGLocationAccuracy"
 Guid="82c93aa7-24c7-4c34-ba73-364413bf02cc"
>
<ReqRef
 Id="a2fa811d-bd40-4622-98d9-2f0c4c579f2b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc89be93-3405-48a6-887a-33c24565b1eb"
>
</ReqRef><ReqRef
 Id="9e4c5ab1-4454-4b08-9df1-666cf07b17ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7e200c2b-feaf-4c1d-be5f-51968f9267ca"
>
</ReqRef><ReqRef
 Id="7e712341-8fcf-474b-a20b-d3dc889cf08a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40808470-300c-476e-a373-ad623146adf8"
>
</ReqRef><Comment>Gives the value of the Location Accuracy which is determined either by the Linking (if available) or by the corresponding National Value (if applicable) or by the Default Value.</Comment>
<Cases>
<Case
 Name="Linking available"
 Guid="66f967b2-9ea2-4470-830c-40f7d1dc1e60"
>
<PreConditions>
<PreCondition
 Guid="fa49fa02-cf11-45fe-ad90-3229a3860cd5"
>Available ( BTM.Linking.CurrentLinking() )</PreCondition></PreConditions>
<Expression>BTM.Linking.CurrentLinking().LocationAccuracy</Expression>
</Case><Case
 Name="National or default values"
 Guid="590ee6d2-1a2f-48e2-94f8-abce6c0d7a36"
>
<Expression>BaseTypes.Length(Kernel.NationalValues.CurrentNV().DefaultLocationAccuracyOfABaliseGroup)</Expression>
</Case></Cases>
</Function><Function
 Type="PositionStruct"
 Default=""
 X="610"
 Y="140"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AntennaPositionFromOdometry"
 Guid="f0f2c6b2-53e3-4d96-808e-01b568084dd7"
>
<Comment>Provides the position from the Odometry.</Comment>
<Cases>
<Case
 Name="Always"
 Guid="d615b552-1523-4e37-9f1f-bfd4a9de8af3"
>
<Expression>PositionStruct
{
  OverReadingAmountOdo =&gt; Odometry.Accuracy.D_ora,
  Position =&gt; Odometry.NominalDistance - ActiveAntennaPosition,
  UnderReadingAmountOdo =&gt; Odometry.Accuracy.D_ura
}</Expression>
</Case></Cases>
</Function><Function
 Type="OrientationEnum"
 Default=""
 X="390"
 Y="140"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BGOrientation"
 Guid="6c6b5376-aa00-4f46-84a0-6aece30174c1"
>
<ReqRef
 Id="7ea29f51-073f-4293-8a53-6d777b781609"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73650424-456d-477d-8520-14defc2c76e1"
>
</ReqRef><ReqRef
 Id="5a70895f-ceeb-4c8f-9e52-f3de05ca5a83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5055a91b-b546-40b9-aff1-97d113fb2d83"
>
</ReqRef><ReqRef
 Id="d1944e18-a016-48f1-9817-9a6c415e92e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7dd8853d-c545-494f-8d2a-ffa6e804b314"
>
</ReqRef><ReqRef
 Id="370bc14e-630a-4f72-87f6-54e50015825c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ebdbf471-edcb-4fd7-82b6-33a5467a7cc7"
>
</ReqRef><ReqRef
 Id="9ffb7f56-2bd6-43f5-8def-6aac968df073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6381244e-1f94-41cf-972e-3398b62d9f6c"
>
</ReqRef><ReqRef
 Id="c616e51b-8db4-4b6a-b957-18b0ff09c9ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1413138-5cd9-418b-a0aa-4b80ca1d37cc"
>
</ReqRef><ReqRef
 Id="bd668bbe-6aea-492e-a1bb-5683e651c453"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74e7d8e3-1e40-4adc-a496-ff16c2ed3f00"
>
</ReqRef><ReqRef
 Id="84a3e716-7b2f-4eb0-93b4-872e90faf619"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="25440d84-0718-4e57-a466-afcf31a548bb"
>
</ReqRef><ReqRef
 Id="24a635be-ba49-419a-8cc5-c37817d23f66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="24b38875-6843-435e-8abf-f44eb7277d60"
>
</ReqRef><Comment>Returns the orientation of the current balise group</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="91c5b44a-788e-4658-be9b-763fdfa5f7e4"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Fewer than two balises in the balise group, valid linking information"
 Guid="f8c55f68-ab50-4409-988b-f66afe23e264"
>
<PreConditions>
<PreCondition
 Guid="682a9ec8-f37d-4d87-8dd6-9a4ca0648099"
>BTM.IsSingleBaliseGroup(aBaliseGroup)</PreCondition><PreCondition
 Guid="3f4762dd-f337-493a-927f-479853f08788"
>BTM.Linking.CurrentLinking().BaliseGroupIdentifier== GetNID_BG( aBaliseGroup )</PreCondition><PreCondition
 Guid="99f3dd17-d0be-4689-b9ec-5dfc9925b30e"
>Kernel.Mode not in [ModeEnum.SL, ModeEnum.PS, ModeEnum.SH]</PreCondition></PreConditions>
<Expression>BTM.Linking.CurrentLinking().Orientation</Expression>
</Case><Case
 Name="Fewer than two balises in the balise group, no valid linking information"
 Guid="02355d09-b3c3-4a71-80ad-92251096056d"
>
<PreConditions>
<PreCondition
 Guid="42e647d7-f4ec-404e-822d-0af260c9426c"
>BTM.IsSingleBaliseGroup(aBaliseGroup)</PreCondition></PreConditions>
<Expression>OrientationEnum.Unknown</Expression>
</Case><Case
 Name="First balise is last in the group"
 Guid="1b917fc8-846c-477a-b9f8-6b1bbf9a1a07"
>
<PreConditions>
<PreCondition
 Guid="99800f60-19c6-48c4-895b-d7aa823ecd0c"
>(FIRST X IN aBaliseGroup).Telegram.N_PIG == (FIRST X IN aBaliseGroup).Telegram.N_TOTAL</PreCondition></PreConditions>
<Expression>OrientationEnum.Reverse</Expression>
</Case><Case
 Name="First balise is first in the group"
 Guid="9ce6a19a-a14f-4efa-8a9d-6f7a4101f7ec"
>
<PreConditions>
<PreCondition
 Guid="a3515d8d-741c-40a4-8a64-acafbdeb205e"
>(FIRST X IN aBaliseGroup).Telegram.N_PIG == 0</PreCondition></PreConditions>
<Expression>OrientationEnum.Nominal</Expression>
</Case><Case
 Name="Two balises stored, N_PIG_1 lower than N_PIG_2"
 Guid="ae25aa1f-71a4-4d87-9b56-5ec6680f6877"
>
<Comment>This case covers the situation where the first encountered balise in the group was missed and the direction is nominal.</Comment>
<PreConditions>
<PreCondition
 Guid="5c1a408b-2831-4d4c-9008-3db03c567c80"
>(COUNT X IN aBaliseGroup) &gt; 1

  AND  

(FIRST X IN aBaliseGroup).Telegram.N_PIG &lt; (LAST Balise IN aBaliseGroup).Telegram.N_PIG</PreCondition></PreConditions>
<Expression>OrientationEnum.Nominal</Expression>
</Case><Case
 Name="Two balises stored, N_PIG_1 higher than N_PIG_2"
 Guid="7c70fdb1-9f62-4151-b0ad-78ecf220a67e"
>
<PreConditions>
<PreCondition
 Guid="20d361f2-70ef-4a67-9c01-5e11cd5cfb34"
>(COUNT X IN aBaliseGroup) &gt; 1

  AND  

(FIRST Balise IN aBaliseGroup).Telegram.N_PIG &gt; (LAST Balise IN aBaliseGroup).Telegram.N_PIG</PreCondition></PreConditions>
<Expression>OrientationEnum.Reverse</Expression>
</Case><Case
 Name="Otherwise"
 Guid="e8c38925-da03-4f17-a72e-f1d5e4ff496b"
>
<Comment>Default case.</Comment>
<Expression>OrientationEnum.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="500"
 Y="200"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ToBeHandled"
 Guid="5784ea65-414e-4412-8db7-bad78ec32edf"
>
<ReqRef
 Id="4e07491f-516f-4494-87d7-96cf0ecef9d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92c95d15-1f94-473b-beb0-144ef51692e3"
>
</ReqRef><ReqRef
 Id="55ed41db-cdd9-49da-80a2-b84fd2b4c659"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3fdc02d1-8ed0-4ea8-9f3f-78aada4d9680"
>
</ReqRef><ReqRef
 Id="76b98769-31ac-4281-b308-196dd999701e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04392093-2d30-49bf-bab3-e552205ef532"
>
</ReqRef><ReqRef
 Id="07d70a88-af4e-458c-871b-740e171d9640"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f95425dc-51fe-4ebc-ab14-0446448cb22e"
>
</ReqRef><Comment>This function indicates whether a single balise needs to be processed. Only the second of a pair of duplicate balises is handled.</Comment>
<Parameters>
<Parameter
 Type="StoredBaliseStruct"
 Name="aMessage"
 Guid="97fc975a-3d6b-44b1-b594-1bcd610e2aac"
>
</Parameter><Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="10a6a3d7-1bd3-4630-ade2-1c643dc6a63c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Balise missed"
 Guid="dd97cafd-8e4e-4dfe-8500-730851203e45"
>
<PreConditions>
<PreCondition
 Guid="2a76b638-b491-466d-89cd-23598dcaaa9f"
>aMessage.Missed</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Not a duplicate"
 Guid="15fa57fb-edc6-41e1-832c-27b0fbd51ee6"
>
<PreConditions>
<PreCondition
 Guid="de88cb07-520d-456f-8abd-c1ba1bb8184f"
>aMessage.Telegram.M_DUP == Messages.M_DUP.No_duplicates</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Duplicated balise, other one contains Default balise information"
 Guid="ad404ecc-daf4-4519-994b-21c75904ee01"
>
<PreConditions>
<PreCondition
 Guid="2677fec2-663d-4234-881b-e5d1fd11258e"
>aMessage.Telegram.M_DUP != Messages.M_DUP.No_duplicates
  AND  
(
NOT THERE_IS packet1 IN aMessage.Telegram.Sequence1 |
    Available(packet1.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION)
)
  AND  
(
THERE_IS packet2 IN Packets.DuplicateBalise(
      Balise =&gt; aMessage.Telegram,
      aBaliseGroup =&gt; aBaliseGroup
  ).Telegram.Sequence1 |
    Available(packet2.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Second of a pair of duplicates"
 Guid="8d9e8a5a-1f5f-4770-a887-da6bfa468479"
>
<PreConditions>
<PreCondition
 Guid="96082ab6-fc3c-4a7b-bdbb-3f0531f8b32d"
>aMessage.Telegram.M_DUP != Messages.M_DUP.No_duplicates
  AND  
(
NOT THERE_IS packet IN aMessage.Telegram.Sequence1 |
    Available(packet.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION)
)
  AND  
Before(
    ExpectedFirst =&gt; Packets.DuplicateBalise(
        Balise =&gt; aMessage.Telegram,
        aBaliseGroup =&gt; aBaliseGroup
    ),
    ExpectedSecond =&gt; aMessage,
    Collection =&gt; aBaliseGroup
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Duplicated balise missed"
 Guid="b637ca75-2fc2-4610-b628-97ee8ac7fa15"
>
<PreConditions>
<PreCondition
 Guid="490dd201-2515-4ce7-874d-e58c06cec244"
>aMessage.Telegram.M_DUP not in [Messages.M_DUP.No_duplicates, Messages.M_DUP.Spare]
  AND  
Packets.DuplicateBalise(
    Balise =&gt; aMessage.Telegram,
    aBaliseGroup =&gt; aBaliseGroup
).Missed</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="146db196-7b2e-4077-81cd-72cea6a41389"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="610"
 Y="200"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="AntennaDistance"
 Guid="71e1a1a9-1a82-4b22-9f19-0ead55a18d7e"
>
<ReqRef
 Id="858a955b-8eb5-4eac-b52e-49723ffd3d9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7904a906-de17-49e4-817b-3ae665deff46"
>
</ReqRef><Comment>Gives the distance between the safe front end of the train and the active antenna.</Comment>
<Parameters>
<Parameter
 Type="DistanceIntervalEnum"
 Name="aPointOfInterest"
 Guid="b6c13f39-419b-454b-b453-09051b6ed9cd"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="d62cbab2-876b-43a9-b9ef-9ab243cac385"
>
<Expression>Kernel.TrainPosition.FrontEndPosition ( aPointOfInterest ) - BTM.ActiveAntennaPosition</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="500"
 Y="140"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="IsSingleBaliseGroup"
 Guid="35c94014-3076-4d7f-9364-9793510f3456"
>
<ReqRef
 Id="0b39fdf7-d36a-45dc-81ad-4fc52969968f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c4e5e30-e804-410c-93f1-3f35c3684c3c"
>
</ReqRef><ReqRef
 Id="d3960249-edd7-4e75-8c50-ba27a4b4af49"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9cb72f70-6397-4ae2-bad7-c2db450f2398"
>
</ReqRef><Comment>Returns true if the current balise group consists of only a single balise</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="BaliseGroup"
 Guid="f45d0aae-d504-4d9b-a0f9-0a6d112387a1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="050bdffb-b0a0-4a7c-ad7c-995116a0edc3"
>
<Expression>(COUNT X IN BaliseGroup) == 1
  AND  
(FIRST X IN BaliseGroup).Telegram.N_TOTAL == 0</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="500"
 Y="20"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="IsLocationReference"
 Guid="ab39a627-bbab-4874-84a7-53e629e0f391"
>
<ReqRef
 Id="612e5c65-65af-4727-a4f9-ce73fbd5f0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="911b5162-095f-4bae-8e70-ddfa368528e5"
>
</ReqRef><ReqRef
 Id="77e74b63-e8c9-42d5-bcf6-0e5423c75697"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f91604a0-0395-4097-ab75-6ec48eee4f9f"
>
</ReqRef><Comment>Holds the location reference of the current BG</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="3c988b8a-14ee-49a6-8539-4e532d1d5fbf"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="First balise in group"
 Guid="ff32a53d-0091-42cc-aef2-99be365d973e"
>
<PreConditions>
<PreCondition
 Guid="7f978365-dc1d-4041-a1ab-d564fca4dfd3"
>Message.N_PIG == 0</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Second balise is duplicate of first"
 Guid="6e3e6161-6ce0-49d6-a44a-e7062b072fc4"
>
<PreConditions>
<PreCondition
 Guid="a02eb7ff-a0d5-41f1-87d0-6c54c1e7ae57"
>Message.N_PIG == 1</PreCondition><PreCondition
 Guid="2faa6422-23f7-41c4-85fb-699162e5f164"
>Message.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_previous_balise__seen_in_the_nominal_direction_of_the_balise_group</PreCondition><PreCondition
 Guid="0841abe9-feff-42b3-bd02-a00031e66078"
>NOT ( THERE_IS X IN BTM.CurrentBaliseGroup | (X.Telegram.N_PIG == 0) )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="cc8cac42-85a1-48e5-b8ad-78149207795f"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="390"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="FullBGReceived"
 Guid="8029ace7-da32-4bf8-a69c-b1628b25a1b4"
>
<Comment>Indicates whether the current balise group is complete.</Comment>
<Cases>
<Case
 Name="All balises received"
 Guid="35c3234e-81f9-4164-9fba-d17541b8e422"
>
<PreConditions>
<PreCondition
 Guid="ffbc3619-3161-4287-b261-cc5320a760c5"
>(COUNT X IN BTM.CurrentBaliseGroup) == MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL + 1</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="First balise(s) missed, nominal direction"
 Guid="3ac07160-83d4-45d5-ba75-63b82db2221a"
>
<PreConditions>
<PreCondition
 Guid="e9da31c6-973c-49aa-9e61-b5d14d2b5ebc"
>BGOrientation(CurrentBaliseGroup) == OrientationEnum.Nominal
  AND  
MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG == MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="First balise(s) missed, reverse direction"
 Guid="74a01db0-056e-448a-98b2-080ae42b2a15"
>
<PreConditions>
<PreCondition
 Guid="c215fd2a-7ce8-464f-9671-48c87c63b97f"
>BGOrientation(CurrentBaliseGroup) == OrientationEnum.Reverse
  AND  
MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG == 0</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="f008b546-138f-49b4-8f75-d24d3fc0c073"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.Message"
 Default=""
 X="390"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdatedReceivedMessage"
 Guid="7d7eed3f-34d0-4860-b21c-d1c2bf916454"
>
<Comment>This function returns the translated version of the received balise message. Note that the BTM struct Message is left unchanged. Returns EMPTY if both SystemVersion are empty.</Comment>
<Parameters>
<Parameter
 Type="Messages.BTM.Message"
 Name="aMessage"
 Guid="9cc39e95-c5d2-4610-bd5e-cc9a4bb97177"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="SystemVersion2"
 Guid="9d81f325-89f9-4d5a-a705-b3cbf9a2bb84"
>
<PreConditions>
<PreCondition
 Guid="e01bb44f-8f18-4f93-b8a3-eb4bdea23f23"
>Available( aMessage.SystemVersion2)</PreCondition></PreConditions>
<Expression>aMessage.SystemVersion2</Expression>
</Case><Case
 Name="SystemVersion1"
 Guid="7962ecd0-6df0-4778-a185-77e6b15e8b77"
>
<PreConditions>
<PreCondition
 Guid="add78aea-b85c-4eb5-9db0-97b08150a845"
>Available(aMessage.SystemVersion1)</PreCondition></PreConditions>
<Expression>VersionManagement.Translation.UpdatedBaliseMessage(aMessage.SystemVersion1)</Expression>
</Case><Case
 Name="Default"
 Guid="467845c9-3e20-4eee-bd0d-abebfcc8f698"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.NID_C"
 Default=""
 X="610"
 Y="80"
 Width="100"
 Height="50"
 Name="GetNID_C"
 Guid="a779da71-ea4f-4928-94bf-5ce1bf28727d"
>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="c1ef3d6e-8469-4245-b9fd-0e0aebd7cc6c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="8bfc56b0-18c2-4c57-b931-7b6ff9a6b972"
>
<Expression>(FIRST X IN aBaliseGroup).Telegram.NID_C</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.NID_BG"
 Default=""
 X="500"
 Y="80"
 Width="100"
 Height="50"
 Name="GetNID_BG"
 Guid="a18ae104-63f4-481a-aae7-eaa4c7372908"
>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="c87ef8e7-b45d-4b34-8230-451879ce11e1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="e10a60d7-5952-474f-b24e-55b9c3520f98"
>
<Expression>(FIRST X IN aBaliseGroup).Telegram.NID_BG</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="610"
 Y="20"
 Width="100"
 Height="50"
 Name="DistanceFromReference"
 Guid="0ae663a7-8b68-4ccb-8aff-35f888ff9ca9"
>
<Comment>The distance that the train has covered from its current location reference.
Used when a new BG is received, the parameter aLinkingUsed indicates whether to reposition the train based on the received linking information or whether to use the odometry distance.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="aLinkingUsed"
 Guid="83fb0854-ba5f-4f0e-bc60-2fc30e474183"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Linking used - repositioning information"
 Guid="da4871b3-f972-49c1-9cae-054736dcef35"
>
<PreConditions>
<PreCondition
 Guid="7fafc1aa-203c-4535-bc00-e69ab34d1cbf"
>aLinkingUsed</PreCondition><PreCondition
 Guid="002136ed-5249-4a30-a4d8-f566e91e7805"
>Linking.CurrentLinking().BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN</PreCondition></PreConditions>
<Expression>Kernel.TrainPosition.FrontEndPosition( PointOfInterest =&gt; Default.DistanceIntervalEnum.Nom )</Expression>
</Case><Case
 Name="Linking used"
 Guid="6a733c58-6ee4-4358-a5b5-d7771e02ee5d"
>
<PreConditions>
<PreCondition
 Guid="74979ccd-2860-4341-a7f9-50ba912f66c8"
>aLinkingUsed</PreCondition></PreConditions>
<Expression>Linking.CurrentLinking().Distance</Expression>
</Case><Case
 Name="Otherwise"
 Guid="6666be28-e39d-4e88-a92d-ec5dbfd8069b"
>
<Expression>Kernel.TrainPosition.FrontEndPosition( PointOfInterest =&gt; Default.DistanceIntervalEnum.Nom )</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="40"
 Y="490"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandlePacket"
 Guid="052d0827-c337-4549-9724-72afe831fafd"
>
<ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7d1a8168-b8bc-4b96-af40-5b9e285f9491"
>
</ReqRef><Comment>This procedure is called for each packet received with a balise telegram.
The relevant procedure is called to store and handle the data contained in the packet.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.SubStructure1"
 Name="Packet"
 Guid="ec46a4f0-3fc0-4db7-9ada-3d3456f83231"
>
</Parameter><Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="ca00b294-0df9-4d9d-9d66-46fbbd6b6b8d"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="671540ca-c9a8-4a2c-9c97-169becba5b2d"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistance"
 Guid="1f7dc1ec-11a8-4b68-b8b7-8ab540849b2c"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle new packet"
 Guid="b65b19ff-3968-4c36-8ee8-fc038e0d4821"
>
<ReqRef
 Id="88930fd0-2a41-48f8-ac88-35d8c1d60f47"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1bac924-6dc6-4d14-bacc-59c1d6247393"
>
</ReqRef><Comment>We suppose that an element of type Messages.EUROBALISE.SubStructure1 can only contain one field defined, representing a single packet. The rule looks for the first available element and when it is found, calls the corresponding routing to store the received information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Linking available"
 Guid="ee5a8bbe-075b-4889-b827-8eb384463824"
>
<ReqRef
 Id="a3ce052d-3ac7-4adb-a97c-c53d647cded7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="729e4e83-d2d2-40f1-8b2e-3414452f81a9"
>
</ReqRef><ReqRef
 Id="4ae178ee-6db4-474c-aa88-d5f8bd8ea1d7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="82c4cc0c-66ea-4a14-b302-490fb733c5a2"
>
</ReqRef><ReqRef
 Id="5e8ed861-509f-4d98-8c04-8bea3a8cd6c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c406e150-d303-4dd6-a853-f797e41df06a"
>
</ReqRef><ReqRef
 Id="4a52b034-1229-440d-b33c-bd9b65c26dab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5f46219-8aa8-4efb-909f-5049863aff96"
>
</ReqRef><ReqRef
 Id="0d145136-9c1d-4c04-bd9a-5987931ed765"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c2cd562b-ed41-4e52-aaf4-21994a871464"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="675acaac-123e-4d0b-84dc-67359475d56f"
>
</ReqRef><Comment>Handles linking packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="740ed4a7-b7cc-46f8-b0c9-dd3a37c4a2c5"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LINKING.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="04ae732a-d2f6-421d-8ffe-17d22831641d"
>Kernel.AcceptInformation.Linking( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="250427e6-8ddb-431d-a76d-b4432281374f"
>Linking.LinkingProfileReceived(
    Packet =&gt; Packet.TRACK_TO_TRAIN.LINKING,
    aDistanceFromRef =&gt; aDistance
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="National Values available"
 Guid="4574cd3f-8492-4e0c-a1d8-c04d2324f265"
>
<ReqRef
 Id="766f0274-5b6e-4050-a48d-226dccf68782"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e7814fa-2ca8-4150-ac0f-0e8939d52c32"
>
</ReqRef><ReqRef
 Id="967fe971-b137-4079-b900-5f6c1f5f25ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ba4ae04f-33e3-467c-86c7-c8b361bb570f"
>
</ReqRef><ReqRef
 Id="da594ef9-d8e9-4553-af3e-77f9102ec171"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="459bf5f8-2273-40d3-8549-3b6d58b7dfd5"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="41106ae2-f7bb-4465-b932-78232dc6e469"
>
</ReqRef><Comment>Handles National Values packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="5ba39e2d-0d86-4404-b853-53b808070955"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.NATIONAL_VALUES.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="6f2ee328-827c-4fb1-93da-3d55a15e4fb4"
>Kernel.AcceptInformation.NationalValues( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2719277d-f12f-479c-8278-abb173a2d862"
>Kernel.NationalValues.NationalValuesReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.NATIONAL_VALUES, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Repositioning Information available"
 Guid="36a11ebc-d5b0-4502-aa98-6972b7158392"
>
<ReqRef
 Id="d68a643a-2faa-429a-a1d6-2724d7c3ccbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="165c9b40-d9d0-4661-8b16-be10960d7c80"
>
</ReqRef><ReqRef
 Id="62aa6f8e-f444-4ed1-90b7-43dc64aa7594"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="680a4c3b-fd19-4bd8-8d77-e450c704f254"
>
</ReqRef><ReqRef
 Id="08e951b3-e2c5-45bd-a768-68580e2d4307"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a5c4a18-a8d3-4e4a-ae6b-b79ef9b41293"
>
</ReqRef><ReqRef
 Id="c786d14c-c637-4877-8d02-28ce94f66515"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84d2f221-ed2d-4ef1-99f7-9074ef84cb68"
>
</ReqRef><Comment>Handles Repositioning information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="a5ae63f6-8d36-44a3-bbd2-212a49b20d81"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="d86ad34c-f29d-4680-8d17-fef9ba598939"
>BTM.Linking.CurrentLinking().BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN</PreCondition><PreCondition
 Guid="0fa33894-ee64-4a71-b7fb-662d079bb38b"
>Kernel.AcceptInformation.RepositioningInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="11ff0426-7369-4b98-8ea9-b7674aadda0c"
>Kernel.MA.RepositioningInformationReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION, DistanceToBG =&gt; DistanceFromReference(True) )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Gradient Profile available"
 Guid="572ec7e7-dce1-4a08-a6ff-898d9b85f56e"
>
<ReqRef
 Id="d96e7170-b578-4e28-bb03-82d0b7cc6a6d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="90795abf-dac5-4a23-9b9c-c4065f08767c"
>
</ReqRef><ReqRef
 Id="e1e59e57-94a5-48ea-bb40-d183aa229e20"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb123abf-ec1e-4c1a-9985-29a01e88bcd9"
>
</ReqRef><ReqRef
 Id="91c896f9-c3d0-473b-bb99-e2dfb219ae1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a423c1f2-fcdf-4a40-9abb-3af782c6c62e"
>
</ReqRef><ReqRef
 Id="4396f131-3dd7-4601-be15-b4827d98bf32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="13228851-bc2a-4830-9cf6-001dedbf6e09"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad164c1d-031a-45b3-8d55-1b347bac98e9"
>
</ReqRef><Comment>Handles Gradient packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="707ec8bf-fadd-4254-9e70-04791d061d52"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.GRADIENT_PROFILE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="95f2c2bb-dbf6-41e8-ad9c-017f485637c0"
>Kernel.AcceptInformation.GradientProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f8e04781-7b14-4460-bedf-dfcad86bfaf6"
>Kernel.TrackDescription.Gradient.GradientProfileReceived(
    Packet =&gt; Packet.TRACK_TO_TRAIN.GRADIENT_PROFILE,
    aDistanceFromRef =&gt; aDistance
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="9b996a70-75ee-44f8-83f1-dcd1bfa4cd70"
>
<ReqRef
 Id="7ba0f65c-e1b5-422f-a1fb-e947e73cd4f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fba3ed3b-43f9-4a7e-ae85-1d0035c7ec8c"
>
</ReqRef><ReqRef
 Id="beb70c99-c336-489a-a97e-b8236a026061"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="280e64b2-2408-4b00-b8ac-5b047b36e0ba"
>
</ReqRef><ReqRef
 Id="9570bc20-fe09-49cb-8e1d-d7adbb5fdfbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d3dcf489-908e-4a6e-9dd8-2675337864fa"
>
</ReqRef><ReqRef
 Id="9e0c6d45-0f4a-482d-9a28-dbe1f41746ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="146aa7d5-90c2-4351-a2b0-7c02ff13fb23"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d692c91a-a341-4ea3-8748-20fa453e76cf"
>
</ReqRef><Comment>Handles Static Speed Profile packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="f883aba6-4c27-4a72-b986-d0388d7577cd"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="0a981d98-4459-449e-8252-0b98745e8cb8"
>Kernel.AcceptInformation.InternationalSSP( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e20f018d-a037-46f0-a3ad-a27b7eb1d05f"
>Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Change of traction system available"
 Guid="fc4e8dd5-7ad3-4fd2-b44a-13afc089db60"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1d812680-2c70-4fbf-a7a5-33665bb908ad"
>
</ReqRef><ReqRef
 Id="2559c745-3a6f-444a-b3bd-fb143a2a1fc6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e664de52-c95e-45a0-8e42-e3bbcb3d67a1"
>
</ReqRef><ReqRef
 Id="9221690b-b0bc-4a5c-9307-9de49243cfef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e26a34c-60d6-4a61-b9ea-9147b49412f4"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d645e84f-c87d-4359-ba28-bae5edf05206"
>
</ReqRef><Comment>Handles Track Condition Change of Traction System packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="08e11111-2014-42e6-98f6-54a7fe1b3c8e"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="9fda324c-48ab-40d4-a6c3-a266822c2cb5"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0720e95d-207d-40f6-9fb3-40fbbf1628f7"
>Kernel.TrackDescription.TrackConditions.TractionSystems.HandleTractionSystemProfile(
    Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM, 
    aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Change of allowed current consumption available"
 Guid="8448c5a5-bbd8-48f5-ae84-e1b63f672c7d"
>
<ReqRef
 Id="3b292c0a-1360-49a7-9047-9707757f6e7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="190fb223-2c21-4e2f-abdd-bca79a7608e4"
>
</ReqRef><ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="47ea4e15-5a4d-4581-b3fa-17ea4b4ab0fa"
>
</ReqRef><ReqRef
 Id="526da681-fc2c-4e56-908e-7d41f5632d7e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fdc21444-3601-465f-bb86-965441d7340d"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ba7ed8b-ca2d-425b-a7e1-1c6ff3513492"
>
</ReqRef><Comment>Handles Track Condition Change of allowed current consumption packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="2ae476f8-85fe-405e-9228-8e0cf7bf9516"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="e320cf30-ddc4-4568-94c4-370dc6fac3e0"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f3afa4bc-a50e-4fbb-818c-4f503b306e90"
>Kernel.TrackDescription.TrackConditions.CurrentConsumption.HandleCCTrackConditionProfile( Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION, aDistanceFromRef =&gt; aDistance)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Session Management available"
 Guid="68003d12-e6dc-4138-a684-695bf74a4f41"
>
<ReqRef
 Id="ff45f18e-7a7b-412e-8847-569b6605d632"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93a3b5b2-7382-44ed-90cc-739df63b7fb8"
>
</ReqRef><ReqRef
 Id="af0db000-6b09-4a25-b01b-439fa27cbc6a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f525ce1-f6fd-45db-a9bc-14e85abac630"
>
</ReqRef><ReqRef
 Id="18318a83-420a-41a7-b3eb-e4e67f1e3f97"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="551dbd77-2393-41c7-9fed-40126a123a95"
>
</ReqRef><Comment>Handles Session Management packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e5602e17-2393-423c-b397-89dcba576dcf"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.SESSION_MANAGEMENT.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="26169b37-911f-4e40-9127-f2f5a4805ea3"
>Kernel.AcceptInformation.SessionManagement( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8e4e8741-f67b-46ff-a5e6-fcfa1ce7192f"
>EURORADIO.RBCConnection.Contact.TracksideOrderedSessionReceived(Packet.TRACK_TO_TRAIN.SESSION_MANAGEMENT)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Radio Network registration available"
 Guid="2b59e652-a400-4d6a-89c2-e13efd458d81"
>
<ReqRef
 Id="6476afb5-0645-4298-926a-e67147752ddf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b32c1d05-cb39-483f-8534-e688a9e7a3f4"
>
</ReqRef><ReqRef
 Id="031d12f5-b1df-4716-9eda-a3495861e160"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5aaf0fc4-3913-45e1-ad04-f0030332d4b7"
>
</ReqRef><ReqRef
 Id="da86aaf7-6b30-4a15-b59d-37e639bcdfc8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e4041e40-e667-4343-ba04-8dda9ee940ec"
>
</ReqRef><Comment>Handles Radio Network registration packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7dde0488-8df7-418d-95ee-21082e23dfa7"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.RADIO_NETWORK_REGISTRATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="080e884b-999a-43f0-91f0-7d8e8a6b11ec"
>Kernel.AcceptInformation.RadioNetworkRegistration( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="29555d56-e93d-4b03-bcd8-cd57ddaba9f7"
>EURORADIO.Terminal.RadioNetworkRegistrationReceived ( aPacket=&gt;Packet.TRACK_TO_TRAIN.RADIO_NETWORK_REGISTRATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Conditional Level Transition Order available"
 Guid="0d362c8e-af10-4435-ab72-0549d5138943"
>
<ReqRef
 Id="51ddbc44-360a-4339-9b7c-fc91347a5da2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0bc128a5-192b-44fe-9d95-5b1cb7d5232d"
>
</ReqRef><ReqRef
 Id="377cc4cc-52bc-4bc6-8489-759a13078b63"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f8f13fbe-4d40-49a7-8358-0d5681997ea5"
>
</ReqRef><Comment>Handles Conditionan Level Transition Order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7d08f93b-f3cf-41fe-8d7c-ded1a543e64d"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.CONDITIONAL_LEVEL_TRANSITION_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="d97dda75-aa31-4a67-9b83-9d5f0812eda4"
>Kernel.AcceptInformation.ConditionalLevelTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="edbec74c-90c8-4666-8493-c72753b8e924"
>Kernel.LevelTransition.CLTOReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.CONDITIONAL_LEVEL_TRANSITION_ORDER )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="List of balises for SH Area available"
 Guid="288c4793-5378-4958-85b2-98e5600ac740"
>
<ReqRef
 Id="e6b9b34b-5183-45ec-96a2-8eef4909b34c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="600fda9b-e497-4e8f-9fb6-1e61e86a9f9a"
>
</ReqRef><ReqRef
 Id="d52b6935-7a67-4676-ae5b-0c905452c8d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c48f8f17-8039-45f7-a699-bc4853b11bff"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a568580-fa87-49d8-b5e4-9e8cecf335c4"
>
</ReqRef><ReqRef
 Id="e915fc9d-2b27-4f90-b3bb-ca784a55e1ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b2295954-b470-48cc-93e3-fcab64350d27"
>
</ReqRef><Comment>Handles List of Balises for SH packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="90ab8949-4dbb-4fdc-973b-d6f4b75d9912"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="3b824ad9-a3ef-452b-a33e-98f9852625f0"
>Kernel.AcceptInformation.MovementAuthority( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2906dae6-d0c9-4e48-a5e0-1fea924865a0"
>Kernel.Modes.Shunting.HandleNewListOfBaliseGroups ( Packet =&gt; Packet.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Axle Load Speed Profile available"
 Guid="f7984559-8457-4272-977c-a4c77df06487"
>
<ReqRef
 Id="0bc77f7e-62ac-42cc-bf02-051522a4d11a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2bfd9db-c889-4bf3-91e1-b1a74acca3ed"
>
</ReqRef><ReqRef
 Id="6a6eebd7-7178-4712-b7fa-135df10c5a4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3741a9bd-7bad-48fa-af4e-6a49ba8b3035"
>
</ReqRef><ReqRef
 Id="a3345820-31df-4b78-835f-d02b8d42d3bc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd48f242-0f6e-42c2-b2b6-a5833d9a5635"
>
</ReqRef><ReqRef
 Id="9e4cc30b-7c23-4202-aa4b-87839eea29a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a846ead-4f95-4e27-b0f7-c1ccbbf3590f"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dca6b8bc-0668-448b-ab1b-00b3411d6eeb"
>
</ReqRef><Comment>Handles Axle Load packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7e4e2969-37b5-42c9-be79-a5cabaec81d7"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="0850e212-45c4-447c-ae3b-a10a6ccc2731"
>Kernel.AcceptInformation.AxleLoadSpeedProfile( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d6ca9514-566f-4887-a3f1-0764c122aa72"
>Kernel.TrackDescription.AxleLoad.AxleLoadProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Permitted Braking Distance Information available"
 Guid="d158b9d7-ea35-4ceb-ad40-fa4b692c4efc"
>
<ReqRef
 Id="0c087a57-86f8-4190-81b9-2698efc3cc18"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c249119-30cc-445b-a862-da63a45c9756"
>
</ReqRef><ReqRef
 Id="18e66d36-7f79-47c5-92e4-d8b744a4513d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92aebd50-1d64-45fc-8a8d-d2468bcdccde"
>
</ReqRef><ReqRef
 Id="1b02a3e8-5313-4a1e-8209-c203e96ab40f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d50e4849-9617-4801-84b7-431e4ada478b"
>
</ReqRef><ReqRef
 Id="faca2edb-7220-4d55-bebe-f367d8f8d94a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bc21fce-7dbe-4d3a-a50f-35eb553ae092"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04ea5d44-6161-49fd-b0bd-95c13ce9e23c"
>
</ReqRef><Comment>Handles Permitted Braking Distance Information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="ce7592d3-5d36-42a6-a430-0f02f26d87b3"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.PERMITTED_BRAKING_DISTANCE_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="63b17e86-0a51-4eea-820f-70178c39402a"
>Kernel.AcceptInformation.PermittedBrakingDistanceInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a7bf6d39-8ef9-4f76-b5e1-4b42aae162ea"
>Kernel.TrackDescription.PermittedBrakingDistance.PermittedBrakingDistanceProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.PERMITTED_BRAKING_DISTANCE_INFORMATION, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction available"
 Guid="a9e0a232-d628-4b76-8f04-dcb40810f997"
>
<ReqRef
 Id="0ef0898e-cf23-489a-a1ec-efefda2bff98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="debfab3a-faab-46ce-ba90-55530b2190c9"
>
</ReqRef><ReqRef
 Id="37cb1c8d-6ea0-43c6-85a9-6ce724bf590e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac60629c-9a25-4729-a760-e04a89fcd270"
>
</ReqRef><ReqRef
 Id="2d4205fe-a62e-4306-88c0-fa8ed50b9d93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7586b6bb-6cfb-456b-bb84-4b9c27e74646"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3004849e-c559-48e4-bd07-56f1fac10ac3"
>
</ReqRef><Comment>Handles Temporary Speed Restriction packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="695bdf97-2135-4805-808a-b6281c1da123"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="f7f0dee3-8164-4d11-996e-7a7ec24af01f"
>Kernel.AcceptInformation.TemporarySpeedRestriction
(
  aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup,
  aNID_TSR =&gt; Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.NID_TSR
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c77c6a04-53bc-449e-b9d8-d1ccaa963ef5"
>Kernel.TSR.TemporarySpeedRestrictionsProfileReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction Revocation available"
 Guid="ce66e060-6753-4da8-b589-9d445416c640"
>
<ReqRef
 Id="1c1c2dc5-c171-456d-9a54-a4480effe5a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="984372ba-6c35-4d69-b98e-ec62f161d139"
>
</ReqRef><ReqRef
 Id="fcf6574b-fd16-4246-81d9-07cda44db502"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="80044d87-8774-474a-9c14-55493631c929"
>
</ReqRef><ReqRef
 Id="a12cbea0-bfe5-4f24-ae74-56261d93466b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eb900dcb-c1ed-45fd-8fdc-4a0ba23f0acb"
>
</ReqRef><Comment>Handes Temporary Speed Restriction Revocation packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="673297fe-8eba-443e-93e0-6cde374acf93"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION_REVOCATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="4889cb99-67ac-476c-ac67-96baed35877f"
>Kernel.AcceptInformation.TemporarySpeedRestrictionRevocation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e619da6c-cc31-4f62-be09-57e9632df39f"
>Kernel.TSR.TemporarySpeedRestrictionRevocationReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION_REVOCATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Big Metal Masses available"
 Guid="ced1a7db-bddb-4b6e-9e46-0ea249622bfd"
>
<ReqRef
 Id="a013028b-ded7-4e9f-9521-43654f2cb992"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d9fb7cb1-8637-4910-8436-7ce771958686"
>
</ReqRef><ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="551e1e38-b27e-4697-9dcc-60e0b422a7d6"
>
</ReqRef><ReqRef
 Id="32b93913-0b12-48e8-8867-1fabfb0ae322"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a944689a-9002-41e3-bb3c-13734be82b5c"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c465f4c6-dd9e-4e2b-8036-a00e17534e81"
>
</ReqRef><Comment>Handles Track Condition Big Metal Masses packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="a21202a1-5f8b-4294-a6a7-80d366dcaf78"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_BIG_METAL_MASSES.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="cca34d29-a193-4757-b982-b2b39d7a641d"
>Kernel.AcceptInformation.TrackConditionsBigMetalMasses( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a8168c14-8dea-4896-9b29-5f71ec706278"
>Kernel.TrackDescription.TrackConditions.BigMetalMasses.HandleBMMTrackConditionProfile( Packet.TRACK_TO_TRAIN.TRACK_CONDITION_BIG_METAL_MASSES, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition available"
 Guid="288dd8f6-b8e0-484e-b5d9-84abc3b56c83"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9590434-0ba2-4393-9a3d-2d85419aa7f0"
>
</ReqRef><ReqRef
 Id="ee609856-411d-4bb2-ab88-76b574aa3013"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c221cd2-82c8-4ea7-932b-460c26f2c972"
>
</ReqRef><ReqRef
 Id="46ff0663-ed84-4dea-af46-b87941a77c51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c81bae62-b211-4262-abf9-f2e877c51023"
>
</ReqRef><ReqRef
 Id="9eb67bec-5e3a-407d-8b6e-e3d49d57e883"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ddcb67aa-989d-4464-87fa-f13ebb021a8b"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f326508-7a58-433b-a1c0-7d1d5cd9ac10"
>
</ReqRef><Comment>Handles Track Condition packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="0d34e791-f010-453b-b97f-105cc27ebddb"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="8f322232-1723-481f-85d9-b14c2fde161e"
>Kernel.AcceptInformation.TrackConditionsIncludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b347e32c-19e6-4ec5-8505-a3bae2deeed2"
>Kernel.TrackDescription.TrackConditions.General.TrackConditionProfileReceived( Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Station Platforms available"
 Guid="848f07ff-38f9-43db-a24b-426c19fd0b9f"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="86fe59f8-52b0-4db0-ac6a-f2b2dc6a5150"
>
</ReqRef><ReqRef
 Id="47c59e98-996c-4daa-84b7-bda20f4e45ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fda02217-3575-4818-8aa9-e47e3ef07114"
>
</ReqRef><ReqRef
 Id="0be2ea06-0c8b-4622-9a32-bd8954c01555"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e1f6383c-4c01-438c-a0ac-2d720dcd42c1"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b9cdbfd-6403-4fdb-b2ae-100e777439b8"
>
</ReqRef><Comment>Handles Track Condition Station Platforms packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="c3cf8574-ecaa-4d54-b4cf-cc3262950012"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_STATION_PLATFORMS.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="7f7b7b5a-c73f-4577-a4be-fd53a96683e6"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e37299ce-6e60-4015-9897-e33c8b3ca56c"
>Kernel.TrackDescription.TrackConditions.StationPlatform.SPTrackConditionProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_STATION_PLATFORMS, aDistanceFromRef =&gt; aDistance)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Route Suitability Data available"
 Guid="44902d7c-8bf5-4dc5-bae9-be190af0d975"
>
<ReqRef
 Id="3eae43ab-6f26-4908-9360-5a8ce0bec069"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d07142e7-5480-42ec-845a-0f490543849f"
>
</ReqRef><ReqRef
 Id="352086ee-e08d-456c-a884-d2ee94aec4e9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="783c6e19-ecb4-43e6-aa0f-e67c79e1b870"
>
</ReqRef><ReqRef
 Id="655cd82d-364d-40cf-9540-62e1d8292f94"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d30b80de-ed78-424d-b01f-acd191b04430"
>
</ReqRef><ReqRef
 Id="21443e68-000d-4c84-b4f4-17c5373d0a4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b54a6043-dcde-4532-aef6-ee05ecce933b"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc8b01db-2e34-4ff0-adb2-73a51ef3ae5b"
>
</ReqRef><Comment>Handles Route Suitability packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="41f1baa5-c1ed-48ea-91a9-de8a5b5fbaef"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.ROUTE_SUITABILITY_DATA.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="bf657fe9-3da3-47c9-a5c1-642d726973e4"
>Kernel.AcceptInformation.RouteSuitabilityData( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="17d0d98e-1746-417e-b3d1-a0409a79647c"
>Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfileReceived ( Packet.TRACK_TO_TRAIN.ROUTE_SUITABILITY_DATA, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Plain text message available"
 Guid="ddb5d31a-d42a-4f09-8e82-268f192f63d0"
>
<ReqRef
 Id="cc1f66d4-6eec-4fe4-a302-2e6287ccb3f0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb6397f1-eaa3-49b2-b6c1-bca940170c53"
>
</ReqRef><ReqRef
 Id="c3338b70-b8f1-4525-ae95-a94e1b92981b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c41b327b-3426-4505-8aea-0fda63d12f3d"
>
</ReqRef><ReqRef
 Id="13227255-d959-4724-9371-31427e4538a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="643e7b8b-78b4-4ea4-82fe-b560d0cc0bd1"
>
</ReqRef><ReqRef
 Id="2b4cc227-208a-49c5-8f4c-a566e7eac74b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="885582da-e304-43fe-987a-6e05289ee108"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6fb7ee4f-8ecc-432c-b53f-8871bb7b1493"
>
</ReqRef><Comment>Handles plain text message packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="d8ba5bcd-8223-429d-8277-f448777e729d"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="4f7c7fe6-236a-4386-aea5-ac1f82161f3a"
>Kernel.AcceptInformation.PlainTextInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7713bd12-2bc6-49fa-ab02-d4c7ff500cb1"
>Kernel.TextMessages.PlainTextMessageReceived( aPacket =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Fixed text message available"
 Guid="b6057604-414a-41d3-832f-b7d12d856cab"
>
<ReqRef
 Id="85fef952-5e74-4514-b7d4-1c70f23587c0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="acc0c4a9-782b-4c2b-bb9e-bab94186c287"
>
</ReqRef><ReqRef
 Id="c3338b70-b8f1-4525-ae95-a94e1b92981b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="02d12123-9562-4dda-a3f9-6397a02aedaa"
>
</ReqRef><ReqRef
 Id="13227255-d959-4724-9371-31427e4538a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97136d4f-6d25-4064-af7a-d1aa768083b2"
>
</ReqRef><ReqRef
 Id="52943307-1c06-4cc3-94d3-f778ce8dd8d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bf50b4c-52b0-4da2-800c-2b9bef9e3258"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6281d087-992c-4f9c-94fd-b93ee85d03c9"
>
</ReqRef><Comment>Handles fixed text message packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="cfc39b91-6fff-4355-b014-54bb786fdf6d"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="1dc85993-5040-4605-bb00-d6e220f6c2dd"
>Kernel.AcceptInformation.FixedTextInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1db0e5a3-813a-47ec-82c2-e6aa26ebb770"
>Kernel.TextMessages.FixedTextMessageReceived( aPacket =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Adhesion factor available"
 Guid="d5642e3e-304c-4468-91e2-996697f57585"
>
<ReqRef
 Id="edb711e6-2b8c-4c00-88b8-563ee23ec94b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10b3393f-d736-4af5-baa4-8d492566e0a0"
>
</ReqRef><ReqRef
 Id="115b09d2-66f8-4553-9085-6484d37ec385"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fcd09a16-ff2b-4fd8-8a5f-9398280995f4"
>
</ReqRef><ReqRef
 Id="f83a7563-dcc4-4041-8201-a5d79f86a5c0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7dc9c887-3bad-458b-8366-67c48f7f9747"
>
</ReqRef><ReqRef
 Id="ed2472a1-ec6f-4b94-b43e-a0b17ee7080c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cbdfafe3-98a1-4e46-87df-3e4056d65c43"
>
</ReqRef><ReqRef
 Id="7ee3b877-7ff2-4541-aa86-6af70c0cb7c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03a19c5e-5b39-4b5f-9eb0-7f9546959a7b"
>
</ReqRef><ReqRef
 Id="903134a0-7b20-4b2e-ab42-30cae27fea81"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="72df286c-b028-4f29-be77-e201172cc4a5"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b3dbfb9-ce69-4147-99ce-c77c38d3a2d1"
>
</ReqRef><Comment>Handles Adhesion Factor packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="3df15a50-e4cd-4343-8a41-cb8d3cec0b37"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.ADHESION_FACTOR.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="5a708ddb-07ae-4860-89ce-d0747b1ab121"
>Kernel.AcceptInformation.AdhesionFactor( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="962f5801-f0a9-42c3-a4c0-6ea2c50f0797"
>Kernel.TrackDescription.AdhesionFactors.AdhesionFactorReceived ( Packet.TRACK_TO_TRAIN.ADHESION_FACTOR, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Geographical Position Information available"
 Guid="58f36235-339e-4d9e-a330-534564370838"
>
<ReqRef
 Id="bfb92914-1319-4a13-bb8f-c623e5f7e53a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b847fa2e-92db-443a-878c-7e801b35892a"
>
</ReqRef><ReqRef
 Id="16e1df6b-c27b-4c82-8dcf-37b394753241"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18d0aefc-97f4-4a87-99ea-513e747f15ef"
>
</ReqRef><ReqRef
 Id="3f471e44-8594-4731-ba67-b7173dc06106"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f536e705-bca2-45fb-a91f-bf477c1ef940"
>
</ReqRef><Comment>Handles Geographical Position packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e7d4f283-e559-4695-af6d-3d536bd9b26f"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.GEOGRAPHICAL_POSITION_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="132a1d5d-1ce0-4c2a-a4de-f9c2704da604"
>Kernel.AcceptInformation.GeographicalPosition( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1c876aff-a87a-4254-9bd2-29322f74ea4b"
>Kernel.GeographicalPosition.GeographicalPositionReceived ( aPacket=&gt; Packet.TRACK_TO_TRAIN.GEOGRAPHICAL_POSITION_INFORMATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level Crossing information available"
 Guid="3ca382d8-714f-4601-a04e-5e6340ece1bb"
>
<ReqRef
 Id="0f039a3b-873b-484c-913f-292a6031b162"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dd858604-cb55-4252-87a2-7a1b27172996"
>
</ReqRef><ReqRef
 Id="8a060a51-4b93-4eb7-aa9b-5b5c264b6820"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed90fe7b-8bf5-48ae-9e67-71af60a9e0cc"
>
</ReqRef><ReqRef
 Id="4744429f-fce3-4833-817a-c0cd74ffcd7f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9e8d51c7-a816-47a4-bebb-7b8c472c39a6"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="503c19d5-7218-4650-b01e-cfd61b0975e7"
>
</ReqRef><Comment>Handles Level Crossing packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e44772b8-5ec5-4de6-9609-3ddde969f874"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LEVEL_CROSSING_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="8daf8ed5-ae52-4f28-8c1f-9db08ae5c8ad"
>Kernel.AcceptInformation.LevelCrossingInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )
  OR
True</PreCondition></PreConditions>
<Actions>
<Action
 Guid="961a9459-5891-48f0-8de2-eddc845ec82f"
>Kernel.LX.LXReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.LEVEL_CROSSING_INFORMATION, aDistanceFromRef =&gt; aDistance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Ahead Free up to level 2/3 transition location available"
 Guid="3e1e35c2-8ca1-4ddf-82d7-0e25d78a10e7"
>
<ReqRef
 Id="864033cc-a0bd-4284-9de8-2572cad9faf5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="66f64433-ce22-4bbb-8377-14fa4c38c76d"
>
</ReqRef><ReqRef
 Id="a5cab7d5-9533-4bee-9cb2-2fb89da811cd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8acbd76e-5078-4625-8fcd-fcd98f750c4d"
>
</ReqRef><ReqRef
 Id="7ae2241b-9a89-4829-8cca-c5d8339cd425"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1ae791f7-4e57-44fb-a86b-69cbe6b14168"
>
</ReqRef><Comment>Handles Track Ahead Free up to lebel 2/3 transition location packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="09dc7e93-e179-44cf-a996-1512cd99d929"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_AHEAD_FREE_UP_TO_LEVEL_2_3_TRANSITION_LOCATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="9e67ba68-22f6-4e7c-a781-e7f5dc5f343d"
>Kernel.AcceptInformation.TrackAheadFreeUpToLevel2_3TransitionLocation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Send MA request"
 Guid="f9d974f9-1e11-40b0-a44b-d38c1c34fa97"
>
<ReqRef
 Id="0ee0129e-1504-4c7f-ab04-b8c8d596fe5a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="727358ea-e3d6-4107-ad07-3f703ee3b577"
>
</ReqRef><ReqRef
 Id="4443416b-4b5b-4896-a845-222b762d3950"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="42371c33-8091-4e62-9d37-57c8b350b245"
>
</ReqRef><ReqRef
 Id="cf6c6b17-27a3-476b-8db5-eab7f0aceb1e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b4154eed-f979-4136-9fd7-3f0c1d8ad63d"
>
</ReqRef><ReqRef
 Id="f119af99-2c5a-4a79-9d1f-bad360c248ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="965a9ebf-3ad0-4a94-9737-67d7db918c60"
>
</ReqRef><Comment>In level 0,1,NTC: if a level 2/3 transition is announced and a communication session is already established, an MA request is sent to the RBC.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send MA request"
 Guid="d9afa2e8-bc08-487a-b28e-cc0c9370afb6"
>
<PreConditions>
<PreCondition
 Guid="e9f7503a-a201-4ce0-be40-99cef91b92ba"
>EURORADIO.Terminal.HasActiveSession()</PreCondition><PreCondition
 Guid="afc8b3ae-0a5f-413b-a613-0d8145a1c32f"
>Kernel.LevelTransition.LevelTransitionToProcess != EMPTY
  AND
  Kernel.LevelTransition.LevelTransitionToProcess.TRLevel.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition><PreCondition
 Guid="9f677cc3-085c-4916-af03-783e04349ffc"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.L1, LevelEnum.L2]</PreCondition><PreCondition
 Guid="ee018937-eccf-4494-9c69-0260e6686b07"
>Kernel.ActiveFunctions.RequestMA_TrackAheadFreeUpToL2_3()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8b6b13bc-da05-493a-8895-bd58979b488e"
>EURORADIO.RBCConnection.CurrentRBCConnection().SendMARequest
(
    aReason =&gt; Messages.Q_MARQSTREASON.TAF_up_to_level_2_3_transition_location,
    aPacket =&gt; Messages.PACKET.TRAIN_TO_TRACK.LEVEL_2_3_TRANSITION_INFORMATION.Message
    {
        NID_PACKET =&gt; 9,
        NID_LTRBG =&gt; Packet.TRACK_TO_TRAIN.TRACK_AHEAD_FREE_UP_TO_LEVEL_2_3_TRANSITION_LOCATION.NID_BG
    }
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="RBC Transition Order available"
 Guid="70731a0e-ba5f-484f-a027-c4d09e290b80"
>
<ReqRef
 Id="277de94f-c4cd-4612-97ca-ead1fdd29073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1bc2eb0c-ef5d-4f83-9cb0-c80ca1ee51b0"
>
</ReqRef><ReqRef
 Id="f69899f9-70f7-4f0e-bc95-d9d97964dc81"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a4dd1bba-b81d-4621-b98b-0832708d52cf"
>
</ReqRef><ReqRef
 Id="813504ec-6af8-4d96-be72-5e3b6b595a0a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bfd9533a-7171-4d80-8b95-5dc0b2eb2741"
>
</ReqRef><ReqRef
 Id="fb5cdb2c-826a-4be7-babf-d16c11e9720c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d9017d87-989b-4dcc-a391-96224434351b"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74ba226f-d312-4f1a-bfec-9a7f9fef906c"
>
</ReqRef><Comment>Handles RBC Transition order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="61f518c1-008f-4e7d-ac92-f0ede5ce7df0"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.RBC_TRANSITION_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="d37ce7be-6772-4045-a266-ec125aa50d15"
>Kernel.AcceptInformation.RBCTransitionOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="05bdf5ca-1d21-43e2-bb2e-7ef9acba75c3"
>EURORADIO.RBCConnection.RBCHandover.RBCTransitionOrderReceived ( aPacket =&gt;Packet.TRACK_TO_TRAIN.RBC_TRANSITION_ORDER, aDistanceFromRef  =&gt; aDistance)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Danger for Shunting Information available"
 Guid="e8ccf594-23b3-4744-b15f-c4b35864e52f"
>
<ReqRef
 Id="7fc85086-374e-4ffb-8cf2-1b9f49820e19"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="15a6020a-063d-4e4b-9cff-bf13e794d102"
>
</ReqRef><ReqRef
 Id="48f89af6-963e-401c-b92f-a9358f6df7a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbaee891-2543-4787-a0ff-b5e598fb457b"
>
</ReqRef><ReqRef
 Id="d932cea7-ce9f-4909-afff-2c36046cea2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="af8bc229-2270-4e7f-8349-2b622375e36c"
>
</ReqRef><Comment>Handles danger for shunting information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="ee3f0441-5064-4305-9a97-cb34fdfcb6ae"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.DANGER_FOR_SHUNTING_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="cd9409cf-f236-4e01-b50f-35db0d073fff"
>Kernel.AcceptInformation.DangerForSHInformation( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f9fc9537-6eef-4645-990f-5fbf39d7d5be"
>Kernel.Modes.Shunting.DangerForShuntingReceived( Packet =&gt; Packet.TRACK_TO_TRAIN.DANGER_FOR_SHUNTING_INFORMATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Infill available"
 Guid="8e2593a0-4d11-4587-9407-2b308ebfcce2"
>
<ReqRef
 Id="787a1a8f-0541-405d-a3f2-4e318b090e90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="50466cf2-d78d-4a5a-9dbe-42f762d9cfa7"
>
</ReqRef><ReqRef
 Id="672b9145-06ca-49f0-b871-3a074024a15a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84551284-2d26-4c00-bbe7-c5766cad07fc"
>
</ReqRef><ReqRef
 Id="041247c0-323f-4ba8-8e1f-5b5a3232d83b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40c37b43-b142-4a45-bf63-f0b684dba908"
>
</ReqRef><ReqRef
 Id="f06259b6-d59f-4a89-bfb0-45036e0d87bb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b39e5af6-5351-4a3f-9bb9-1568cc2def60"
>
</ReqRef><Comment>Handles Infill packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="b66421ab-9225-4b66-9b32-ae12ae206ffc"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="124373f0-52fa-477e-883b-90d40f969d31"
>Kernel.Infill.InfillTransmissionMediaAvailable</PreCondition><PreCondition
 Guid="9fd621d8-93b5-4c1b-8cf6-18589d0f2f00"
>Kernel.AcceptInformation.InfillLocationReference( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ea30ca4a-effe-4d43-9d7d-d40dfd84ca89"
>Kernel.Infill.InfillReceived ( Packet.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Stop if in Staff Responsible received"
 Guid="c81a37f3-9453-49af-8106-2a112ae51ef0"
>
<ReqRef
 Id="06ef59af-bb51-412c-87ce-d6392fed31d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ac70e3a-7371-40ea-ac78-1d94399cfe97"
>
</ReqRef><ReqRef
 Id="31fb455b-2925-497c-b09a-b8b9573a81ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc8c6131-376a-4df9-93e9-6fa93fd35002"
>
</ReqRef><ReqRef
 Id="d932cea7-ce9f-4909-afff-2c36046cea2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe412d94-645e-4e66-8efd-d7afe571ecda"
>
</ReqRef><Comment>Handles stop if in Staff Responsible packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="f3d31b2a-4feb-4fc0-89e6-2a8af9b05bb0"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.STOP_IF_IN_STAFF_RESPONSIBLE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="ae3b8881-0559-4f9b-bf45-671195823a70"
>Kernel.AcceptInformation.StopIfInSRMode( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b3cc9653-78b6-414b-a8a6-81914195a393"
>Kernel.Modes.StaffResponsible.StopIfInSRReceived( Packet =&gt; Packet.TRACK_TO_TRAIN.STOP_IF_IN_STAFF_RESPONSIBLE )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Reversing Area or Supervision Information available"
 Guid="8c565102-6dfc-467b-bba2-7bdae0720fa5"
>
<ReqRef
 Id="571b7bcf-500a-4e43-8f4b-dfb64cfd4845"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9eb1fb56-9f26-49ac-b649-a813769429e3"
>
</ReqRef><ReqRef
 Id="54c20a27-60da-4df1-80ba-7ba841d7258f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03f063a1-d979-44f2-b73a-f4329f61d3ba"
>
</ReqRef><ReqRef
 Id="f3aec789-8e42-4041-befb-bf3d53519577"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="86396db2-9bf2-44f1-85b2-981f6ea478da"
>
</ReqRef><ReqRef
 Id="e9d57d91-d39a-4190-841c-fb33c0eeee48"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="506ea474-c557-42c9-941c-3d1555744dfc"
>
</ReqRef><ReqRef
 Id="f32ad7de-67d9-4075-bb38-75a13996ad98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f217554-67f7-4f8b-8222-39736c4f1466"
>
</ReqRef><ReqRef
 Id="796923a0-8b8a-4e7b-8af3-43f3398b27dd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ee588ecf-e52d-4e87-89b5-7ceb19383b5f"
>
</ReqRef><ReqRef
 Id="46356051-e464-4ceb-b54c-41ef8dc6017f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6f108d26-7bb6-4017-829b-07be0a892e76"
>
</ReqRef><ReqRef
 Id="c93e250c-fc42-406f-9706-6ec7488b8982"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b139424f-252b-4a32-98af-e3f786f4b561"
>
</ReqRef><ReqRef
 Id="690dfc40-042d-4c8d-9e60-17b85d455fd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11fb4149-95a7-4929-a77a-4e880788cc70"
>
</ReqRef><ReqRef
 Id="f08e576d-1c61-4c2b-b742-29f729a5728f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93584cec-5df3-41f2-a600-5f9b8a06e9b7"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ab221fe7-18d1-4221-8ccd-a994c25d640b"
>
</ReqRef><Comment>Handles Reversion Area Information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="63bcc506-85c0-4763-9549-2f5c4eec0646"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)
  OR
Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1ee33c0c-afa3-45e6-af12-67634aef90fc"
>Kernel.TrackDescription.ReversingArea.ReversingAreaOrSupervisionInformationReceived
(
    RvAreaPacket =&gt; Packets.ProvideRevAreaPacketToHandle(
        aPacket =&gt; Packet.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION,
        MessageOrientation =&gt; MessageOrientation
    ),
    RvSupPacket =&gt; Packets.ProvideRevSupPacketToHandle(
        aPacket =&gt; Packet.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION,
        MessageOrientation =&gt; MessageOrientation
    ),
  aDistanceFromRef =&gt; aDistance
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Default Gradient for TSR available"
 Guid="18227d52-0953-4a2b-bce9-bb1eb4ee7ea6"
>
<ReqRef
 Id="02d9f252-59e9-4dbb-a7cc-b66f2b96fe25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe789e53-144f-4e59-bce0-c5694d6ce0c7"
>
</ReqRef><ReqRef
 Id="e7979a56-555a-422e-9a04-9210ecca2b25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89d8594e-bd6d-487b-b2f1-030bd881ea7b"
>
</ReqRef><ReqRef
 Id="e1e65985-7379-4bca-be54-78d665b5f59b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74533123-26df-4d3a-8361-7b8b097f09b9"
>
</ReqRef><Comment>Handles Default Gradient for TSR packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="547b3821-fa99-449c-83b4-8d095143005d"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="5dc5809b-4774-4887-8dc5-2115747ced74"
>Kernel.AcceptInformation.DefaultGradientForTSR( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="dd9b765f-3dcf-48d2-bac3-19ee389e9f1a"
>Kernel.TrackDescription.Gradient.DefaultGradientForTSRReceived ( Packet.TRACK_TO_TRAIN.DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Virtual Balise Cover Order available"
 Guid="feba58f7-b47c-4901-a9e9-6ee8cfbe6e91"
>
<ReqRef
 Id="c7942b2d-7ebd-4feb-904d-0b6f4653b2a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4071e969-5a7d-440c-85f7-9c5bbdbe6636"
>
</ReqRef><ReqRef
 Id="b7cd2da7-45be-44f8-893a-a97c68151f82"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a243efc7-9e91-4202-ba05-9c82a530ed2b"
>
</ReqRef><ReqRef
 Id="e3da46a5-96c4-40d3-9e8d-24a6c6bc8f12"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed6b60c2-644f-40ed-a850-3e20c2f00bc8"
>
</ReqRef><Comment>Handles Virtual Balise Cover Order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e115cfb9-acb3-4a62-9d4f-531cce8adebf"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.VIRTUAL_BALISE_COVER_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="d0fbabae-a7ff-4cd8-afd7-acf8eb4f6c50"
>Kernel.AcceptInformation.VirtualBaliseCoverOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="50f67d89-da94-4bb0-b44b-2f9d06b85685"
>Kernel.VirtualBaliseCover.VBCReceivedFromBalise( Packet.TRACK_TO_TRAIN.VIRTUAL_BALISE_COVER_ORDER )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="LSSMA display toggle order available"
 Guid="693073bb-3954-46f2-a554-5ac6a8f876d7"
>
<ReqRef
 Id="a6eade55-4b84-45f2-a021-fd589f3d1760"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c179bd82-0773-4e55-af7e-4d2770287dee"
>
</ReqRef><ReqRef
 Id="6eeca2b4-7feb-46e5-9918-59197fd2bd89"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d7a77846-723c-4382-a8af-167818814509"
>
</ReqRef><Comment>Handles LSSMA display toggle order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="6849aabe-b0ac-4fbc-8d10-a3200c6580e6"
>Packets.ConsiderBTMPacket(
    PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition><PreCondition
 Guid="7efc1a9f-9602-44bc-9569-71ebb28a94ac"
>(
  Kernel.AcceptInformation.LSSMADisplayToggleOffOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )
    AND
  Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER.Q_LSSMA == Messages.Q_LSSMA.Toggle_off
)
  OR
(
  Kernel.AcceptInformation.LSSMADisplayToggleOnOrder( aSource =&gt; Kernel.AcceptInformation.SourceEnum.BaliseGroup )
    AND
  Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER.Q_LSSMA == Messages.Q_LSSMA.Toggle_on
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="004ed3f5-351e-4130-868e-a4960e2b944e"
>Kernel.Modes.LimitedSupervision.LSSMAToggleReceived(
    Packet =&gt; Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER,
    Timestamp =&gt; BTM.BGLocationReference.Timestamp
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="150"
 Y="430"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleTelegram"
 Guid="99858b9d-1417-47df-8644-63e0b422c4ff"
>
<Comment>Handles a new complete balise group message (when all its balise messages have been received). There are several steps:
- Test if the new BG is linked and has to be considered as a new LRBG
- If the new BG is not linked and is marked as unlinked, its information has to be considered
- After that all the packets of this BG are handled</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="a26ba75b-6d2a-41ca-ab13-bd5ff4eb3365"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="cc8333ee-b612-45d4-a877-4b2dce380272"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistance"
 Guid="dc0e7899-07fe-4c5d-b58e-71e5c9feb626"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle balise telegram"
 Guid="f6523a73-b90d-4f95-8f4c-448ca057bd7d"
>
<ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84b9cb4b-0d98-4456-ba5b-3d807059f356"
>
</ReqRef><ReqRef
 Id="282cca1e-53d5-447c-b9a4-589f5627a991"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="556c6c8a-94a0-4c4d-bdd4-c158dc2988fa"
>
</ReqRef><ReqRef
 Id="30187272-dc83-4027-afd9-a7a9754c22a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="413a5e48-677c-46a2-a3aa-80991b4b5d91"
>
</ReqRef><ReqRef
 Id="766f0274-5b6e-4050-a48d-226dccf68782"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dd5d0d2-89b4-4df4-b25c-b7e32a39e27f"
>
</ReqRef><Comment>Handles the packets received within the current balise telegram and applies the linking reaction, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle balise telegram"
 Guid="fe32348d-91f9-476a-97ec-c3c2f59fcb40"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="feca666a-c800-4808-8ad5-6479427df552"
>APPLY HandlePacket(
  Packet=&gt;X, 
  NID_BG=&gt;Message.NID_BG,
  MessageOrientation =&gt; MessageOrientation,
  aDistance =&gt; aDistance
) 
ON Message.Sequence1</Action><Action
 Guid="b3c6e5e0-e2f2-45cb-8684-a9a4a0596fbe"
>Kernel.NationalValues.CheckNVValidity( NewNID_C =&gt; Message.NID_C )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="40"
 Y="370"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StoreBaliseGroupMessage"
 Guid="1da29f70-6313-47b9-9f90-b30088d4ec9f"
>
<ReqRef
 Id="7ea29f51-073f-4293-8a53-6d777b781609"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="963564c8-210c-4f35-a865-6a5933adacd1"
>
</ReqRef><ReqRef
 Id="122fc267-0025-4f6a-8684-93c445b0a545"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c37b2a3b-9ec8-4d02-9c14-a37f33a76555"
>
</ReqRef><Comment>Stores the balise group message in the list of balise messages of the current balise group.
Do not store duplicate balise messages.
If all the messages of the current balise group have been received, calls HandleBaliseMessage() procedure to manage the information of the new BG.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="6d619eb8-4281-4eb5-8137-6433d0edf35c"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Keep record of the time and position of the location reference"
 Guid="7e3f7eb7-4732-4b05-aee5-6838c06ed5c5"
>
<ReqRef
 Id="d833d8f6-90b9-499b-bdb1-408971c2cbfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8f89dfca-3c06-48c5-9856-722c6ae3d688"
>
</ReqRef><ReqRef
 Id="0d501890-d967-43e6-b663-c526a3371860"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92afe681-91f8-4fdf-99b8-fcd57aee9371"
>
</ReqRef><Comment>The time is used for the MA section time-outs</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Store the location reference"
 Guid="93775a88-0ffa-44f4-a42b-82fc8503f81f"
>
<PreConditions>
<PreCondition
 Guid="68fd0a29-085c-46b8-8d7a-13d05c0df54b"
>BTM.IsLocationReference ( Message =&gt; Message )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="97fe5801-fbb2-4588-b755-7418c4969256"
>BTM.BGLocationReference &lt;- BTM.LocationReferenceStruct{
    Position =&gt; AntennaPositionFromOdometry(),
    Timestamp =&gt; Kernel.DateAndTime.Now()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Keep note of missed balises"
 Guid="2bac6cbb-3616-40c8-a658-72f42fddb191"
>
<Comment>If some balises in the</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Keep note of missed balises"
 Guid="17b3e4af-63f3-4b16-93c8-efdcd0950260"
>
<ReqRef
 Id="bc35119f-f1da-40d4-b6f7-b73c9ba07d98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="753bb071-f4c3-46b1-bb34-f966feff3684"
>
</ReqRef><ReqRef
 Id="5c440e26-b092-4abd-8105-dca981501e3f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec10f95f-44ce-4e3c-9c1e-bc7fd6a9c1bc"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="f9563cb3-4a7d-4ec0-b982-8a989233cfc1"
>BTM.CurrentBaliseGroup != []

  AND  

Message.N_PIG != MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG + 1
  AND  
Message.N_PIG != MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG - 1</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Add missed balises to list"
 Guid="c37a6131-48f8-4538-96f1-d0e80a225a25"
>
<Comment>If the received balise was not the next expected balise in the current group, the missed balise(s) will be added with the Missed flag.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Balise group orientation known"
 Guid="c801a564-49b2-4f3e-a03e-ffa9281add56"
>
<Comment>If the BG orientation is known (through linking) the missed balises are easy to fill in.</Comment>
<PreConditions>
<PreCondition
 Guid="f22d33c1-0c14-40e5-a78c-246730168bb4"
>BGOrientation(CurrentBaliseGroup) != OrientationEnum.Unknown</PreCondition></PreConditions>
<Actions>
<Action
 Guid="30f9dad9-8438-4379-8738-fbb67c753a09"
>MissedBalises.FillMissedBalises()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Balise group orientation unknown, nominal direction"
 Guid="90f11a70-cd77-42cd-a2c3-c316e2bd1b6b"
>
<Comment>If the BG orientation is not known, but the N_PIG of the new balise is greater than the N_PIG of the previous one, the orientation of the BG is nominal and the missing balises can be added.</Comment>
<PreConditions>
<PreCondition
 Guid="57f49648-3125-475b-b122-ad0fd95f36b3"
>Message.N_PIG &gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Add a second balise to CurrentBaliseGroup"
 Guid="9d23acde-90a3-4baf-af77-c13fd881958b"
>
<Comment>Add a second balise to the current balise group so that the orientation of the group is defined.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Add one balise in the nominal direction"
 Guid="f458f4ed-c6a0-4dc3-8db5-0298fc6bc2ee"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="940d96d7-c1a0-457c-93f1-24eef2f82615"
>INSERT
BTM.StoredBaliseStruct{
    Telegram =&gt; Messages.EUROBALISE.Message{
        Q_UPDOWN =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_UPDOWN,
        M_VERSION =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).M_VERSION,
        Q_MEDIA =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_MEDIA,
        N_PIG =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG + 1,
        N_TOTAL =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL,
        M_DUP =&gt; Messages.M_DUP.No_duplicates,
        M_MCOUNT =&gt; Messages.M_MCOUNT.The_telegram_fits_with_all_telegrams_of_the_same_balise_group,
        NID_C =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).NID_C,
        NID_BG =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).NID_BG,
        Q_LINK =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_LINK,
        Sequence1 =&gt; [],
        BitField =&gt; &apos;&apos;
    },
    Missed =&gt; True
}
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Fill other missing balises"
 Guid="3aa0e4a6-721c-4b7e-abd6-43e494b29bd2"
>
<Comment>Fill any otehr missing balises.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Fill Missed Balises"
 Guid="f2d47f76-4fae-4442-b49f-673b43f46a82"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="7dd2548f-9ba5-42c0-94dc-1aee74203bd0"
>MissedBalises.FillMissedBalises()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Balise group orientation unknown, reverse direction"
 Guid="d638d8bb-34d9-4ba6-b108-1e02673528c3"
>
<Comment>If the BG orientation is not known, but the N_PIG of the new balise is less than the N_PIG of the previous one, the orientation of the BG is reverse and the missing balises can be added.</Comment>
<PreConditions>
<PreCondition
 Guid="52b1a78c-1123-450e-b6aa-4403d2641216"
>Message.N_PIG &lt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Add a second balise to CurrentBaliseGroup"
 Guid="477aa7e5-2d35-428f-bde3-7e87b96fc4d2"
>
<Comment>Add a second balise to the current balise group so that the orientation of the group is defined.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Add one balise in the nominal direction"
 Guid="22404532-dd16-4337-a6ed-23d624a25d7d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="ceff6272-909c-4ca3-9ce6-7df72fb29734"
>INSERT
BTM.StoredBaliseStruct{
    Telegram =&gt; Messages.EUROBALISE.Message{
        Q_UPDOWN =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_UPDOWN,
        M_VERSION =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).M_VERSION,
        Q_MEDIA =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_MEDIA,
        N_PIG =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_PIG - 1,
        N_TOTAL =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL,
        M_DUP =&gt; Messages.M_DUP.No_duplicates,
        M_MCOUNT =&gt; Messages.M_MCOUNT.The_telegram_fits_with_all_telegrams_of_the_same_balise_group,
        NID_C =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).NID_C,
        NID_BG =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).NID_BG,
        Q_LINK =&gt; MissedBalises.LastReceivedBalise(CurrentBaliseGroup).Q_LINK,
        Sequence1 =&gt; [],
        BitField =&gt; &apos;&apos;
    },
    Missed =&gt; True
}
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Fill other missing balises"
 Guid="d29af369-e613-40d6-be03-cd08c7e44853"
>
<Comment>Fill any otehr missing balises.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Fill Missed Balises"
 Guid="a4628bc2-1d3a-4f1c-b9c2-903235212585"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f48e875d-60fc-4393-9404-d6e475ce83ec"
>MissedBalises.FillMissedBalises()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Store message"
 Guid="e7fd0848-9ab3-4368-b4b7-c0c0cd1f728e"
>
<Comment>Stores the received information into the corresponding variable.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Store message"
 Guid="74dfa027-a200-477e-af85-e70bf20148b1"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="989096bd-3294-40f5-81b7-908279de9c8e"
>INSERT 
BTM.StoredBaliseStruct
{
    Telegram =&gt; Message,
    Missed =&gt; False
}

IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Keep position of the balise"
 Guid="1ec3b0d7-6c60-465f-87b2-a26fb677f799"
>
<Comment>Stores the position of the first balise of that balise group in order to be used later to compute the position of the new LRBG (in case that balise group will become the LRBG).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Keep position of the balise"
 Guid="62e6627c-c2b6-4ac1-88e4-ffa9aa764485"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2b0bea2f-701c-4d39-b9fb-f12ed87bc4e4"
>MissedBalises.PrevBalisePosition &lt;- Odometry.NominalDistance</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="150"
 Y="490"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleMAPacket"
 Guid="bdc26224-250c-4d50-8ae8-d9ec84234e3c"
>
<ReqRef
 Id="88930fd0-2a41-48f8-ac88-35d8c1d60f47"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6f1cbf9-29c8-4649-9b08-544b1339877e"
>
</ReqRef><ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b8f11c54-8dc8-4a66-af11-81361ca406bc"
>
</ReqRef><Comment>The MA is always considered after all other packets of a message have been processed. This is mandatory to ensure that all preconditions for an MA (which may have been transmitted within this message as well) can be evaluated before the evaluation of the MA.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.SubStructure1"
 Name="aPacket"
 Guid="54997a24-4291-4c2b-af79-ec289b4ffc8f"
>
</Parameter><Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="cc8b1b6c-e14e-4007-9bcc-6d4feeaab3c2"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="f266d08f-d744-4949-9f34-0ad3ffdecbc8"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle new MA"
 Guid="27f968b8-6c75-4806-a96d-44abe1a92a13"
>
<Comment>Processes the received information about the movement authority.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="MA Lvl1 available"
 Guid="d268c47d-602c-4549-aab4-1541c75205f4"
>
<ReqRef
 Id="ab5117d0-92b0-4488-9084-9e07dba02cec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c47a5a53-84ac-4562-9979-531be2defee9"
>
</ReqRef><ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="79026bf6-0003-44dd-80e2-90afc8b8b987"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22f70d1a-a76e-439c-bdf5-1a10880797ea"
>
</ReqRef><ReqRef
 Id="ab682687-0117-4289-925f-65a6680a3644"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="935b840f-0f34-460d-ad5e-dfeb473503a5"
>
</ReqRef><ReqRef
 Id="20241a08-e360-4144-b573-5a0e657dd9a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a25dc54-29d3-4938-b92e-fb0f5b37a2c7"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22595e3b-4c44-4777-84e9-d057f61ad1b1"
>
</ReqRef><Comment>Processes the MA for level 1.</Comment>
<PreConditions>
<PreCondition
 Guid="5277d858-f9be-415e-b52c-0e742bb35c08"
>Packets.ConsiderBTMPacket (
    PacketOrientation =&gt; aPacket.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e8f2e263-eb09-49d0-93f3-2f4d98af2694"
>Kernel.MA.MALvl1ProfileReceived
(
    Packet =&gt; aPacket.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY,
    NID_BG =&gt; NID_BG,
    aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation()
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="40"
 Y="430"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleMessage"
 Guid="48414d07-b40a-4ad6-be9e-77b423eb55fe"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="317e2736-b0b7-47c7-9014-449ecf227483"
>
</ReqRef><ReqRef
 Id="2acfcc15-b52e-4162-a72e-a4ff1e9f43e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8daf8d84-d2f5-4294-83a6-c6e1627e65e8"
>
</ReqRef><ReqRef
 Id="da9f0886-9eda-4e06-91e4-41094a7a488f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f95c709-7493-47f2-98df-0334afbd4931"
>
</ReqRef><ReqRef
 Id="0b314991-9ddf-4e48-bbbc-ef8083339ea7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11ff5416-6eda-4aae-8df8-3e593a2a8e13"
>
</ReqRef><ReqRef
 Id="cc65b517-2625-4019-bbbf-8b6f317ae84f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6e00fab4-71f5-4820-8309-f0d77820a529"
>
</ReqRef><Comment>Movement authority has to be considered after all other packets of a message have been processed, since some preconditions to accept MA can be transmitted in the same message.

The parameter DistanceFromLRBG is needed for the case when the handled BG will become the new LRBG. All stored distances in the EVC will need to be updated by this distance.</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="9d15c2b1-71b7-411b-ab48-de43b02e0889"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Accept new LRBG"
 Guid="06a5b621-57e9-427f-a37d-7bd25694070c"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Accept new LRBG"
 Guid="dd2a3189-bf7c-4f77-87b4-c6fe12c32c97"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="9de56851-4f02-42d1-908d-a7d166ed8d48"
>LRBG.StoreBGLocation(aBaliseGroup)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle balise message contents"
 Guid="a4f87515-046e-4620-b2a7-8754b9514ddc"
>
<ReqRef
 Id="2acfcc15-b52e-4162-a72e-a4ff1e9f43e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="918698e5-d3cc-45ac-9a4d-6d9730d38e4b"
>
</ReqRef><ReqRef
 Id="da9f0886-9eda-4e06-91e4-41094a7a488f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="00c101d8-05d2-4f25-b692-ccaf171d9559"
>
</ReqRef><ReqRef
 Id="cc65b517-2625-4019-bbbf-8b6f317ae84f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f632cfba-6532-40f8-a1cf-ef3bc5f71248"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Ignore the BG due to its virtual balise cover marker"
 Guid="de484aaa-a0a9-4b55-8dca-db7cc86d398d"
>
<ReqRef
 Id="c9d51e90-7f7e-4c3e-b330-dec4e7a4499d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="35c951a7-5977-4fe5-8d85-af3cae01a386"
>
</ReqRef><ReqRef
 Id="319c077a-b554-46e1-b263-636a65b5e1e9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe8e6149-6fd0-4d1a-bd7a-a66917a54634"
>
</ReqRef><ReqRef
 Id="a28fa2ad-f49b-49e3-b6c9-a96b78f87074"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1d4fadc-2735-4454-89e2-564d0a8971d8"
>
</ReqRef><ReqRef
 Id="2ae792ac-3c8b-4e81-a0b9-fcf10ab3dbdc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c88ac66c-27cb-42ae-a0fc-cd6c10f1abb7"
>
</ReqRef><ReqRef
 Id="d9694f89-1162-4ba5-a82c-a37e0df77929"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="87314815-f903-4547-89ae-678f0077ea39"
>
</ReqRef><ReqRef
 Id="2a937786-e263-4ac1-b082-05a22e1946c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b55667b-fc72-48d8-814f-588b64ca0c7c"
>
</ReqRef><Comment>No action in this case.</Comment>
<PreConditions>
<PreCondition
 Guid="0e5497d6-bf54-49ff-b2f8-b67da4304cac"
>Kernel.VirtualBaliseCover.IgnoreBG(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2e1d9662-6036-4897-a228-37c00a44fe2b"
>Kernel.VirtualBaliseCover.CheckNID_C( GetNID_C(aBaliseGroup) )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="BG is consistent"
 Guid="385c1e4d-686d-4cc1-9bc4-e533fb51231a"
>
<PreConditions>
<PreCondition
 Guid="8a814b2e-b51c-4ac6-bab1-5cc0fa14f4f7"
>MessageConsistency.IsConsistent( aBaliseGroup )</PreCondition><PreCondition
 Guid="4018c3e8-4735-4dee-9448-f1974ecaeef9"
>Linking.ConsiderBaliseMessage( aBaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3d481a20-2d80-4cf9-a8c0-967a6519da7a"
><Comment>Non-Infill packets</Comment>
HandleConsistentMessage(
    aBaliseGroup =&gt; aBaliseGroup,
    selectInfillPackets =&gt; False,
    aDistance =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() 
)</Action><Action
 Guid="176cf6e5-9522-4e29-bad2-45603dfa58c9"
><Comment>Infill packets</Comment>
HandleConsistentMessage(
    aBaliseGroup =&gt; aBaliseGroup,
    selectInfillPackets =&gt; True,
    aDistance =&gt; Infill.DistanceToInfillReference()
)</Action></Actions>
</RuleCondition><RuleCondition
 Name="The BG is not consistent"
 Guid="8324c201-d04f-4c0b-9379-3944df24ac68"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Message consistency error"
 Guid="98a41f19-30c0-4d94-9625-28853a8db3ed"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Message consistency error"
 Guid="a0281245-2a56-4524-b725-06956c928557"
>
<PreConditions>
<PreCondition
 Guid="9a7ebaab-1cb6-4f18-be81-d5d8666bf161"
>NOT MessageConsistency.IsConsistent( aBaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cd131c5d-d887-4983-88d3-5f14215398a4"
>InconsistentBaliseGroupReceived &lt;- True</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Apply the linking reaction or the service brake"
 Guid="f540b567-9757-4617-8fb2-1ffbac46844e"
>
<Comment>If the message is inconsistent, apply the linking reaction (if the BG was linked) or the service brake.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Linked BG, apply the linking reaction"
 Guid="19981dd2-0342-463c-a447-172153432f43"
>
<Comment>Apply the linkking reaction.</Comment>
<PreConditions>
<PreCondition
 Guid="14721962-4414-4fff-9854-c596dbf177bd"
>Linking.BGIsLinked(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0fec3662-dbbc-49b3-b82f-212da0f1bec2"
>BTM.Linking.ApplyLinkingReaction(Linking.CurrentLinking().Reaction)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No linking, check for Inhibition of service brake packet"
 Guid="0773b7df-4bca-4564-9ef5-8fdcf72c4da5"
>
<ReqRef
 Id="9a012f78-f887-493d-bdeb-3fe90b475b44"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94c587d5-d271-4978-841d-91f4d8adeec7"
>
</ReqRef><ReqRef
 Id="79632341-1718-4a2e-b6d6-dbdd628d9fa2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a9686a9-dd4b-46c8-9fbb-1a324595063c"
>
</ReqRef><ReqRef
 Id="c714f3fb-5bad-4115-8fd3-588a1387795d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7c940fd-91da-4fc1-8254-7e15fc6b6fca"
>
</ReqRef><ReqRef
 Id="bc203fe9-a734-483d-acef-f8bc36a5ce00"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2edfa02a-d88d-4256-a9ae-217947b96438"
>
</ReqRef><ReqRef
 Id="a75f8e41-42b7-4bc1-a2c2-27a5f6e2b0e2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3232392f-a91c-499c-b76d-9dfb71a4b160"
>
</ReqRef><ReqRef
 Id="edd66dcd-afe0-4315-8892-06477a24808f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b9ee6c4e-b52b-4298-a3fc-a87f05bca9ac"
>
</ReqRef><Comment>Apply the service brake for an unlinked balise group, unless the BG information includes the packet &quot;Inhibition of the balise group message inconsistency reaction&quot;.</Comment>
<PreConditions>
<PreCondition
 Guid="b62df68a-af59-44c2-b28f-677c97e51814"
>NOT THERE_IS balise IN aBaliseGroup | 
(
    THERE_IS packet IN balise.Telegram.Sequence1 | 
        Available(packet.TRACK_TO_TRAIN.INHIBITION_OF_BALISE_GROUP_MESSAGE_CONSISTENCY_REACTION) 
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e116e90f-40b7-447f-9f12-239d064059f9"
>BTM.Linking.ApplyLinkingReaction(Linking.CurrentLinking().Reaction)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Delete stored information"
 Guid="1ed17502-7942-4af5-885a-a37977d47cf1"
>
<Comment>If a message was rejected due to its data consistency, and the service brake is applied, store this information for future shortening of the location based data.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No linking, BG marked as linked"
 Guid="9a930249-e076-47e8-8d7b-0ebaf3e7f815"
>
<ReqRef
 Id="ea29ed49-2305-4c0a-9a5f-18be4773caa4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0add2c8e-3b61-49b4-8663-0f9c16c6a9c4"
>
</ReqRef><Comment>First case: linking is not used on-board and the rejected BG is marked as linked.</Comment>
<PreConditions>
<PreCondition
 Guid="d295d0ec-d8e8-4fef-92ae-7e902958d77a"
>Linking.BGIsLinked(aBaliseGroup)</PreCondition><PreCondition
 Guid="cecf9dc1-c9cf-4511-85dd-5fb4e42b0f3f"
>NOT THERE_IS linking IN Linking.Linkings | linking.BaliseGroupIdentifier == GetNID_BG(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6ab93631-fbfd-45db-9678-e65420363e8c"
>Kernel.HandlingOfAcceptedAndStoredInformation.LinkedBGInconsistency_NoLinking &lt;- True</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No linking, BG marked as unlinked"
 Guid="a5fdd935-9dbb-47a6-867a-cbd671e4c80e"
>
<ReqRef
 Id="d92c56a7-724f-43e7-846d-86012a4ec60e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e68b5f1c-1948-4754-8beb-f840325d5ef3"
>
</ReqRef><Comment>Second case: the rejected BG is unlinked.</Comment>
<PreConditions>
<PreCondition
 Guid="3c0ea399-4765-47a4-bf81-775189917311"
>NOT THERE_IS linking IN Linking.Linkings | linking.BaliseGroupIdentifier == GetNID_BG( aBaliseGroup )</PreCondition><PreCondition
 Guid="fcbdcef4-2c10-4095-839b-c8d711ab5ef8"
>NOT Linking.BGIsLinked( aBaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="23f3af28-61d8-4911-a424-2cb14b1149c6"
>Kernel.HandlingOfAcceptedAndStoredInformation.UnlinkedBGInconsistency &lt;- True</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Linking used"
 Guid="8ec790c6-961c-40ea-afd7-3c26605eb33b"
>
<ReqRef
 Id="645b4e18-c87b-4cb7-85d9-44ac2e4bf60e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4e61788f-8398-4950-b223-91c62b0115aa"
>
</ReqRef><Comment>Third case: the rejected message is linked and was present in the linking data.</Comment>
<PreConditions>
<PreCondition
 Guid="9e4c8fbc-8558-43d1-b40a-9cc2b58fefa7"
>Linking.BGIsLinked(aBaliseGroup)</PreCondition><PreCondition
 Guid="74ff1606-3978-495d-8928-df9d3fd80853"
>Linking.CurrentLinking().Reaction == BTM.Linking.LinkingReaction.CommandServiceBrake</PreCondition></PreConditions>
<Actions>
<Action
 Guid="dcc88356-9b44-4c14-908e-20a1f05c099c"
>Kernel.HandlingOfAcceptedAndStoredInformation.LinkingReactionAppliedServiceBrake &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Report error to the RBC"
 Guid="cf3d4157-a6f6-4ed5-9b82-07997153d298"
>
<ReqRef
 Id="4aa64d47-8749-4bf5-b24e-7831ff609718"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c15ceb3-2d33-4c9b-85e5-149c146ea5e2"
>
</ReqRef><ReqRef
 Id="a3885eb8-93e0-4d9c-8084-7fb3d864615a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c4598a32-0452-4045-b9bf-ceb43a8e1aa9"
>
</ReqRef><ReqRef
 Id="25a9a61a-cb48-4ecc-9297-199f5897d32b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da224f20-9f09-400d-8305-192f1612a5d6"
>
</ReqRef><ReqRef
 Id="65c0616d-9c81-42f1-907b-c71e0d73d3ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d59abadd-09e6-460c-8762-4a70acf8be97"
>
</ReqRef><Comment>Report the consistency error to the RBC, if there is a connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send position report with error information"
 Guid="812b290e-0841-41bd-97e2-01729a2763f7"
>
<PreConditions>
<PreCondition
 Guid="1ab6b030-5011-4880-9827-8285d95422cf"
>EURORADIO.RBCConnection.SafeRadioConnectionAvailable()</PreCondition><PreCondition
 Guid="e9f371b8-3016-4d71-afad-73cc64ced5e8"
>NOT Linking.BGIsLinked(aBaliseGroup)
  OR  
THERE_IS linking IN Linking.Linkings | linking.BaliseGroupIdentifier == GetNID_BG(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Add error report"
 Guid="56333c3f-2592-43a6-ac62-8d7284716de7"
>
<Comment>Add the error report to the position report.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Linked BG"
 Guid="65d44a0f-99db-4d1b-923f-f4c158dfe2c1"
>
<Comment>Linked BG.</Comment>
<PreConditions>
<PreCondition
 Guid="1b712eb9-748d-46bf-8c8d-c27d38cd9233"
>Linking.BGIsLinked( aBaliseGroup )</PreCondition><PreCondition
 Guid="ef730bb5-0b67-4d71-b150-1292cafb0287"
>EURORADIO.RBCConnection.CurrentRBCConnection().SessionManagementData.SystemVersion.Value == VersionManagement.SystemVersionEnum.Version2_0</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a799a8d5-87d6-44ca-89ee-51fdaf8c1bda"
>EURORADIO.Messages.PositionReport.PositionReportEventsTracker.InconsistentMessage &lt;- EURORADIO.Messages.PositionReport.InconsistentMessageTypeEnum.LinkedBalise</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Unlinked BG"
 Guid="4daecb81-7538-4b24-adeb-8ef97d3f5496"
>
<Comment>Unlinked BG.</Comment>
<PreConditions>
<PreCondition
 Guid="65edcb1c-73ff-444e-a73a-95910c623c13"
>NOT Linking.BGIsLinked( aBaliseGroup )</PreCondition><PreCondition
 Guid="8fef0a34-9077-40dd-b45b-32573ed3e43a"
>EURORADIO.RBCConnection.CurrentRBCConnection().SessionManagementData.SystemVersion.Value in [VersionManagement.SystemVersionEnum.Version1_0, VersionManagement.SystemVersionEnum.Version1_1]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="799a57f6-ac42-4626-a3a5-fd1e9fba2324"
>EURORADIO.Messages.PositionReport.PositionReportEventsTracker.InconsistentMessage &lt;- EURORADIO.Messages.PositionReport.InconsistentMessageTypeEnum.UnlinkedBalise</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Unexpected balise group in SR"
 Guid="c2cd2dfc-7468-4668-8397-8974febbe40f"
>
<ReqRef
 Id="f7cb96a8-a052-46e7-a159-d08ccb5dac88"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9977b0fd-aeb1-46b5-90a5-273ff98f4f23"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Unexpected balise group in SR"
 Guid="c44f30b4-3bff-498e-a43a-202343160468"
>
<PreConditions>
<PreCondition
 Guid="a47c04d5-4689-414f-a8d4-166bb5b49175"
>NOT Kernel.Modes.StaffResponsible.BGIsExpected(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Check Override"
 Guid="09461e53-fbd0-411d-bf24-e120886a608a"
>
<Comment>The actions depoend on whether the Override function is active.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Override active"
 Guid="5719c186-4073-47b5-bf4f-6e0e9d3bf64b"
>
<ReqRef
 Id="772e0087-dcb8-45bf-a888-56863cd592af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b7d9cb74-e25e-4b10-85d1-c1b96eec0f87"
>
</ReqRef><ReqRef
 Id="f8000cfa-0807-4266-8df9-c687e29b4770"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f3e462e-cc2e-4c47-b1fa-8d46bb271e0b"
>
</ReqRef><Comment>If Override is active, then the only consequence on the unexpected balise is ending the Override.</Comment>
<PreConditions>
<PreCondition
 Guid="99004535-a5d7-4dad-b64c-4b6ccd0e0a0a"
>Kernel.Override.OverrideIsActive()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="50b573f5-f985-4c63-a42e-68a3738515a0"
>Kernel.Override.EndOverride()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise"
 Guid="52c4be68-2cd6-4ce2-b857-cea879dcfd47"
>
<Comment>Otherwise, the the train will Trip.</Comment>
<PreConditions>
<PreCondition
 Guid="e6c3708a-6599-485b-9b48-0b9a8b0301e7"
>NOT Kernel.Override.OverrideIsActive()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="da4003ca-f51b-4105-998f-3eb77cbdfcde"
>Kernel.Modes.StaffResponsible.UnexpectedBGPassed&lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Unexpected balise group in SH"
 Guid="c932b8c3-9773-4418-9a68-4dcd2a64b2fd"
>
<ReqRef
 Id="aef89c33-3eb6-459c-901c-72a521999db9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="134441a7-0776-422a-ba02-59638975391e"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Unexpected balise group in SH"
 Guid="e7abda65-9d6a-40d0-95a4-d37a44db0a24"
>
<PreConditions>
<PreCondition
 Guid="1a66017d-8154-4a70-9301-095525ea691d"
>NOT Kernel.Modes.Shunting.BGIsExpected(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Check Override"
 Guid="4943ad82-27d7-43c4-b277-643868333dfe"
>
<Comment>The actions depoend on whether the Override function is active.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Override active"
 Guid="6f42a3b6-0413-4061-a5fb-ab1fea4beb13"
>
<ReqRef
 Id="772e0087-dcb8-45bf-a888-56863cd592af"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d332e7a-6bd1-4a3f-afbb-4273099d0492"
>
</ReqRef><ReqRef
 Id="f8000cfa-0807-4266-8df9-c687e29b4770"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e94c9171-3088-46d7-b3c7-d192767e41b8"
>
</ReqRef><Comment>If Override is active, then the only consequence on the unexpected balise is ending the Override.</Comment>
<PreConditions>
<PreCondition
 Guid="4d72ed6a-34ed-4ae1-bee2-5d3eee748c56"
>Kernel.Override.OverrideIsActive()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a1911e56-0595-4442-9bba-9d751ab62385"
>Kernel.Override.EndOverride()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise"
 Guid="b6c3eb5c-244e-4a41-8e01-6d3509939a7d"
>
<Comment>Otherwise, the the train will Trip.</Comment>
<PreConditions>
<PreCondition
 Guid="dd9b3225-2527-4b38-b5cc-9e1c9a9aec2c"
>NOT Kernel.Override.OverrideIsActive()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="834b94d2-1cc0-44a6-9de5-016da6df76c4"
>Kernel.Modes.Shunting.UnexpectedBGPassed&lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Handle linking"
 Guid="7681408a-254e-4253-b89f-a000390d57d7"
>
<ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed350029-2893-4d2d-b4bd-2a549538e310"
>
</ReqRef><ReqRef
 Id="2a179500-0c97-46fb-975e-2dda45df541e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="feef88b0-72ec-49cc-83fc-cf26e46c70b0"
>
</ReqRef><ReqRef
 Id="d5925ae4-bfc1-4822-9b11-3d735360e691"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1393c0b1-da8b-4c27-b480-afc6cca11010"
>
</ReqRef><ReqRef
 Id="ccf10657-245b-4fe0-a67e-320b3a3acd66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f9260686-cec4-4068-b6f0-514de4590ef2"
>
</ReqRef><ReqRef
 Id="3520c91c-8938-4bdf-b683-bc1fd7071fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44e155c4-b0d1-4b8d-84b3-5fb209eb6945"
>
</ReqRef><ReqRef
 Id="9a35a3cc-6ff3-40a5-b097-b6dd250e24bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b4aa2b52-d304-4b19-a628-cc161a869c9a"
>
</ReqRef><ReqRef
 Id="689ab6d6-cac9-4667-86bf-c6be70fefd43"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9c5c7f99-a2fc-42d5-991b-b5b26b399315"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No linking consistency errors"
 Guid="92ae5112-1d17-470b-8deb-cde67e73ab4e"
>
<ReqRef
 Id="b431b905-df98-4c23-9ff8-3da3b92a7a29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b882ea54-5e4d-475c-98ae-abedd1ae1580"
>
</ReqRef><ReqRef
 Id="259e3c43-f68a-4c80-8402-32349f27172d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a0da7471-6b82-40bd-b224-abcf72a898ce"
>
</ReqRef><Comment>Linking consistency is OK
If the BG was passed in the right direction, handle the message. If not, the train will be tripped (as a mode transition, no need to specify that here)</Comment>
<PreConditions>
<PreCondition
 Guid="64a649af-e04e-4e87-9f05-10155fb800fd"
>BTM.Linking.ConsistencyError(aBaliseGroup) == BTM.Linking.LinkingErrorEnum.NoError</PreCondition><PreCondition
 Guid="8a07516f-5e49-4e7f-9fb9-ca69da857f66"
>BTM.Linking.BGOrientationIsValid(aBaliseGroup)</PreCondition><PreCondition
 Guid="ece8fce6-b40d-40dc-bf42-8979cd157cb4"
>BTM.Linking.ConsiderBGWithLinking(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="73f60427-194a-4f61-9082-16f71fa2409d"
>BTM.Linking.StopExpectingBG( GetNID_BG(aBaliseGroup) )</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Check balise cross-talk RAMS"
 Guid="84bb496a-8f09-4b15-80be-d4e46aa8e27b"
>
<ReqRef
 Id="6ae42f8d-795c-47e9-8a41-3f4433b18021"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a52c330-f335-47a7-9669-8c47a73c9b9d"
>
</ReqRef><Comment>If the RAMS cross-talk supervision function is active, check the linking. If the balise was linked and is expected in the linking information, delete the supervision information as it is no longer needed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Remove RAMS if known, linked BG"
 Guid="b2d4afb6-ba51-4ccb-9557-e58bd290d804"
>
<ReqRef
 Id="848fea93-159f-4a91-8e12-25254251ce91"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9d9a39dd-ce42-4973-b858-899bf41e5a07"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="5c4ec92f-7397-4b1a-8e94-ab0d3f2c56b3"
>BTM.Linking.CurrentLinking().BaliseGroupIdentifier != Messages.NID_BG.NID_UNKNOWN</PreCondition></PreConditions>
<Actions>
<Action
 Guid="369dfef1-1fae-4ce2-b6c1-777ef0432e42"
>BTM.Linking.RAMSRepositioningBG &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Check balise reception RAMS"
 Guid="d830518c-e527-4ce2-8aba-7ea17d82d7b7"
>
<Comment>If the RAMS supervision function is active, check it against the current BG.
If the IDs match, stop the RAMS supervision.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Remove RAMS supervision of passed BG"
 Guid="cb55754b-6fb9-4556-a4e0-28de420565c0"
>
<PreConditions>
<PreCondition
 Guid="620c93eb-fc20-46b3-aa97-2c6d1ad2a3ab"
>Available(BTM.Linking.RAMSSupervisedBG)
  AND  
BTM.Linking.RAMSSupervisedBG.Id == GetNID_BG(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="efaa08c9-62f2-45d9-b68f-3a1da3e29641"
>BTM.Linking.RAMSSupervisedBG &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Name="Handle linking error"
 Guid="107baf8b-a752-4b4b-bf2f-a259a5c03735"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="Linking error"
 Guid="fa1264fd-d06b-43fd-b8be-fc0ee36a9ffa"
>
<ReqRef
 Id="0547edfa-b17d-4b79-8cad-2fba135b2d95"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8b4e8821-5eb6-4dc3-a484-ddc9202cce04"
>
</ReqRef><ReqRef
 Id="2a179500-0c97-46fb-975e-2dda45df541e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="47c7e807-af54-46f7-8aaf-17d45636a345"
>
</ReqRef><ReqRef
 Id="d5925ae4-bfc1-4822-9b11-3d735360e691"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e6095490-ff58-468b-ba4d-80b38e025699"
>
</ReqRef><ReqRef
 Id="ccf10657-245b-4fe0-a67e-320b3a3acd66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="41f5ecb1-f04c-496b-b9f7-c3648f58690d"
>
</ReqRef><ReqRef
 Id="3520c91c-8938-4bdf-b683-bc1fd7071fd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac45d28e-39d4-43e8-9a65-5b7edb800978"
>
</ReqRef><ReqRef
 Id="572df3cf-8b3b-4e6d-b78e-c0ff6690a2cb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="065736ea-5cd3-4376-9dde-418fe8fd4d3a"
>
</ReqRef><ReqRef
 Id="b431b905-df98-4c23-9ff8-3da3b92a7a29"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="32ae3bbb-be0b-4e26-9591-55cd7a87824c"
>
</ReqRef><ReqRef
 Id="2c84de1b-61c3-4555-b485-6b4eae58ae90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="258edb9a-f159-486b-b35e-351bd694afe8"
>
</ReqRef><ReqRef
 Id="85c84a18-90d4-4035-90e4-abdba8729120"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="42b3ca4b-373d-4040-9108-68a02e93e590"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="There is an error in the linking consistency of the current BG"
 Guid="eb7ab073-eb3e-4a3f-99bb-2227d1147a1b"
>
<Comment>If the received, linked BG is the next one expected, its message can still be accepted</Comment>
<PreConditions>
<PreCondition
 Guid="55a61f56-5d3b-4c7d-8122-989e234d8234"
>BTM.Linking.ConsistencyError(aBaliseGroup) != BTM.Linking.LinkingErrorEnum.NoError</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4dd4bc3d-0771-48b0-8b36-200f331fbb16"
>BTM.Linking.HandleConsistencyError(
    aConsistencyError =&gt; BTM.Linking.ConsistencyError(aBaliseGroup)
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Check RAMS repositioning function"
 Guid="b9dec577-e68c-4cb0-83bc-4e13d56f5bec"
>
<ReqRef
 Id="6ae42f8d-795c-47e9-8a41-3f4433b18021"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f9eabc81-580c-4d83-b081-34fbb10dd3d3"
>
</ReqRef><ReqRef
 Id="aaa581cb-18a1-43c9-861e-43c4d76ec1fe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f0a3dba2-4e71-4107-a0e9-129298deb930"
>
</ReqRef><Comment>If the received BG is linked but is not present in the linking information while the RAMS cross-talk supervision function is active, active the service brake.</Comment>
<PreConditions>
<PreCondition
 Guid="5777b7bc-699f-45f1-89ed-9f7a10ab06d7"
>Available(BTM.Linking.RAMSRepositioningBG)</PreCondition><PreCondition
 Guid="e1a20219-11e1-4519-8332-9991357825e0"
>THERE_IS message IN aBaliseGroup | 
(
  THERE_IS packet IN message.Telegram.Sequence1 |
    Available(packet.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION)
)</PreCondition><PreCondition
 Guid="97e201cd-7e8c-4cd0-9796-d3b94acf3a02"
>Linking.BGIsLinked(aBaliseGroup)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f7aea1c2-1e1f-4d47-8f36-412e4107ba4b"
>Kernel.HandlingOfAcceptedAndStoredInformation.RAMSSupervisionFunctionLedToServiceBrake &lt;- True</Action><Action
 Guid="294b1490-c94d-4bac-b054-feaef3d222b4"
>Kernel.BrakeCommands.CommandServiceBrake(Kernel.BrakeCommands.BrakeReasonEnum.RAMSSupervision)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="150"
 Y="550"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleModeProfilePacket"
 Guid="1944fec5-3bdf-4188-bae3-2f4676823c84"
>
<ReqRef
 Id="88930fd0-2a41-48f8-ac88-35d8c1d60f47"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="327fe63c-a58e-45b6-a4f7-aa9e9d058dca"
>
</ReqRef><ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="47e771f6-5cb8-418d-8a8f-d306bc4e0969"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10ed8719-2633-4bac-9d30-818eca542056"
>
</ReqRef><ReqRef
 Id="e9f9dfc1-5e6c-4920-958e-20889458cdd1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4fc3a6d4-dde6-4b59-8768-f24fd3bab2a2"
>
</ReqRef><Comment>The mode profile can only be considered after the MA has been procedded, in order to know if it was accepted (otherwise the mode profile is not accepted).</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.SubStructure1"
 Name="aPacket"
 Guid="5c7546c7-4909-41d5-8d37-9e05094dbc02"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="f5a802a6-50c3-47e8-b28a-192dd20faa27"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistance"
 Guid="7bbc3d95-a499-4d0b-9ca2-411f2f1809f0"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle new Mode Profile"
 Guid="8067cb79-ba71-43b8-b67b-e757bdff0e4d"
>
<ReqRef
 Id="2922527c-9e20-48f5-a094-94014ef0aa69"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0cec26e1-e2c2-492c-a5f0-6d75fe7ab6c5"
>
</ReqRef><ReqRef
 Id="6f370d19-a99b-404b-9718-80331a17d9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c8dedcf6-2bea-4a5e-a397-4f5999089794"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle new Mode Profile"
 Guid="423c865a-29c8-402c-807e-61b70a9a5867"
>
<ReqRef
 Id="e6b9b34b-5183-45ec-96a2-8eef4909b34c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="19dec718-ae7c-4f9b-bf59-fe5f4a2ce5f5"
>
</ReqRef><ReqRef
 Id="85399986-8b1a-4ee5-ba62-20eb7ca0a3b9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5a8e89a-68af-46b9-8e80-d01bc69509be"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b5a95273-5ea6-47fe-88d7-09f109a361f6"
>
</ReqRef><ReqRef
 Id="2ef2992f-43ce-4f58-abf6-55560cf910bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be414b46-e05a-49d0-81d0-276ad0fd8fff"
>
</ReqRef><ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="60c748c4-6ffd-48db-8256-509ca1d5e9df"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9874877b-cfc0-4e98-b18c-b9bfda371e57"
>
</ReqRef><Comment>Handles Mode Profile packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7c611cdb-ccf2-4f3c-a343-9d77f47c5412"
>Packets.ConsiderBTMPacket (
    PacketOrientation =&gt; aPacket.TRACK_TO_TRAIN.MODE_PROFILE.Q_DIR,
    MessageOrientation =&gt; MessageOrientation )</PreCondition><PreCondition
 Guid="8d956f8e-378b-482f-bc27-26c54c49af35"
>Kernel.MA.MAIsAccepted</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2db6933b-ffcd-41fc-b5ab-90177389d406"
>Kernel.MA.ModeProfile.ModeProfileReceived (
    Packet =&gt; aPacket.TRACK_TO_TRAIN.MODE_PROFILE,
    GenericLSMarker =&gt; Kernel.Modes.LimitedSupervision.LSMarkerPresent(
    Messages =&gt; BTM.CurrentBaliseGroup
    ),
    aDistanceFromRef =&gt; aDistance
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="40"
 Y="550"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleLTOPacket"
 Guid="cd48daec-c5f9-42d7-948a-b15ddcd6011c"
>
<ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4dc9d4ef-47ac-4ed6-a943-e7e218800ed6"
>
</ReqRef><ReqRef
 Id="b5196e2e-7094-49d5-ac1b-4bcf4821fd9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dfc093a-539a-4301-abf2-1569bce44645"
>
</ReqRef><Comment>This procedure is called for each packet received with a balise telegram.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.SubStructure1"
 Name="aPacket"
 Guid="bb22bd3c-f060-4424-b9a6-a0ba1d40d8d6"
>
</Parameter><Parameter
 Type="Default.OrientationEnum"
 Name="MessageOrientation"
 Guid="37a31b76-3eb4-4bd8-8bde-11a046350429"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistance"
 Guid="a3fa14e7-eab9-4886-906d-a34d4e9c3db7"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle new packet"
 Guid="072223b9-e474-4cc6-a225-4a2a53ebb625"
>
<ReqRef
 Id="88930fd0-2a41-48f8-ac88-35d8c1d60f47"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="33bc3f4d-253a-42a6-a167-bf8ab9270acc"
>
</ReqRef><Comment>We suppose that an element of type Messages.EUROBALISE.SubStructure1 can only contain one field defined, representing a single packet. The rule looks for the first available element and when it is found, calls the corresponding routing to store the received information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level Transition Order available"
 Guid="b63d49ba-6c55-448a-bf8c-f29ffee83011"
>
<ReqRef
 Id="6b26f38c-d98d-4eee-a314-ae6b48256d36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c5379316-9711-4e97-a5e5-4c67722863fe"
>
</ReqRef><ReqRef
 Id="3c872475-fbad-4a03-b13a-a6fa51c6a722"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d6265ba-635d-4bf9-bd06-18570008755f"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="77483f09-10ab-4f8a-a073-c4343999959b"
>
</ReqRef><Comment>Handles Level Transition packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="3f3e1ed5-0eeb-4684-80ad-ad9fc77b5a4a"
>Packets.ConsiderBTMPacket (
    PacketOrientation=&gt;aPacket.TRACK_TO_TRAIN.LEVEL_TRANSITION_ORDER.Q_DIR,
    MessageOrientation =&gt; MessageOrientation
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b24735ff-a130-4d30-8fe1-8cb69420ff6b"
>Kernel.LevelTransition.LTOReceived ( Packet=&gt;aPacket.TRACK_TO_TRAIN.LEVEL_TRANSITION_ORDER, aDistanceFromRef =&gt; aDistance)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="150"
 Y="370"
 Width="100"
 Height="50"
 Name="HandleConsistentMessage"
 Guid="f800b718-c1c5-4270-b280-bc814a553449"
>
<Parameters>
<Parameter
 Type="Boolean"
 Name="selectInfillPackets"
 Guid="193014b8-4ed7-484f-9049-729b8c6be5e3"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistance"
 Guid="d536133d-7f09-4400-a22b-a718712c7ace"
>
</Parameter><Parameter
 Type="BaliseGroupMessagesCol"
 Name="aBaliseGroup"
 Guid="9fb354e6-3bf1-42ca-8be7-5f10705eb6b1"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle Level Transition Order in balise telegrams"
 Guid="099aa022-31f0-4aae-aa5c-48dc76bdc4cb"
>
<Comment>First, handle the &quot;non-MA&quot; packets in all the telegrams.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle level transition order packet in balise telegrams"
 Guid="ef4783a5-3854-483a-8f53-38b1d9e72164"
>
<ReqRef
 Id="c858a6b4-4d06-4efa-83f0-ac640ef8c373"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e4ea8db-5735-48ad-b453-daa31396cfc8"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2ee57ad5-960b-4923-b510-882802803ed1"
>APPLY HandleLTOPacket(
    aPacket =&gt; Packets.LevelOfTelegram(
        Infill.CurrentInfillTelegram(
            selectInfill =&gt; selectInfillPackets, 
            aTelegram =&gt; X.Telegram)
         ),
    MessageOrientation =&gt; BGOrientation( aBaliseGroup ),
    aDistance =&gt; aDistance
) ON aBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Clear mode profile"
 Guid="843333de-ec8d-428b-8030-16cf2ddff736"
>
<ReqRef
 Id="74a25803-8c28-4708-b506-55a76bd8bc21"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5e05338d-e93e-4b29-8cdd-fb151214b19c"
>
</ReqRef><ReqRef
 Id="2a495f6e-680c-4def-a6b5-d8bcd1f41a9d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97826179-bdde-4b4e-8abd-830754d61041"
>
</ReqRef><ReqRef
 Id="413303d1-7e96-41b7-a03e-3a9d6380e93a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8ea6272d-693d-4454-8053-be46bf1f2925"
>
</ReqRef><Comment>On reception of a new MA, the previously stored mode profile has to be deleted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Clear mode profile if MA received"
 Guid="e44a7aeb-06b0-41ca-b5de-6a1c63e40993"
>
<PreConditions>
<PreCondition
 Guid="d1b129b9-3710-484a-a016-43785cf9051e"
><Comment>Check for the presence of an MA packet within infill or non-infill packets depending on the selectInfillPackets parameter.</Comment>
THERE_IS X IN aBaliseGroup | (THERE_IS V IN Infill.CurrentInfillTelegram(selectInfillPackets, X.Telegram).Sequence1 | ( Available ( V.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY ) OR Available ( V.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY ) ))</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Name="MA packet available"
 Guid="e0157cf8-5a4a-4793-9350-acf28037c283"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Infill MA"
 Guid="15714707-69ca-42cc-896d-c5d145bdea7a"
>
<PreConditions>
<PreCondition
 Guid="197e5eb7-ca0d-49fc-80ef-f9a9c61c8aa9"
>selectInfillPackets</PreCondition></PreConditions>
<Actions>
<Action
 Guid="840d737c-0711-45fa-aa7c-6d7614ac52b5"
><Comment>In this case, &apos;aDistance&apos; will be the distance to the infill reference location.</Comment>
Kernel.MA.ModeProfile.DeleteModeProfileBeyondLocation 
(
  aDistance
)</Action></Actions>
</RuleCondition><RuleCondition
 Name="Non Infill MA"
 Guid="7a2dc097-6738-4924-93b5-ea2506a1f22e"
>
<PreConditions>
<PreCondition
 Guid="d8706bcf-8b81-4e20-975f-d383d003ebcc"
>NOT selectInfillPackets</PreCondition></PreConditions>
<Actions>
<Action
 Guid="53fff272-02d3-4959-ab47-d2fcffd42bb3"
>Kernel.MA.ModeProfile.Profile &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle general packets in balise telegrams"
 Guid="afdc7b3a-9acf-4598-a628-bdf218a7beb3"
>
<Comment>First, handle the &quot;non-MA&quot; packets in all the telegrams.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle general packets in balise telegrams"
 Guid="e7516273-ac16-4172-b145-c531401e38e3"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="71fe05ea-2e2a-441e-a4c5-fa8e04162cb8"
>APPLY HandleTelegram( Message =&gt; Infill.CurrentInfillTelegram(selectInfillPackets, X.Telegram), 
MessageOrientation =&gt; BGOrientation(aBaliseGroup),
aDistance =&gt; aDistance ) ON aBaliseGroup | ToBeHandled ( aMessage =&gt; X , aBaliseGroup =&gt; aBaliseGroup )</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Inform driver if message contains the default balise information"
 Guid="be70b65b-0e74-4a34-962a-f92f146bf80d"
>
<ReqRef
 Id="2a940406-f81d-432f-bdd6-c0e58ba44bd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d4f2255-bb8d-4158-9c75-a2c7ecaf5042"
>
</ReqRef><Comment>If any packet contains default balise information, inform the driver.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Message contains default balise information"
 Guid="943f01e2-9679-4524-9ee7-838f59c39f99"
>
<ReqRef
 Id="5c7f8e6f-d144-42ee-91a5-5bc97116d06d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7e8724cc-a785-4971-9cf7-fcfcfeadb124"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="5d040986-926c-4036-9c26-980d15c5393d"
>THERE_IS telegram IN aBaliseGroup | (THERE_IS packet IN telegram.Telegram.Sequence1 | Available(packet.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION) )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8622ac62-4d7c-438c-bd38-586c990410ff"
>INSERT
  Kernel.TextMessages.PlainTextMessageStruct
  {
    Text =&gt; &apos;Default balise information received.&apos;
  }
IN
  Kernel.TextMessages.PlainTextMessages</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle MA packet in balise telegrams"
 Guid="8bf64490-ce74-42a8-aa77-fcbf0d2bf6c9"
>
<Comment>Then, handle the movement authority packet.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle MA packet in balise messages"
 Guid="ae268b7a-92cb-4598-bc02-a2f04005d973"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2b02118c-1658-46b1-bae6-dc0ff97ec611"
>APPLY HandleMAPacket
(
    aPacket =&gt; Packets.MAOfTelegram ( X.Telegram ) ,
    NID_BG =&gt; X.Telegram.NID_BG,
    MessageOrientation =&gt; BGOrientation( aBaliseGroup )
)
ON aBaliseGroup | ToBeHandled ( aMessage =&gt; X, aBaliseGroup =&gt; aBaliseGroup  )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 X="0"
 Y="0"
 Implemented="TRUE"
 Name="Handle Mode Profile packet in balise telegram"
 Guid="0df23762-fca4-4e00-9a26-27caab55459e"
>
<ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b907baf-4341-4167-b523-4aae1850c852"
>
</ReqRef><ReqRef
 Id="6f370d19-a99b-404b-9718-80331a17d9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="211eb7c7-66d8-48d5-9e32-d1658184c3de"
>
</ReqRef><Comment>After the MA has been handled, the Mode Profile can eventually be accepted (only if the MA was accepted).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle Mode Profile packet in balise telegram"
 Guid="5f12ad32-9f33-4855-a8a7-0406c9644f44"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="42ecabaf-6fb9-4cf2-887a-2b6158ff1c6b"
>APPLY HandleModeProfilePacket
(
    aPacket =&gt; Packets.ModeProfileOfTelegram  
    ( 
          Infill.CurrentInfillTelegram(
             selectInfill =&gt; False,
             aTelegram =&gt;  X.Telegram )
    ),
    MessageOrientation =&gt; BGOrientation( aBaliseGroup ),
    aDistance =&gt; aDistance
)
ON aBaliseGroup | ToBeHandled ( aMessage =&gt; X, aBaliseGroup =&gt; aBaliseGroup )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="BaseTypes.Length"
 DefaultValue="0.0"
 VariableMode="Constant"
 X="390"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BGLocationDetectionError"
 Guid="e97a89af-3348-47eb-8fa4-8e19e66b5278"
>
<ReqRef
 Id="8a1fe4ea-dcfd-4748-bc1e-b8b0be8aa8e0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a1dc460-abb3-4c24-8dd5-8632271e5b79"
>
</ReqRef><ReqRef
 Id="29095085-0fb7-4b73-9d32-ae4ead9cd37e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="57948d85-1356-4bc4-b9c8-e84ed230ec71"
>
</ReqRef><Comment>This variable represents the error in detection of balise group location by the train.</Comment>
</Variable><Variable
 Type="BaliseGroupMessagesCol"
 DefaultValue="[]"
 VariableMode="Internal"
 X="620"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentBaliseGroup"
 Guid="eb904a47-339a-4e18-b6b4-c87384133417"
>
<Comment>This variable holds the messages from the current balise group until the complete balise group has been encountered</Comment>
</Variable><Variable
 Type="BTM.LocationReferenceStruct"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 X="510"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="BGLocationReference"
 Guid="c9196377-2261-4314-9003-09ebf1a43606"
>
<ReqRef
 Id="612e5c65-65af-4727-a4f9-ce73fbd5f0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e6d606f3-70ac-4470-951d-f4420bd3bc38"
>
</ReqRef><ReqRef
 Id="77e74b63-e8c9-42d5-bcf6-0e5423c75697"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="000ae04c-6645-4522-ac18-7bc3b854db77"
>
</ReqRef><ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3fb7efa-a924-4440-b381-37abe32d0b78"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="af03fb9a-b107-46cb-96a0-b6f77d0c0dd6"
>
</ReqRef><Comment>This is the position of the first balise (N_PIG == 0) in the balise group</Comment>
</Variable><Variable
 Type="BaseTypes.Distance"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="280"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ActiveAntennaPosition"
 Guid="dff8c2aa-be92-4d2d-8c31-3afdce4eea69"
>
<ReqRef
 Id="858a955b-8eb5-4eac-b52e-49723ffd3d9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9644885b-91cf-4cf0-af4c-9addbcba8776"
>
</ReqRef><Comment>Distance between the front end of the train and the active Eurobalise antenna. We assume that ActiveAntennaPosition &gt; 0.</Comment>
</Variable><Variable
 Type="Messages.BTM.Message"
 DefaultValue="Messages.BTM.Message
{
  SystemVersion2 =&gt; EMPTY, 
  SystemVersion1 =&gt; EMPTY, 
  BitField =&gt; &apos;&apos;
}"
 VariableMode="InOut"
 X="270"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Message"
 Guid="1718ba3c-1f2d-488c-bcc0-2bc18b4a3118"
>
<ReqRef
 Id="8147a385-c93e-43f4-9eb0-fab4bf63ca62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6afe7006-60ac-439e-bf42-1ee96a969e00"
>
</ReqRef><ReqRef
 Id="59fea6c8-0c78-47db-a58a-5de75ba1552b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f770e0b3-3697-4c32-8338-161d11649a23"
>
</ReqRef><Comment>This variable holds the balise message to be processed.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="390"
 Y="390"
 Width="100"
 Height="50"
 Name="UnreadableBaliseReceived"
 Guid="0eead242-4994-413b-a5ca-69af5e6a5c87"
>
<Comment>Indicates that an unreadable BG was passed.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 X="280"
 Y="390"
 Width="100"
 Height="50"
 Name="InconsistentBaliseGroupReceived"
 Guid="b98c9f14-49ce-48c7-a0ff-b5004fe8aebb"
>
<Comment>Indicates that an inconsistent BG was received in this cycle.

TODO: functionnalize this</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="CleanUp"
 X="40"
 Y="270"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="Clean up received balise"
 Guid="027c7622-f051-4f14-b4db-c9cc9b6487ff"
>
<ReqRef
 Id="299e44cd-9a5e-4f38-8721-bad782668787"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="396410a3-bfa4-4b05-898b-ee479d120e88"
>
</ReqRef><Comment>After processing the new telegram its content is deleted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Clear just received balise telegram"
 Guid="e91bd168-b15b-4d39-9118-f43381b943f2"
>
<PreConditions>
<PreCondition
 Guid="4132dda5-2120-4cda-bde2-a390d3213f78"
>Available ( Message.SystemVersion1 )
  OR  
Available(Message.SystemVersion2)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="55b1daa4-5af4-4eac-af28-8e10152fc2c2"
>Message.SystemVersion2 &lt;- EMPTY</Action><Action
 Guid="7da08b97-ae8e-47fd-9114-27a1f90cc66e"
>Kernel.Infill.Data &lt;- EMPTY</Action><Action
 Guid="aa76230d-c79f-456c-95ac-adda5c0403e8"
>Message.SystemVersion1 &lt;- EMPTY</Action></Actions>
<SubRules>
<Rule
 Priority="CleanUp"
 X="0"
 Y="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clear current balises from current balise group"
 Guid="1bbbe851-ae1a-4e5c-9e11-431e590cf623"
>
<Comment>When the current balises from the current balise group have been processed, clear its data</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clear current balises from current balise group"
 Guid="9942d5a4-ca09-49f3-8cdd-781b0dc75e3e"
>
<PreConditions>
<PreCondition
 Guid="1815d0f4-a07e-4fde-b122-562327b7db22"
><Comment>This precondition is necessary since in some cases, e.g. during unauthorised reverse movement, balise messages may be refused.</Comment>
CurrentBaliseGroup != []
  AND  
( COUNT X IN BTM.CurrentBaliseGroup ) == MissedBalises.LastReceivedBalise(CurrentBaliseGroup).N_TOTAL + 1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="74d5488e-85d4-48e9-8de8-43a12dd4b955"
>BTM.CurrentBaliseGroup &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Verification"
 X="40"
 Y="210"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="Incomplete balise group received"
 Guid="898a6047-388a-4c9c-85e6-9dade9e6c758"
>
<ReqRef
 Id="bc35119f-f1da-40d4-b6f7-b73c9ba07d98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c3c391b3-dbad-4555-ae62-bae39fd7cfa2"
>
</ReqRef><ReqRef
 Id="bb8f4e12-123f-4746-81d4-bd86e68fad6b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2fa68c28-14b8-43b1-91c9-6e1043f1429b"
>
</ReqRef><Comment>If the on-board receives a balise telegram of a balise group different from the currently handled balise group, the current balise group is considered as incomplete.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Incomplete balise group received"
 Guid="dcd23c6f-268e-49a2-85cf-2797f253976c"
>
<PreConditions>
<PreCondition
 Guid="95d3af00-daf2-474d-a7c2-53f8614e06c6"
>Available ( BTM.UpdatedReceivedMessage(BTM.Message))</PreCondition><PreCondition
 Guid="ca2a5585-b8af-4d33-b11d-0f7a241172b0"
>(COUNT X IN BTM.CurrentBaliseGroup ) &gt; 0</PreCondition><PreCondition
 Guid="facbef4e-0427-43dc-8246-9424d20c4b03"
>BTM.UpdatedReceivedMessage(BTM.Message).NID_BG != (FIRST X IN BTM.CurrentBaliseGroup).Telegram.NID_BG</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c0bed554-3138-4c67-a342-dec6ad0a32dc"
>BTM.CurrentBaliseGroup &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="150"
 Y="270"
 Width="100"
 Height="50"
 Name="Clean up incorrect balises"
 Guid="619c913f-8fc6-4d93-9ad1-657ce8f052e7"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Set UnreadableBaliseReceived to False"
 Guid="36010244-9142-4e3e-b9f2-e42b542c5625"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="cebd66f8-8202-4350-a311-9b811c557fb8"
>UnreadableBaliseReceived &lt;- Boolean.False</Action><Action
 Guid="782d8ee4-0cee-4d4d-aef6-81e3ef46a8a2"
>InconsistentBaliseGroupReceived &lt;- Boolean.False</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
