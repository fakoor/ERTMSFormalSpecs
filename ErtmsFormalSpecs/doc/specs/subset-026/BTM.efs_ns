<NameSpace
 X="120"
 Y="130"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Name="BTM"
 Guid="abe3c9de-4d7b-4a03-a327-8f85ce216c28"
>
<NameSpaces>
<NameSpaceRef
 Name="Linking"
 Guid="8fb5b694-9c14-4b50-8614-ab327fba1e03"
>
</NameSpaceRef></NameSpaces>
<Structures>
<Structure
 Default=""
 X="690"
 Y="480"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BaliseGroupStruct"
 Guid="5ec3b420-18e5-4e1a-9d06-81474b8546eb"
>
<ReqRef
 Id="3dbd1b48-23b6-40f9-a38e-77df9cc1ed68"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ce0cea6-f421-462c-9e62-f3b5e470f2ca"
>
</ReqRef><Comment>Represents the information about the Last Relevant Balise Group.</Comment>
<StructureElement
 TypeName="BTM.Position"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position"
 Guid="53b317e4-f85b-45cd-b79c-843b43dc7e89"
>
<Comment>Position of the LRBG.</Comment>
</StructureElement><StructureElement
 TypeName="Messages.NID_LRBG"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NID"
 Guid="ccd4df78-86cc-4740-a762-d1a06fe9a782"
>
<Comment>The identity number of the LRBG.</Comment>
</StructureElement><StructureElement
 TypeName="OrientationEnum"
 Default="OrientationEnum.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Name="Orientation"
 Guid="24a24010-b828-44c6-b635-7e3bebf0f7b3"
>
<ReqRef
 Id="fa52def8-80bf-416e-a115-e86bb26fb0ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8d3f9121-fdbd-4799-a7ea-8411bbd98679"
>
</ReqRef><ReqRef
 Id="5a70895f-ceeb-4c8f-9e52-f3de05ca5a83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8aeba253-ea31-4c8f-acc6-2c2174b814bd"
>
</ReqRef><ReqRef
 Id="d1944e18-a016-48f1-9817-9a6c415e92e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5f7e229-1874-48ab-96ec-ccf2cb4e9d75"
>
</ReqRef><Comment>Indicates of the orientation of the LRBG can be determined.</Comment>
</StructureElement><StructureElement
 TypeName="DateAndTimeStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Timestamp"
 Guid="2f0be26b-32d3-46b2-a2d7-00768d0f2af2"
>
<Comment>The moment when the balise group was received by the train. Used to retrieve the most recent balise group.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="560"
 Y="370"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position"
 Guid="8ca407f2-8e0f-4627-b56c-5584e999d989"
>
<Comment>Saves the information provided by the odometry at the moment where a balise group is passed. Used to compute the position, over and under reading amount relative to that balise group.</Comment>
<StructureElement
 TypeName="BaseTypes.Distance"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position"
 Guid="64e0dbf9-512d-4f1f-aa55-215d81ca22df"
>
<Comment>Estimated position of the train.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UnderReadingAmountOdo"
 Guid="4a1d4052-682d-4b7f-89d2-163862a190b8"
>
<Comment>The under-reading amount.</Comment>
</StructureElement><StructureElement
 TypeName="BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OverReadingAmountOdo"
 Guid="a4915afe-ad95-4ea9-aac7-b511eb5fe837"
>
<Comment>The over-reading amount.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="690"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PreviousBaliseGroupStruct"
 Guid="b78c15a0-5a41-4d5f-9222-3d4b477cb17b"
>
<Comment>Used to store a received balise group. Allows to know if that balise group became the LRBG.</Comment>
<StructureElement
 TypeName="BaliseGroupStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="BaliseGroup"
 Guid="368fccbb-30e4-44e2-b001-fc2c5a8fd196"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="IsLRBG"
 Guid="076ebd0a-bdf0-4724-a6d2-89898982f162"
>
<Comment>Indicates if the current balise group is (or was) an LRBG.</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="IsSingle"
 Guid="d64b4af4-32c8-461a-ab5f-b71ed7f4261c"
>
<ReqRef
 Id="76868626-5a6b-4610-a688-a56653fef701"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c2b9437-285e-4bbf-8939-fb35385e147c"
>
</ReqRef><Comment>Indicates if the that balise group is single or not.</Comment>
</StructureElement></Structure><Structure
 Default=""
 X="440"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LocationReferenceStruct"
 Guid="cdcfde8e-5a0f-4fae-a527-567ccb883fac"
>
<Comment>Keeps the location and time of passage over the location reference of a Balise group.</Comment>
<StructureElement
 TypeName="BTM.Position"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Position"
 Guid="b15b81c8-faa3-40b9-adf3-745bf7b8b4ff"
>
</StructureElement><StructureElement
 TypeName="DateAndTimeStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Timestamp"
 Guid="4ed3664e-befe-4a45-9b5d-42c4852d4240"
>
</StructureElement></Structure><Structure
 Default=""
 X="820"
 Y="560"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StoredBaliseStruct"
 Guid="3824a971-a03f-4913-9be2-55ee942cddf9"
>
<Comment>Structure containing a single telegram received from a balise and a flag to see if the balise was missed.</Comment>
<StructureElement
 TypeName="Messages.EUROBALISE.Message"
 Default=""
 Mode="InOut"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Telegram"
 Guid="ad863b60-3a1e-43a1-a9ee-a490ad1fdd90"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Missed"
 Guid="b1ba2f94-ae29-4f78-a71b-31f85e56796a"
>
<Comment>This variable indicates whether the Telegram was 
a) received from the trackside or 
b) is just a placeholder for a missed balise.</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="PreviousBaliseGroupStruct"
 MaxSize="8"
 Default="[]"
 X="690"
 Y="300"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="BaliseGroupsCol"
 Guid="8cbc2535-0557-4e22-b8de-8c576bea9427"
>
<Comment>Represents the list of last received LRBGs.</Comment>
</Collection><Collection
 TypeName="StoredBaliseStruct"
 MaxSize="8"
 Default="[]"
 X="820"
 Y="480"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BaliseGroupMessages"
 Guid="e78a099b-8642-4076-a591-f69bc658f42c"
>
<ReqRef
 Id="8147a385-c93e-43f4-9eb0-fab4bf63ca62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc0e4b52-3342-412a-bfc9-83bf799fc2a8"
>
</ReqRef><Comment>List of balise telegrams representing a single balise message.</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="BaseTypes.Length"
 Default=""
 X="260"
 Y="80"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BGLocationAccuracy"
 Guid="82c93aa7-24c7-4c34-ba73-364413bf02cc"
>
<ReqRef
 Id="a2fa811d-bd40-4622-98d9-2f0c4c579f2b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc89be93-3405-48a6-887a-33c24565b1eb"
>
</ReqRef><ReqRef
 Id="9e4c5ab1-4454-4b08-9df1-666cf07b17ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7e200c2b-feaf-4c1d-be5f-51968f9267ca"
>
</ReqRef><ReqRef
 Id="7e712341-8fcf-474b-a20b-d3dc889cf08a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40808470-300c-476e-a373-ad623146adf8"
>
</ReqRef><Comment>Gives the value of the Location Accuracy which is determined either by the Linking (if available) or by the corresponding National Value (if applicable) or by the Default Value.</Comment>
<Cases>
<Case
 Name="Linking available"
 Guid="66f967b2-9ea2-4470-830c-40f7d1dc1e60"
>
<PreConditions>
<PreCondition
 Guid="fa49fa02-cf11-45fe-ad90-3229a3860cd5"
>Available ( BTM.Linking.CurrentLinking() )</PreCondition></PreConditions>
<Expression>BTM.Linking.CurrentLinking().LocationAccuracy</Expression>
</Case><Case
 Name="National or default values"
 Guid="590ee6d2-1a2f-48e2-94f8-abce6c0d7a36"
>
<Expression>BaseTypes.Length(Kernel.NationalValues.CurrentNV().DefaultLocationAccuracyOfABaliseGroup)</Expression>
</Case></Cases>
</Function><Function
 Type="PreviousBaliseGroupStruct"
 Default=""
 X="40"
 Y="140"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="FarthestBG"
 Guid="1a488722-6327-48c3-b7d2-acf35d480352"
>
<ReqRef
 Id="1ee16e25-19bc-4c58-b451-ebd13c054d1c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9e92dc5b-c0e4-432e-bab4-2c9a2ab3e362"
>
</ReqRef><Comment>Provides the previous LRBG, if any.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="9a9dcfe5-feaa-4d5e-9492-a5095eb075c8"
>
<Expression>REDUCE BTM.PreviousBaliseGroups
  USING X IN BTM.SelectFartherBG ( X , RESULT )
  INITIAL_VALUE EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="PreviousBaliseGroupStruct"
 Default=""
 X="40"
 Y="80"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SelectFartherBG"
 Guid="6a90105b-499b-4fa4-ba97-0ee80e86f32c"
>
<Comment>Selects the balise group which is the nearer between the two balise groups provided</Comment>
<Parameters>
<Parameter
 Type="PreviousBaliseGroupStruct"
 Name="bg1"
 Guid="8b6a601b-8730-44f5-846d-56bba22cc276"
>
</Parameter><Parameter
 Type="PreviousBaliseGroupStruct"
 Name="bg2"
 Guid="3160361b-f9a7-4adb-bbcb-5ea66685108e"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Empty bg1"
 Guid="fd17fe25-b13f-43b7-ac23-1234806bcb16"
>
<PreConditions>
<PreCondition
 Guid="6e69621e-5017-45cf-8e5f-a2803b992672"
>NOT Available ( bg1 )</PreCondition></PreConditions>
<Expression>bg2</Expression>
</Case><Case
 Name="Empty bg2"
 Guid="1f5e2c08-986e-4b2d-a85b-9c9ada73f682"
>
<PreConditions>
<PreCondition
 Guid="2cdda462-ce0b-45cb-98a9-23033b4e862b"
>NOT Available ( bg2 )</PreCondition></PreConditions>
<Expression>bg1</Expression>
</Case><Case
 Name="bg1 is the oldest"
 Guid="6500b8d8-aa19-4146-a096-2d8753a7760f"
>
<PreConditions>
<PreCondition
 Guid="ca98163b-74ba-48e2-b24b-35a21cb85d6f"
>Kernel.DateAndTime.T1LaterThanT2(
    T1 =&gt; bg2.BaliseGroup.Timestamp,
    T2 =&gt; bg1.BaliseGroup.Timestamp
)</PreCondition></PreConditions>
<Expression>bg1</Expression>
</Case><Case
 Name="bg2 is the oldest"
 Guid="a430f7b8-6f5f-4c7f-b0bf-805f91f8c444"
>
<Expression>bg2</Expression>
</Case></Cases>
</Function><Function
 Type="PreviousBaliseGroupStruct"
 Default=""
 X="150"
 Y="80"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SelectNearerBG"
 Guid="77955bc8-c494-4883-b4f6-268715694571"
>
<Comment>Selects the balise group which is the nearer between the two balise groups provided</Comment>
<Parameters>
<Parameter
 Type="PreviousBaliseGroupStruct"
 Name="bg1"
 Guid="8ec1dd11-507e-4aef-b6e9-8c437c20b3c3"
>
</Parameter><Parameter
 Type="PreviousBaliseGroupStruct"
 Name="bg2"
 Guid="81075d74-f8d2-46ee-9424-ee00d6302b4a"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Empty bg1"
 Guid="f3c35d97-e93e-446b-980c-13e34bf183d2"
>
<PreConditions>
<PreCondition
 Guid="9d0c7531-62af-47a6-9b40-51e5eb394bc1"
>NOT Available ( bg1 )</PreCondition></PreConditions>
<Expression>bg2</Expression>
</Case><Case
 Name="Empty bg2"
 Guid="27a5b5d9-356a-4cb5-ab64-6b3ace859b24"
>
<PreConditions>
<PreCondition
 Guid="495c1002-f55d-4422-8fea-db8e4e649571"
>NOT Available ( bg2 )</PreCondition></PreConditions>
<Expression>bg1</Expression>
</Case><Case
 Name="bg1 is more recent"
 Guid="794009f7-5d86-40b9-bdc3-acd7d06aafaf"
>
<PreConditions>
<PreCondition
 Guid="7cbc332d-8834-435a-9c08-ada4f2d15ea5"
>NOT Kernel.DateAndTime.T1LaterThanT2(
    T1 =&gt; bg2.BaliseGroup.Timestamp,
    T2 =&gt; bg1.BaliseGroup.Timestamp
)</PreCondition></PreConditions>
<Expression>bg1</Expression>
</Case><Case
 Name="bg2 is more recent"
 Guid="9b6c6061-1000-432f-aa53-8c4ce5e77484"
>
<Expression>bg2</Expression>
</Case></Cases>
</Function><Function
 Type="BaliseGroupStruct"
 Default=""
 X="260"
 Y="140"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="PreviousLRBG"
 Guid="9f7a84b1-1005-45f6-b9a7-9675d7b6593a"
>
<ReqRef
 Id="1ee16e25-19bc-4c58-b451-ebd13c054d1c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="17bfb0c0-9d46-49c4-ae57-2b48d16ed23d"
>
</ReqRef><Comment>Provides the previous LRBG, if any.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="a3bab8f5-ac86-45fb-b5e9-c1df8045ffea"
>
<Expression>(REDUCE BTM.PreviousBaliseGroups | X.IsLRBG
  USING X IN BTM.SelectNearerBG ( X , RESULT )
  INITIAL_VALUE EMPTY).BaliseGroup</Expression>
</Case></Cases>
</Function><Function
 Type="Position"
 Default=""
 X="150"
 Y="20"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AntennaPositionFromOdometry"
 Guid="f0f2c6b2-53e3-4d96-808e-01b568084dd7"
>
<Comment>Provides the position from the Odometry.</Comment>
<Cases>
<Case
 Name="Always"
 Guid="d615b552-1523-4e37-9f1f-bfd4a9de8af3"
>
<Expression>BTM.Position
{
  OverReadingAmountOdo =&gt; Odometry.Accuracy.D_ora,
  Position =&gt; Odometry.NominalDistance - ActiveAntennaPosition,
  UnderReadingAmountOdo =&gt; Odometry.Accuracy.D_ura
}</Expression>
</Case></Cases>
</Function><Function
 Type="OrientationEnum"
 Default=""
 X="370"
 Y="80"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BaliseGroupOrientation"
 Guid="6c6b5376-aa00-4f46-84a0-6aece30174c1"
>
<ReqRef
 Id="7ea29f51-073f-4293-8a53-6d777b781609"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73650424-456d-477d-8520-14defc2c76e1"
>
</ReqRef><ReqRef
 Id="5a70895f-ceeb-4c8f-9e52-f3de05ca5a83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5055a91b-b546-40b9-aff1-97d113fb2d83"
>
</ReqRef><ReqRef
 Id="d1944e18-a016-48f1-9817-9a6c415e92e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7dd8853d-c545-494f-8d2a-ffa6e804b314"
>
</ReqRef><ReqRef
 Id="370bc14e-630a-4f72-87f6-54e50015825c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ebdbf471-edcb-4fd7-82b6-33a5467a7cc7"
>
</ReqRef><ReqRef
 Id="9ffb7f56-2bd6-43f5-8def-6aac968df073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6381244e-1f94-41cf-972e-3398b62d9f6c"
>
</ReqRef><ReqRef
 Id="c616e51b-8db4-4b6a-b957-18b0ff09c9ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1413138-5cd9-418b-a0aa-4b80ca1d37cc"
>
</ReqRef><ReqRef
 Id="bd668bbe-6aea-492e-a1bb-5683e651c453"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74e7d8e3-1e40-4adc-a496-ff16c2ed3f00"
>
</ReqRef><ReqRef
 Id="84a3e716-7b2f-4eb0-93b4-872e90faf619"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="25440d84-0718-4e57-a466-afcf31a548bb"
>
</ReqRef><ReqRef
 Id="24a635be-ba49-419a-8cc5-c37817d23f66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="24b38875-6843-435e-8abf-f44eb7277d60"
>
</ReqRef><Comment>Returns the orientation of the current balise group</Comment>
<Cases>
<Case
 Name="Less than two balises in the balise group, valid linking information"
 Guid="f8c55f68-ab50-4409-988b-f66afe23e264"
>
<PreConditions>
<PreCondition
 Guid="682a9ec8-f37d-4d87-8dd6-9a4ca0648099"
>BTM.IsSingleBaliseGroup(BTM.CurrentBaliseGroup)</PreCondition><PreCondition
 Guid="3f4762dd-f337-493a-927f-479853f08788"
>BTM.Linking.CurrentLinking().BaliseGroupIdentifier== ( FIRST X IN BTM.CurrentBaliseGroup ).Telegram.NID_BG</PreCondition><PreCondition
 Guid="99f3dd17-d0be-4689-b9ec-5dfc9925b30e"
>Kernel.Mode not in [ModeEnum.SL, ModeEnum.PS, ModeEnum.SH]</PreCondition></PreConditions>
<Expression>BTM.Linking.CurrentLinking().Orientation</Expression>
</Case><Case
 Name="Less than two balises in the balise group, no valid linking information"
 Guid="02355d09-b3c3-4a71-80ad-92251096056d"
>
<PreConditions>
<PreCondition
 Guid="42e647d7-f4ec-404e-822d-0af260c9426c"
>BTM.IsSingleBaliseGroup(BTM.CurrentBaliseGroup)</PreCondition></PreConditions>
<Expression>OrientationEnum.Unknown</Expression>
</Case><Case
 Name="First balise is last in the group"
 Guid="1b917fc8-846c-477a-b9f8-6b1bbf9a1a07"
>
<PreConditions>
<PreCondition
 Guid="99800f60-19c6-48c4-895b-d7aa823ecd0c"
>(FIRST X IN BTM.CurrentBaliseGroup).Telegram.N_PIG == (FIRST X IN BTM.CurrentBaliseGroup).Telegram.N_TOTAL</PreCondition></PreConditions>
<Expression>OrientationEnum.Reverse</Expression>
</Case><Case
 Name="First balise is first in the group"
 Guid="9ce6a19a-a14f-4efa-8a9d-6f7a4101f7ec"
>
<PreConditions>
<PreCondition
 Guid="a3515d8d-741c-40a4-8a64-acafbdeb205e"
>(FIRST X IN BTM.CurrentBaliseGroup).Telegram.N_PIG == 0</PreCondition></PreConditions>
<Expression>OrientationEnum.Nominal</Expression>
</Case><Case
 Name="Two balises stored, N_PIG_1 lower than N_PIG_2"
 Guid="ae25aa1f-71a4-4d87-9b56-5ec6680f6877"
>
<Comment>This case covers the situation where the first encountered balise in the group was missed and the direction is nominal.</Comment>
<PreConditions>
<PreCondition
 Guid="5c1a408b-2831-4d4c-9008-3db03c567c80"
>(COUNT X IN BTM.CurrentBaliseGroup) &gt; 1

  AND  

(FIRST X IN CurrentBaliseGroup).Telegram.N_PIG &lt; (LAST Balise IN BTM.CurrentBaliseGroup).Telegram.N_PIG</PreCondition></PreConditions>
<Expression>OrientationEnum.Nominal</Expression>
</Case><Case
 Name="Two balises stored, N_PIG_1 higher than N_PIG_2"
 Guid="7c70fdb1-9f62-4151-b0ad-78ecf220a67e"
>
<PreConditions>
<PreCondition
 Guid="20d361f2-70ef-4a67-9c01-5e11cd5cfb34"
>(COUNT X IN BTM.CurrentBaliseGroup) &gt; 1

  AND  

(FIRST Balise IN BTM.CurrentBaliseGroup).Telegram.N_PIG &gt; (LAST Balise IN BTM.CurrentBaliseGroup).Telegram.N_PIG</PreCondition></PreConditions>
<Expression>OrientationEnum.Reverse</Expression>
</Case><Case
 Name="Otherwise"
 Guid="e8c38925-da03-4f17-a72e-f1d5e4ff496b"
>
<Comment>Default case.</Comment>
<Expression>OrientationEnum.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="150"
 Y="140"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LRBGCandidate"
 Guid="09e83b0e-f7e5-4b6c-bdcc-f525de451186"
>
<ReqRef
 Id="50574953-3247-4859-8de2-1049ab46e862"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="779fe215-3bf2-4c8f-a832-1ed8d5d0f6b2"
>
</ReqRef><ReqRef
 Id="675394d7-4475-4a7f-9846-627ae90086d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f5ae238c-42d9-470d-8cd7-2d31ad14f2a0"
>
</ReqRef><ReqRef
 Id="18834f9f-2f32-40fe-9d9a-97c8e2991f93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2cc92b31-5b34-4951-abfe-3f489a768dbf"
>
</ReqRef><Comment>Indicates whether the Current Balise Group is a candidate for LRBG</Comment>
<Cases>
<Case
 Name="Linking available"
 Guid="e5500388-7ed0-4a1d-9efb-de0e559d6fd3"
>
<PreConditions>
<PreCondition
 Guid="d6f19038-6d40-4e3d-ba91-773dab02a05a"
>BTM.Linking.LinkingApplicable()</PreCondition></PreConditions>
<Expression>BTM.Linking.CurrentBGWithinFrame()</Expression>
</Case><Case
 Name="Linking not available"
 Guid="c0fbb6a1-646f-4f71-8bbc-322f3a4f4ee9"
>
<Expression>FORALL X IN BTM.CurrentBaliseGroup | X.Telegram.Q_LINK != Messages.Q_LINK.Unlinked</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="40"
 Y="20"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BaliseTelegramToBeHandled"
 Guid="5784ea65-414e-4412-8db7-bad78ec32edf"
>
<ReqRef
 Id="4e07491f-516f-4494-87d7-96cf0ecef9d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92c95d15-1f94-473b-beb0-144ef51692e3"
>
</ReqRef><ReqRef
 Id="55ed41db-cdd9-49da-80a2-b84fd2b4c659"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3fdc02d1-8ed0-4ea8-9f3f-78aada4d9680"
>
</ReqRef><ReqRef
 Id="76b98769-31ac-4281-b308-196dd999701e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04392093-2d30-49bf-bab3-e552205ef532"
>
</ReqRef><ReqRef
 Id="07d70a88-af4e-458c-871b-740e171d9640"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f95425dc-51fe-4ebc-ab14-0446448cb22e"
>
</ReqRef><Comment>This function indicates whether a single balise needs to be processed. Only the second of a pair of duplicate balises is handled.</Comment>
<Parameters>
<Parameter
 Type="StoredBaliseStruct"
 Name="Message"
 Guid="97fc975a-3d6b-44b1-b594-1bcd610e2aac"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Balise missed"
 Guid="dd97cafd-8e4e-4dfe-8500-730851203e45"
>
<PreConditions>
<PreCondition
 Guid="2a76b638-b491-466d-89cd-23598dcaaa9f"
>Message.Missed</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Not a duplicate"
 Guid="15fa57fb-edc6-41e1-832c-27b0fbd51ee6"
>
<PreConditions>
<PreCondition
 Guid="de88cb07-520d-456f-8abd-c1ba1bb8184f"
>Message.Telegram.M_DUP == Messages.M_DUP.No_duplicates</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Duplicated balise, other one contains Default balise information"
 Guid="ad404ecc-daf4-4519-994b-21c75904ee01"
>
<PreConditions>
<PreCondition
 Guid="2677fec2-663d-4234-881b-e5d1fd11258e"
>Message.Telegram.M_DUP != Messages.M_DUP.No_duplicates
  AND  
(
NOT THERE_IS packet1 IN Message.Telegram.Sequence1 |
    Available(packet1.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION)
)
  AND  
(
THERE_IS packet2 IN BTM.DuplicateBalise(Message.Telegram).Telegram.Sequence1 |
    Available(packet2.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION)
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Second of a pair of duplicates"
 Guid="8d9e8a5a-1f5f-4770-a887-da6bfa468479"
>
<PreConditions>
<PreCondition
 Guid="96082ab6-fc3c-4a7b-bdbb-3f0531f8b32d"
>Message.Telegram.M_DUP != Messages.M_DUP.No_duplicates
  AND  
(
NOT THERE_IS packet IN Message.Telegram.Sequence1 |
    Available(packet.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION)
)
  AND  
Before(
    ExpectedFirst =&gt; BTM.DuplicateBalise(Message.Telegram),
    ExpectedSecond =&gt; Message,
    Collection =&gt; BTM.CurrentBaliseGroup
)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Duplicated balise missed"
 Guid="b637ca75-2fc2-4610-b628-97ee8ac7fa15"
>
<PreConditions>
<PreCondition
 Guid="490dd201-2515-4ce7-874d-e58c06cec244"
>Message.Telegram.M_DUP not in [Messages.M_DUP.No_duplicates, Messages.M_DUP.Spare]
  AND  
BTM.DuplicateBalise(Message.Telegram).Missed</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="146db196-7b2e-4077-81cd-72cea6a41389"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="150"
 Y="200"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ConsiderBTMPacket"
 Guid="dd01bcbc-e748-427d-a352-41a5eff3f636"
>
<ReqRef
 Id="84a3e716-7b2f-4eb0-93b4-872e90faf619"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="677c3283-928f-487a-b70b-5d93061ef40b"
>
</ReqRef><ReqRef
 Id="1918ec5c-54a5-4240-8cd2-5f860383b37c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="760f2b91-f167-4914-976b-34e4434be317"
>
</ReqRef><ReqRef
 Id="b997b70b-691d-427f-8512-361a510200ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2d1a27bf-31c4-4f92-b111-4896d53461b5"
>
</ReqRef><ReqRef
 Id="8cde1181-2190-4ab0-bba8-82047564e48b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44aebfce-d0ba-417c-854a-97eca234c442"
>
</ReqRef><ReqRef
 Id="b0c8610c-cc5b-424b-9f13-59254ed991bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="72277804-c35c-4eb0-a7f5-6d8762eb58ce"
>
</ReqRef><ReqRef
 Id="082b9d97-81b9-4995-87a2-07e6e31bd2d0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ceef2a99-20be-46d1-94bc-da30e82a6dd6"
>
</ReqRef><ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0baaa13d-730d-413e-b76e-c64599e61e5c"
>
</ReqRef><ReqRef
 Id="bd668bbe-6aea-492e-a1bb-5683e651c453"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="78bda153-aac1-4291-98c3-2befac265518"
>
</ReqRef><ReqRef
 Id="9ffb7f56-2bd6-43f5-8def-6aac968df073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26941921-eb8c-4dbe-a375-afbb3ad5d54a"
>
</ReqRef><ReqRef
 Id="e40c0b71-8a09-48e2-afa1-209598ab1a8a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="854e687d-1e69-415d-aefd-db6b4f24ab98"
>
</ReqRef><ReqRef
 Id="1491cc62-39cf-4aac-9887-c6a659e8f015"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a11ae52-4e7d-4af0-9eb5-1c804ed0869d"
>
</ReqRef><ReqRef
 Id="09b7fcaa-8fd0-4fe9-8eed-a4c1fee31c2b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="496efc07-24d1-4398-890e-4ab1014e0451"
>
</ReqRef><ReqRef
 Id="6649ff98-11a8-49c6-8b46-6c93216ad250"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5906fdfd-0717-477f-b70a-c8c7b2d15bc6"
>
</ReqRef><ReqRef
 Id="24a635be-ba49-419a-8cc5-c37817d23f66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6308d2b1-fb90-444c-8ca2-58d518981235"
>
</ReqRef><Comment>Returns true if the packet has to be considered, that is 
  - if the packet is available (hence its orientation is also available),
  - this is not an infill information, or the infill transmission media is available on-board and 
  - its information is valid for the current orientation of the train or for both directions). 
If the train direction is unknown, this function returns true only if the packet&apos;s information if valid for both directions.</Comment>
<Parameters>
<Parameter
 Type="Messages.Q_DIR"
 Name="PacketOrientation"
 Guid="d715d88e-2743-4b56-9099-d4f21cdb9c34"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Empty orientation"
 Guid="a74508a2-aed1-4cc4-9e6e-a2a30fcccc99"
>
<PreConditions>
<PreCondition
 Guid="177c2d52-1519-43c6-bdba-f47ef81b1e79"
>NOT Available ( PacketOrientation )</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Train position unknown"
 Guid="6ef69ff5-4ba0-4be0-aefc-526ba8ce03bc"
>
<PreConditions>
<PreCondition
 Guid="86aff26d-9d64-4966-aac1-a41e04d16e27"
>Kernel.TrainPosition.Position.DataState == DataStateEnum.Unknown</PreCondition></PreConditions>
<Expression>PacketOrientation == Messages.Q_DIR.Both_directions</Expression>
</Case><Case
 Name="Infill information but no infill transmission media"
 Guid="6afeb3c0-afbb-40ca-bd6b-e2bcb2619c8d"
>
<PreConditions>
<PreCondition
 Guid="91243480-4428-4ba5-93ca-e72252c044da"
>Kernel.Infill.Data != EMPTY AND NOT Kernel.Infill.InfillTransmissionMediaAvailable</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Value"
 Guid="8ecc0b19-4add-4c5e-82e5-c56868836734"
>
<Expression>PacketOrientation == EFSOrientationConverter ( BTM.BaliseGroupOrientation() )
  OR
PacketOrientation == Messages.Q_DIR.Both_directions</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="260"
 Y="200"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="AntennaDistance"
 Guid="71e1a1a9-1a82-4b22-9f19-0ead55a18d7e"
>
<ReqRef
 Id="858a955b-8eb5-4eac-b52e-49723ffd3d9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7904a906-de17-49e4-817b-3ae665deff46"
>
</ReqRef><Comment>Gives the distance between the safe front end of the train and the active antenna.</Comment>
<Parameters>
<Parameter
 Type="DistanceIntervalEnum"
 Name="PointOfInterest"
 Guid="b6c13f39-419b-454b-b453-09051b6ed9cd"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="d62cbab2-876b-43a9-b9ef-9ab243cac385"
>
<Expression>Kernel.TrainPosition.FrontEndPosition ( PointOfInterest ) - BTM.ActiveAntennaPosition</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="40"
 Y="260"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="IsSingleBaliseGroup"
 Guid="35c94014-3076-4d7f-9364-9793510f3456"
>
<ReqRef
 Id="0b39fdf7-d36a-45dc-81ad-4fc52969968f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c4e5e30-e804-410c-93f1-3f35c3684c3c"
>
</ReqRef><ReqRef
 Id="d3960249-edd7-4e75-8c50-ba27a4b4af49"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9cb72f70-6397-4ae2-bad7-c2db450f2398"
>
</ReqRef><Comment>Returns true if the current balise group consists of only a single balise</Comment>
<Parameters>
<Parameter
 Type="BaliseGroupMessages"
 Name="BaliseGroup"
 Guid="f45d0aae-d504-4d9b-a0f9-0a6d112387a1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="050bdffb-b0a0-4a7c-ad7c-995116a0edc3"
>
<Expression>(COUNT X IN BaliseGroup) == 1
  AND  
(FIRST X IN BaliseGroup).Telegram.N_TOTAL == 0</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="40"
 Y="200"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="IsLocationReference"
 Guid="ab39a627-bbab-4874-84a7-53e629e0f391"
>
<ReqRef
 Id="612e5c65-65af-4727-a4f9-ce73fbd5f0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="911b5162-095f-4bae-8e70-ddfa368528e5"
>
</ReqRef><ReqRef
 Id="77e74b63-e8c9-42d5-bcf6-0e5423c75697"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f91604a0-0395-4097-ab75-6ec48eee4f9f"
>
</ReqRef><Comment>Holds the location reference of the current BG</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="3c988b8a-14ee-49a6-8539-4e532d1d5fbf"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="First balise in group"
 Guid="ff32a53d-0091-42cc-aef2-99be365d973e"
>
<PreConditions>
<PreCondition
 Guid="7f978365-dc1d-4041-a1ab-d564fca4dfd3"
>Message.N_PIG == 0</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Second balise is duplicate of first"
 Guid="6e3e6161-6ce0-49d6-a44a-e7062b072fc4"
>
<PreConditions>
<PreCondition
 Guid="a02eb7ff-a0d5-41f1-87d0-6c54c1e7ae57"
>Message.N_PIG == 1</PreCondition><PreCondition
 Guid="2faa6422-23f7-41c4-85fb-699162e5f164"
>Message.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_previous_balise__seen_in_the_nominal_direction_of_the_balise_group</PreCondition><PreCondition
 Guid="0841abe9-feff-42b3-bd02-a00031e66078"
>NOT ( THERE_IS X IN BTM.CurrentBaliseGroup | (X.Telegram.N_PIG == 0) )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="cc8cac42-85a1-48e5-b8ad-78149207795f"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.SubStructure1"
 Default=""
 X="370"
 Y="260"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="MAOfTelegram"
 Guid="93fca8b1-bdc9-42c4-ae84-3f961d540f93"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="05e60619-cf07-4bf6-b3e5-894ac1958f33"
>
</ReqRef><Comment>Provides the movement authority sent in the balise telegram, if any.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="aTelegram"
 Guid="c6038b4e-df19-4246-a1cd-61f2ace4a7c1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="4ee689aa-f596-4543-b312-4d096e591647"
>
<Expression>FIRST X IN aTelegram.Sequence1 | X.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY  != EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.SubStructure1"
 Default=""
 X="40"
 Y="320"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ModeProfileOfTelegram"
 Guid="56402f8b-c1d4-41d4-af27-16d374cf98af"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="890e771b-b580-439d-8c68-c8f2fdc19879"
>
</ReqRef><Comment>Provides the mode profile sent in the balise telegram, if any.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="aTelegram"
 Guid="364edc85-1964-448c-91cc-e4750682c605"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="c37b381a-04e7-4dc2-ba26-6fd4c86d5d81"
>
<Expression>FIRST X IN aTelegram.Sequence1 | X.TRACK_TO_TRAIN.MODE_PROFILE  != EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.M_MCOUNT"
 Cacheable="TRUE"
 Default=""
 X="370"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="CurrentBGM_MCOUNT"
 Guid="92c7afe7-4312-43dc-895b-83398317885e"
>
<ReqRef
 Id="44ee1586-bb5c-42b3-b64d-c63e870d4d0e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a542252-5ed4-4c4f-bcd2-8cf008e65181"
>
</ReqRef><ReqRef
 Id="5b83898b-9d38-4194-ba39-282256776162"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b19e98b-24d0-477a-8a2c-0627590e9816"
>
</ReqRef><ReqRef
 Id="ff4a7424-8900-4f28-bd9d-78e5d8d68a96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1c73dec3-a299-4bc8-8cd6-1add7609a0ad"
>
</ReqRef><ReqRef
 Id="8df559d7-4427-47e1-8a05-f0f049023f96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9aba8498-a10c-4488-a059-ee074882dfd0"
>
</ReqRef><Comment>Returns the current balise group&apos;s M_MCOUNT value by taking the first one that</Comment>
<Cases>
<Case
 Name="Value"
 Guid="b6221c53-5616-4adf-a085-1fad71644c39"
>
<Expression>(FIRST X IN BTM.CurrentBaliseGroup | (X.Telegram.M_MCOUNT != 255 AND X.Telegram.M_MCOUNT != 254)).Telegram.M_MCOUNT</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Default=""
 X="150"
 Y="320"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="TravelledDistanceFromBG"
 Guid="8c1c8b83-7a3e-4623-a519-765f7d5919ad"
>
<ReqRef
 Id="b9a734e7-b75f-426b-a5f9-6926dfdc248d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bd6ee481-0620-4540-9c94-c124e0e0cc3b"
>
</ReqRef><Comment>Provides the distance travelled from a balise group given in parameter. In case the balise group is not stored in the list of previously received balise groups, the returned distance is unknown.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_BG"
 Name="aBG"
 Guid="83176aad-6fcb-4cc8-8267-fa10ab3d9a55"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The BG is available"
 Guid="bbc79522-c8ab-4fa8-b6ed-089f511bd393"
>
<PreConditions>
<PreCondition
 Guid="39d378f2-a59c-43bf-9e51-ee9605484628"
>THERE_IS X IN BTM.PreviousBaliseGroups | X.BaliseGroup.NID == aBG</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - (FIRST X IN BTM.PreviousBaliseGroups | X.BaliseGroup.NID == aBG).BaliseGroup.Position.Position</Expression>
</Case><Case
 Name="Otherwise"
 Guid="bbb4368c-06da-4efc-9230-417c0d87f09f"
>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="260"
 Y="320"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="CurrentBGIsSingle"
 Guid="df71b6c3-9242-4aa9-9de5-4af1944389a1"
>
<ReqRef
 Id="76868626-5a6b-4610-a688-a56653fef701"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="20f9b592-92f4-4fe2-99c0-316f45d325c6"
>
</ReqRef><Comment>Indicates if the current balise group is single.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="ecba41eb-172e-43a6-a77b-432225e820eb"
>
<Expression>(FIRST X IN BTM.CurrentBaliseGroup).Telegram.N_TOTAL == 0</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="40"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MessageIsInconsistent"
 Guid="2fd2a28a-aa48-4284-999c-cfc3fc9edd19"
>
<ReqRef
 Id="00031a80-e9f3-4821-a0a6-1d322a75fa85"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fcd73cc5-e5d4-4b99-ac40-d9d5479abed7"
>
</ReqRef><ReqRef
 Id="3324bf1d-eedf-4227-a95f-86ca4e2d72e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d0d69a02-d43f-46cd-94dd-18de7005d8e3"
>
</ReqRef><ReqRef
 Id="53747e4e-7f05-4bf8-9573-a743730e9af0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b7219f3e-abbb-4b5c-81ca-7e9aa29ce5f0"
>
</ReqRef><ReqRef
 Id="752dcbf7-d97c-4790-bac1-1fc62dbf66f1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="67c73332-6f54-4391-8e65-e7f8a8103e1c"
>
</ReqRef><ReqRef
 Id="a7df0f1f-2d5f-4baa-b656-9ddbc4393074"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a61a4334-934a-4e20-ae18-7652e25c3b48"
>
</ReqRef><ReqRef
 Id="d9803061-6365-4307-896d-2019de665b23"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ff880f2c-5909-409e-b570-bb633ebfc79c"
>
</ReqRef><ReqRef
 Id="758b6d57-bd6b-465f-b091-3477da12be7d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="42b0abe5-841e-4aab-9644-7f4dacc8826f"
>
</ReqRef><ReqRef
 Id="68a7df3c-ca07-4adf-ac06-12ba8e631b5e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e4e526d-f0fc-4a31-bb10-3d7d4fde29e7"
>
</ReqRef><ReqRef
 Id="d40be57e-365b-4f3a-ad26-7ff1d347c5f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c7bb4f41-996e-4873-935c-a685787d1b2e"
>
</ReqRef><ReqRef
 Id="8bb7feaf-24fe-4d1a-9775-87e913521f1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b7b3e636-9810-4a31-b14b-90f2881dad72"
>
</ReqRef><ReqRef
 Id="91521e6e-52aa-4c7b-bb7f-957007e8cee5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7aa0b7de-eb25-47c9-b660-eab39b80215b"
>
</ReqRef><ReqRef
 Id="04376925-d0f1-494f-bbdf-2723a7d3b9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a0a23e3-7ae2-4b76-bf54-b09c26cddc9e"
>
</ReqRef><ReqRef
 Id="c3e16444-1771-45e4-aed8-a538b89ed2b3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="85ae2cea-7f3e-42d6-a6d6-05056ce3af4e"
>
</ReqRef><ReqRef
 Id="b0ca9451-479b-42b3-93a6-3c7089a0b7be"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d814031d-7cc9-43ed-b340-7183c2b83847"
>
</ReqRef><ReqRef
 Id="2a18f48f-66f4-459f-bda8-f71f367705d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e77f4a4-2177-4fb5-9ec0-250e07e24d2e"
>
</ReqRef><Comment>Determines whether the Current Balise Group contains a message consistency error.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="LinkingUsed"
 Guid="9f307796-83dc-4ffc-be7b-bf4c8aef2369"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Do not check Balise Group Message consistency"
 Guid="7d28d2fd-9a56-430d-9a12-8837ad47df2d"
>
<PreConditions>
<PreCondition
 Guid="57cf162d-1c63-4ecb-8091-b1a895c0094f"
>NOT BTM.CheckBGMessageConsistency(LinkingUsed)</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="Value"
 Guid="772170b2-3d80-45ac-a1cd-17674feb3356"
>
<Comment>Check that the linked BG (that is present in the linking information) is consistent.
A BG marked as linked but absent from the linking information will be rejected and no linking reaction will be applied.</Comment>
<Expression>BTM.BaliseGroupIncomplete(LinkingUsed)
  OR  
BTM.IncorrectValuesInMessage()
  OR  
BTM.InconsistentMessageCounters()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="150"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="BaliseGroupIncomplete"
 Guid="036c6c2b-15a1-405a-9afd-6a3bd4d66669"
>
<ReqRef
 Id="3324bf1d-eedf-4227-a95f-86ca4e2d72e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1790e72e-ac6b-4ea6-babc-99ace6047388"
>
</ReqRef><ReqRef
 Id="00031a80-e9f3-4821-a0a6-1d322a75fa85"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="80118b6c-79dd-4f49-aae5-9b2cdcfbf8a2"
>
</ReqRef><ReqRef
 Id="bc35119f-f1da-40d4-b6f7-b73c9ba07d98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="334c1577-1d0b-4294-a4ba-48179288eeee"
>
</ReqRef><ReqRef
 Id="bb8f4e12-123f-4746-81d4-bd86e68fad6b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="46b8f5fa-fcc0-4f8a-bba4-bad2f00be8ff"
>
</ReqRef><ReqRef
 Id="5c440e26-b092-4abd-8105-dca981501e3f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4ae4c9cc-2c3d-4485-ab91-55206e30c45d"
>
</ReqRef><ReqRef
 Id="d9803061-6365-4307-896d-2019de665b23"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c8f4befa-e34c-4027-b57b-43c11910ca5f"
>
</ReqRef><ReqRef
 Id="a7df0f1f-2d5f-4baa-b656-9ddbc4393074"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d3442c50-933d-48a1-a1ad-0a25cf37a913"
>
</ReqRef><ReqRef
 Id="d40be57e-365b-4f3a-ad26-7ff1d347c5f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a0b0cf3f-9220-4357-a9ad-fabc9c930d68"
>
</ReqRef><ReqRef
 Id="8bb7feaf-24fe-4d1a-9775-87e913521f1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2ee71460-e278-46ed-b8c2-60634e51de02"
>
</ReqRef><ReqRef
 Id="0eeafa43-5aca-4a22-b601-8acb4a81c8cd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0d6a3e4c-aae5-4bac-96a3-1beea1a0e6c0"
>
</ReqRef><ReqRef
 Id="79632341-1718-4a2e-b6d6-dbdd628d9fa2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b39345f7-10da-47aa-be9a-a23d7feb516c"
>
</ReqRef><ReqRef
 Id="c714f3fb-5bad-4115-8fd3-588a1387795d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1c4f0db6-3f95-41b0-b2af-02e03b3f4b97"
>
</ReqRef><Comment>Checks whether any balises were missed in the current balise group.
If balises were missed, checks for an acceptable duplicate.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="LinkingUsed"
 Guid="626278c0-418f-4515-b43c-e6555a3e4263"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Linking used"
 Guid="91830afb-1eb6-4209-a2c4-02bf86f2962e"
>
<PreConditions>
<PreCondition
 Guid="f542a03d-bf03-4346-a2c9-fbb9fe2892b6"
>LinkingUsed</PreCondition></PreConditions>
<Expression>THERE_IS X IN BTM.CurrentBaliseGroup | 
X.Missed
 AND
NOT 
(
BTM.PreviousBalise(X).Telegram.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_next_balise__seen_in_the_nominal_direction_of_the_balise_group
  OR  
BTM.NextBalise(X).Telegram.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_previous_balise__seen_in_the_nominal_direction_of_the_balise_group
)</Expression>
</Case><Case
 Name="Linking not used"
 Guid="e3eb75ad-5aa6-4b1c-8aa0-c2bc1ee9a5a3"
>
<Expression>THERE_IS X IN BTM.CurrentBaliseGroup | 
X.Missed
 AND 
NOT
(
  (
  BTM.PreviousBalise(X).Telegram.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_next_balise__seen_in_the_nominal_direction_of_the_balise_group
    OR  
  BTM.NextBalise(X).Telegram.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_previous_balise__seen_in_the_nominal_direction_of_the_balise_group
  )

 AND 

 BTM.DuplicatedBaliseIsUseable(X.Telegram)
)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="260"
 Y="260"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="IncorrectValuesInMessage"
 Guid="3260aec8-acde-48a4-813c-60c18974cfa2"
>
<ReqRef
 Id="53747e4e-7f05-4bf8-9573-a743730e9af0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3d71f43-4a31-47c7-8969-35c8d6cf85bf"
>
</ReqRef><ReqRef
 Id="91521e6e-52aa-4c7b-bb7f-957007e8cee5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad33275d-1d78-40f5-ba77-fc984ac71544"
>
</ReqRef><ReqRef
 Id="758b6d57-bd6b-465f-b091-3477da12be7d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="568def3c-1745-40f9-a486-2b01b6c5244a"
>
</ReqRef><ReqRef
 Id="2acfcc15-b52e-4162-a72e-a4ff1e9f43e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b43825ac-ede4-4cfb-894b-24bc74886dc6"
>
</ReqRef><ReqRef
 Id="da9f0886-9eda-4e06-91e4-41094a7a488f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="49268431-7e68-45c1-8abc-d59a62754742"
>
</ReqRef><Comment>Checks whether any of the variables in the message contain incorrect or spare values.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="6648ca8c-27e7-484f-b532-c80efeaf4c48"
>
<Expression>THERE_IS Message IN BTM.CurrentBaliseGroup | NOT Messages.EUROBALISE.MessageValuesCorrect(Message.Telegram)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="260"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="InconsistentMessageCounters"
 Guid="a1e62178-d9df-4071-b48d-0ea402143296"
>
<ReqRef
 Id="5b83898b-9d38-4194-ba39-282256776162"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dba29bb1-bbac-4c65-adb4-89944c702dbc"
>
</ReqRef><ReqRef
 Id="ff4a7424-8900-4f28-bd9d-78e5d8d68a96"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="66cf7176-322d-48f1-bf2d-02b8b197fb43"
>
</ReqRef><ReqRef
 Id="44ee1586-bb5c-42b3-b64d-c63e870d4d0e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9f3c4a24-38ea-4260-a3fb-555b70e12c0d"
>
</ReqRef><ReqRef
 Id="d3960249-edd7-4e75-8c50-ba27a4b4af49"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ad2fd8d-6136-4970-a8f0-d6d1b2cdc54d"
>
</ReqRef><ReqRef
 Id="752dcbf7-d97c-4790-bac1-1fc62dbf66f1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ea8ee672-ffc2-4aea-8472-b9b0f3ed3d50"
>
</ReqRef><ReqRef
 Id="68a7df3c-ca07-4adf-ac06-12ba8e631b5e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="447ddcef-7468-471e-b430-5e18c9d47ff5"
>
</ReqRef><ReqRef
 Id="00031a80-e9f3-4821-a0a6-1d322a75fa85"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e570ab3f-bd33-4724-875d-c61df23a1f5b"
>
</ReqRef><ReqRef
 Id="d40be57e-365b-4f3a-ad26-7ff1d347c5f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b5d976e0-bde2-487e-9518-68a0622ded95"
>
</ReqRef><ReqRef
 Id="04376925-d0f1-494f-bbdf-2723a7d3b9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e4812f5-b89e-4a4a-b548-fc33bd61c90c"
>
</ReqRef><Comment>Checks that all the message counters in the received BG are consistent (or that they all fit all other telegrams in the message).</Comment>
<Cases>
<Case
 Name="All telegrams fit all others"
 Guid="4bdef627-9e9b-4909-80c2-52097e9aec50"
>
<PreConditions>
<PreCondition
 Guid="a7bc10ee-a2e0-4e3e-9076-9f264f4a9e5c"
>FORALL X IN BTM.CurrentBaliseGroup | X.Telegram.M_MCOUNT == Messages.M_MCOUNT.The_telegram_fits_with_all_telegrams_of_the_same_balise_group</PreCondition></PreConditions>
<Expression>False</Expression>
</Case><Case
 Name="A telegram fits none of the others"
 Guid="4eb04444-97ff-45c2-97c3-0a5be833fb59"
>
<PreConditions>
<PreCondition
 Guid="0922999e-5a02-4990-b933-752811cb95c6"
>THERE_IS Message IN BTM.CurrentBaliseGroup | Message.Telegram.M_MCOUNT == Messages.M_MCOUNT.The_telegram_never_fits_any_message_of_the_group</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="There are two different message counters"
 Guid="4a4aad7b-16a2-4058-b14a-8f29471350c7"
>
<Expression>THERE_IS Message IN BTM.CurrentBaliseGroup | Message.Telegram.M_MCOUNT != BTM.CurrentBGM_MCOUNT() AND Message.Telegram.M_MCOUNT != Messages.M_MCOUNT.The_telegram_fits_with_all_telegrams_of_the_same_balise_group</Expression>
</Case></Cases>
</Function><Function
 Type="StoredBaliseStruct"
 Default=""
 X="260"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PreviousBalise"
 Guid="24f3f5b0-0930-42c6-9f98-2798965db389"
>
<Comment>The previous balise in the BG&apos;s nominal direction (N_PIG - 1)</Comment>
<Parameters>
<Parameter
 Type="StoredBaliseStruct"
 Name="Balise"
 Guid="2df68c8a-3538-4009-a290-020a05ba0e21"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Is the first balise"
 Guid="26527d65-b9e1-4d59-a084-dc246939456e"
>
<PreConditions>
<PreCondition
 Guid="5d77f4f5-b547-4a9c-b267-2f033ad6f535"
>Balise.Telegram.N_PIG == 0</PreCondition></PreConditions>
<Expression>EMPTY</Expression>
</Case><Case
 Name="Otherwise"
 Guid="de41cd39-d996-43c8-a2fd-2bab198aad1c"
>
<Expression>FIRST X IN BTM.CurrentBaliseGroup | X.Telegram.N_PIG == Balise.Telegram.N_PIG - 1</Expression>
</Case></Cases>
</Function><Function
 Type="StoredBaliseStruct"
 Default=""
 X="40"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MissedBalise"
 Guid="6323d562-2733-4469-9a0c-1c15df96e5d1"
>
<Comment>The missed balise of the current balise group. It is added to the collection CurrentBaliseGroup and marked as missed so that the group can be handled.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="88fa3cb0-bfd1-4b65-9d2b-2086ce6b0d03"
>
<Expression>LET refBalise &lt;- (FIRST Balise IN BTM.CurrentBaliseGroup).Telegram

IN
BTM.StoredBaliseStruct{
    Telegram =&gt; Messages.EUROBALISE.Message{
        Q_UPDOWN =&gt; refBalise.Q_UPDOWN,
        M_VERSION =&gt; refBalise.M_VERSION,
        Q_MEDIA =&gt; refBalise.Q_MEDIA,
        N_PIG =&gt; BTM.MissedBalise_N_PIG(),
        N_TOTAL =&gt; refBalise.N_TOTAL,
        M_DUP =&gt; 0,
        M_MCOUNT =&gt; Messages.M_MCOUNT.The_telegram_fits_with_all_telegrams_of_the_same_balise_group,
        NID_C =&gt; refBalise.NID_C,
        NID_BG =&gt; refBalise.NID_BG,
        Q_LINK =&gt; refBalise.Q_LINK,
        Sequence1 =&gt; [],
        BitField =&gt; &apos;&apos;
    },
    Missed =&gt; True
}</Expression>
</Case></Cases>
</Function><Function
 Type="StoredBaliseStruct"
 Default=""
 X="150"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NextBalise"
 Guid="fef8ac32-5aed-498a-86c0-9f0edc069b2e"
>
<Comment>The next balise in the BG&apos;s nominal direction (N_PIG + 1)</Comment>
<Parameters>
<Parameter
 Type="StoredBaliseStruct"
 Name="Balise"
 Guid="1ce2bf6f-4cee-4870-ab21-09cfdff13924"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Is the last balise"
 Guid="9644f69a-be11-4345-8d52-1e8bc44c5dcd"
>
<PreConditions>
<PreCondition
 Guid="595de1de-547e-4abb-ad2b-a8d06d89d477"
>Balise.Telegram.N_PIG == Balise.Telegram.N_TOTAL</PreCondition></PreConditions>
<Expression>EMPTY</Expression>
</Case><Case
 Name="Otherwise"
 Guid="f7acfe2d-b478-41f5-ba31-7a3b6317b206"
>
<Expression>FIRST X IN BTM.CurrentBaliseGroup | X.Telegram.N_PIG == Balise.Telegram.N_PIG + 1</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.N_PIG"
 Default=""
 X="40"
 Y="500"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MissedBalise_N_PIG"
 Guid="190b351a-a22f-4dae-bffa-f62ce58a886c"
>
<Comment>The position of the missed balise in the current balise group.</Comment>
<Cases>
<Case
 Name="Nominal"
 Guid="b9a0af5e-6abb-41b5-9af9-4b8e15f3b2b1"
>
<PreConditions>
<PreCondition
 Guid="e527dd06-8d8f-4ac9-aef1-75fbcae88607"
>BTM.BaliseGroupOrientation() == OrientationEnum.Nominal</PreCondition></PreConditions>
<Expression>LastReceivedBalise().N_PIG + 1</Expression>
</Case><Case
 Name="Reverse"
 Guid="96841db8-5eee-4ccf-985d-c60ea87e31ab"
>
<PreConditions>
<PreCondition
 Guid="dccafee7-8c97-4e55-92e7-b52211cda954"
>BTM.BaliseGroupOrientation() == OrientationEnum.Reverse</PreCondition></PreConditions>
<Expression>LastReceivedBalise().N_PIG + 1</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="260"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="FullBGReceived"
 Guid="8029ace7-da32-4bf8-a69c-b1628b25a1b4"
>
<Comment>Indicates whether the current balise group is complete.</Comment>
<Cases>
<Case
 Name="All balises received"
 Guid="35c3234e-81f9-4164-9fba-d17541b8e422"
>
<PreConditions>
<PreCondition
 Guid="ffbc3619-3161-4287-b261-cc5320a760c5"
>(COUNT X IN BTM.CurrentBaliseGroup) == LastReceivedBalise().N_TOTAL + 1</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="First balise(s) missed, nominal direction"
 Guid="3ac07160-83d4-45d5-ba75-63b82db2221a"
>
<PreConditions>
<PreCondition
 Guid="e9da31c6-973c-49aa-9e61-b5d14d2b5ebc"
>BTM.BaliseGroupOrientation() == OrientationEnum.Nominal
  AND  
LastReceivedBalise().N_PIG == LastReceivedBalise().N_TOTAL</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="First balise(s) missed, reverse direction"
 Guid="74a01db0-056e-448a-98b2-080ae42b2a15"
>
<PreConditions>
<PreCondition
 Guid="c215fd2a-7ce8-464f-9671-48c87c63b97f"
>BTM.BaliseGroupOrientation() == OrientationEnum.Reverse
  AND  
LastReceivedBalise().N_PIG == 0</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="f008b546-138f-49b4-8f75-d24d3fc0c073"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="150"
 Y="500"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DuplicatedBaliseIsUseable"
 Guid="6ec5401f-9f2e-4c64-b301-dd0a209f5157"
>
<ReqRef
 Id="79632341-1718-4a2e-b6d6-dbdd628d9fa2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7e1ba64b-7291-4cab-9d2a-67f4ed8317a6"
>
</ReqRef><ReqRef
 Id="d60a5fe4-0902-42e6-bb3b-2580bb9112a0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1d619ef1-a56b-4640-bcc1-7773921ce729"
>
</ReqRef><ReqRef
 Id="c714f3fb-5bad-4115-8fd3-588a1387795d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bac410b0-09a4-49c8-95fa-a78dbf87da5c"
>
</ReqRef><ReqRef
 Id="3fab5e71-23cc-47ba-ab1f-f945dfe4ed39"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="421647a9-919d-4755-a1ae-a33daa434784"
>
</ReqRef><ReqRef
 Id="6df398cf-cf5e-4d82-81d0-2f1cf9a373dd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1d64e889-327b-41fc-8ee4-d9fb6f4e2e39"
>
</ReqRef><ReqRef
 Id="2cc818c4-64df-4750-9f06-829e7ed446d8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="256947b5-10a8-4aa0-bf41-88496d2635c6"
>
</ReqRef><Comment>Determines whether the information in a duplicated balise can</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Balise"
 Guid="0c7a658a-a2b8-42df-925e-d11dda5d31b1"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Orientation known, directional information in balise"
 Guid="dd225fe6-f3f0-4de4-bcc4-1bba6fd0fd06"
>
<PreConditions>
<PreCondition
 Guid="7eb5830f-91b5-438b-b3b1-c9c98a7860e7"
>Balise.Sequence1 != []
  AND  
THERE_IS X IN Balise.Sequence1 | (Messages.PACKET.TRACK_TO_TRAIN.GetQ_DIR(X.TRACK_TO_TRAIN) == Messages.Q_DIR.Nominal  OR  Messages.PACKET.TRACK_TO_TRAIN.GetQ_DIR(X.TRACK_TO_TRAIN) == Messages.Q_DIR.Reverse)
  AND  
BTM.BaliseGroupOrientation() != OrientationEnum.Unknown</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="All information valid for both directions"
 Guid="bb8a5edf-3d78-478c-9b40-8419b7dca32d"
>
<PreConditions>
<PreCondition
 Guid="7da6c3c5-4e47-49e8-9df7-23241484e700"
>Balise.Sequence1 != []
  AND  
FORALL X IN Balise.Sequence1 | (Messages.PACKET.TRACK_TO_TRAIN.GetQ_DIR(X.TRACK_TO_TRAIN) == Messages.Q_DIR.Both_directions)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="No directional info, nor info for both directions"
 Guid="e75160c7-9683-4aea-aa2a-cd1307200da5"
>
<PreConditions>
<PreCondition
 Guid="5b875a8a-3354-48d1-8692-eb9629dc8e22"
>Balise.Sequence1 == []
  OR  
FORALL X IN Balise.Sequence1 | 
  (
  Messages.PACKET.TRACK_TO_TRAIN.GetQ_DIR(X.TRACK_TO_TRAIN) != Messages.Q_DIR.Both_directions
   AND 
  Messages.PACKET.TRACK_TO_TRAIN.GetQ_DIR(X.TRACK_TO_TRAIN) != Messages.Q_DIR.Nominal
   AND 
  Messages.PACKET.TRACK_TO_TRAIN.GetQ_DIR(X.TRACK_TO_TRAIN) != Messages.Q_DIR.Reverse
  )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Only info to be used outside of ERTMS/ETCS"
 Guid="0df1de30-0ad5-45c1-abfe-f84fae25312e"
>
<PreConditions>
<PreCondition
 Guid="66a1fed0-37c3-40ab-a96a-abce6764238a"
>Balise.Sequence1 != []
  AND  
FORALL X IN Balise.Sequence1 | Available(X.TRACK_TO_TRAIN.DATA_USED_BY_APPLICATIONS_OUTSIDE_THE_ERTMS_ETCS_SYSTEM)</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Info outside ERTMS/ETCS or valid for both directions"
 Guid="fb6ea15f-32f5-4d40-a680-387c431526ae"
>
<PreConditions>
<PreCondition
 Guid="bb2c4ca9-56a0-411b-889a-f34195e35221"
>Balise.Sequence1 != []
  AND  
FORALL X IN Balise.Sequence1 | 
  (
  Available(X.TRACK_TO_TRAIN.DATA_USED_BY_APPLICATIONS_OUTSIDE_THE_ERTMS_ETCS_SYSTEM)
   OR 
  Messages.PACKET.TRACK_TO_TRAIN.GetQ_DIR(X.TRACK_TO_TRAIN) != Messages.Q_DIR.Both_directions
  )</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Otherwise"
 Guid="3d14782b-0469-4fe8-8f6e-25ccc33ec535"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="StoredBaliseStruct"
 Default=""
 X="370"
 Y="320"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DuplicateBalise"
 Guid="185af630-3a5c-4817-a76e-ed6e4fc4a6cd"
>
<Comment>Provides the duplicating balise.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Balise"
 Guid="cb60f42e-ec5d-4bd1-bf65-7828af051dd5"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Duplicate of the next balise"
 Guid="dd0197e0-8d6a-4de3-8644-0111e1919e32"
>
<PreConditions>
<PreCondition
 Guid="eff994b4-3615-45a8-aa7b-0f8ebe6856c6"
>Balise.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_next_balise__seen_in_the_nominal_direction_of_the_balise_group</PreCondition></PreConditions>
<Expression>FIRST X IN BTM.CurrentBaliseGroup | X.Telegram.N_PIG == Balise.N_PIG + 1</Expression>
</Case><Case
 Name="Duplicate of the previous balise"
 Guid="49c7ee14-4263-4343-a897-558b4e36f7d6"
>
<PreConditions>
<PreCondition
 Guid="fcdc7999-90e2-4d29-adf7-6ce07cd84427"
>Balise.M_DUP == Messages.M_DUP.This_balise_is_a_duplicate_of_the_previous_balise__seen_in_the_nominal_direction_of_the_balise_group</PreCondition></PreConditions>
<Expression>FIRST X IN BTM.CurrentBaliseGroup | X.Telegram.N_PIG == Balise.N_PIG - 1</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.SubStructure1"
 Default=""
 X="370"
 Y="260"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LevelOfTelegram"
 Guid="47d1ae3c-f078-4b9c-8546-ec99aa2eb7fe"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b9ad9e1d-af84-4050-911d-da61b6a7dab1"
>
</ReqRef><ReqRef
 Id="b5196e2e-7094-49d5-ac1b-4bcf4821fd9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bfa8324f-35b7-4d34-be47-4b566324a022"
>
</ReqRef><Comment>Provides the movement authority sent in the balise telegram, if any.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="aTelegram"
 Guid="606dcfbd-d473-4366-b518-8f62001ac86d"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="acfb6c3c-937f-4a13-ba33-761f58569317"
>
<Expression>FIRST X IN aTelegram.Sequence1 | X.TRACK_TO_TRAIN.LEVEL_TRANSITION_ORDER != EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="260"
 Y="500"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="CheckBGMessageConsistency"
 Guid="88aaf483-aa04-46a7-974f-66c8dd153dd9"
>
<ReqRef
 Id="c3e16444-1771-45e4-aed8-a538b89ed2b3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c3972e5-45fd-406e-a142-2a3469b15c2f"
>
</ReqRef><ReqRef
 Id="b0ca9451-479b-42b3-93a6-3c7089a0b7be"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4e71fac0-b4fd-4b34-9e27-8fb8f77881cb"
>
</ReqRef><ReqRef
 Id="2a18f48f-66f4-459f-bda8-f71f367705d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8011d324-d576-423c-b391-1d426ac87186"
>
</ReqRef><Comment>Indicates whether it is necessary to check the contents of the received balise message before handling them.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="LinkingUsed"
 Guid="fd278ff2-3750-418d-9b13-da1f6203adca"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Unlinked balise group"
 Guid="c61f0ab7-0532-40cd-a583-c852c6548283"
>
<PreConditions>
<PreCondition
 Guid="7444adf0-3c4a-4308-9805-1277c005f8d4"
>(FIRST StoredBalise IN BTM.CurrentBaliseGroup).Telegram.Q_LINK == Messages.Q_LINK.Unlinked</PreCondition></PreConditions>
<Expression>Kernel.ActiveFunctions.CheckUnlinkedBGMessage()</Expression>
</Case><Case
 Name="Linking is not used"
 Guid="553054e5-492e-48fb-bae0-5b6dc6f4b5f3"
>
<PreConditions>
<PreCondition
 Guid="61307b7f-b5a3-4a46-a929-a6dfd327cc83"
>NOT LinkingUsed</PreCondition><PreCondition
 Guid="66670e88-fae0-4539-8528-54f5a0e3aa59"
>BTM.Linking.Linkings == []
  OR  
NOT Kernel.ActiveFunctions.CheckLinkingConsistency()</PreCondition></PreConditions>
<Expression>Kernel.ActiveFunctions.CheckBGMessageIfNotLinking()</Expression>
</Case><Case
 Name="Linking is used"
 Guid="92341a32-c3fc-4bf4-97d3-27e83de4241d"
>
<Expression>Kernel.ActiveFunctions.CheckBGMessageIfLinking()</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.Message"
 Default=""
 X="370"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LastReceivedBalise"
 Guid="9ef93e95-2da0-499b-a6c2-0030f99004f7"
>
<Cases>
<Case
 Name="Value"
 Guid="2e6decc7-fdec-435b-b129-84f2dee4f761"
>
<PreConditions>
<PreCondition
 Guid="4c090882-353f-4098-b440-b8c9891dc115"
>CurrentBaliseGroup != []</PreCondition></PreConditions>
<Expression>(LAST X IN BTM.CurrentBaliseGroup).Telegram</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.EUROBALISE.Message"
 Default=""
 X="150"
 Y="260"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdatedReceivedMessage"
 Guid="7d7eed3f-34d0-4860-b21c-d1c2bf916454"
>
<Comment>This function returns the translated version of the received balise message. Note that the BTM struct Message is left unchanged. Returns EMPTY if both SystemVersion are empty.</Comment>
<Parameters>
<Parameter
 Type="Messages.BTM.Message"
 Name="aMessage"
 Guid="9cc39e95-c5d2-4610-bd5e-cc9a4bb97177"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="SystemVersion2"
 Guid="9d81f325-89f9-4d5a-a705-b3cbf9a2bb84"
>
<PreConditions>
<PreCondition
 Guid="e01bb44f-8f18-4f93-b8a3-eb4bdea23f23"
>Available( aMessage.SystemVersion2)</PreCondition></PreConditions>
<Expression>aMessage.SystemVersion2</Expression>
</Case><Case
 Name="SystemVersion1"
 Guid="7962ecd0-6df0-4778-a185-77e6b15e8b77"
>
<PreConditions>
<PreCondition
 Guid="add78aea-b85c-4eb5-9db0-97b08150a845"
>Available(aMessage.SystemVersion1)</PreCondition></PreConditions>
<Expression>VersionManagement.Translation.UpdatedBaliseMessage(aMessage.SystemVersion1)</Expression>
</Case><Case
 Name="Default"
 Guid="467845c9-3e20-4eee-bd0d-abebfcc8f698"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="480"
 Y="80"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RevAreaPacketAvailable"
 Guid="e1c305f1-2233-4bdd-b0a7-f7220d350f40"
>
<Comment>Indicates whether a Reversing Area Information packet is available.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Message"
 Name="aPacket"
 Guid="91b32c95-09fc-462c-8c90-3e708016c9f6"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is not empty"
 Guid="5f593ccb-9b54-4fd9-a6ce-83aa65678fc8"
>
<PreConditions>
<PreCondition
 Guid="e14e7585-37e2-4bea-adeb-fcf857a7fdac"
>aPacket != EMPTY</PreCondition></PreConditions>
<Expression>ConsiderBTMPacket ( PacketOrientation =&gt; aPacket.Q_DIR )
  AND
Kernel.AcceptInformation.ReversingAreaInformation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="128113f1-00a9-4011-b2d9-031940921a40"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="480"
 Y="20"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RevSupPacketAvailable"
 Guid="2d41eb1a-3aca-4e2c-aa04-117a1ba896ae"
>
<Comment>Indicates whether a Reversing Supervision Information packet is available.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Message"
 Name="aPacket"
 Guid="43232690-9816-4ca1-947c-dfb3ba7c55d3"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is not empty"
 Guid="d7b4d836-06d2-49c7-b877-e0c9518838d7"
>
<PreConditions>
<PreCondition
 Guid="aea590da-9233-4091-bdaa-7e129f1a1909"
>aPacket != EMPTY</PreCondition></PreConditions>
<Expression>ConsiderBTMPacket ( PacketOrientation =&gt; aPacket.Q_DIR )
  AND
Kernel.AcceptInformation.ReversingSupervisionInformation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</Expression>
</Case><Case
 Name="Otherwise"
 Guid="6d166964-7ab0-476a-af1d-63ddca1fcd88"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Message"
 Default=""
 X="480"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ProvideRevAreaPacketToHandle"
 Guid="849bf35a-7622-45ba-bf86-281e2aa818a0"
>
<Comment>Given a Reversing Area Information packet, returns this packet if it is available and can be handled and returns EMPTY otherwise.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION.Message"
 Name="aPacket"
 Guid="2c53e7e1-aaef-4da0-b23f-81b73f52cb3d"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is available"
 Guid="8e78f827-b5c7-491a-8b00-32731ca2f936"
>
<PreConditions>
<PreCondition
 Guid="7f2f5be6-a2f3-4bc4-a457-ebe771773c8c"
>RevAreaPacketAvailable( aPacket =&gt; aPacket )</PreCondition></PreConditions>
<Expression>aPacket</Expression>
</Case><Case
 Name="Otherwise"
 Guid="c25c99d4-9ae0-4d79-9ad3-0f4ce1a17553"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function><Function
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Message"
 Default=""
 X="370"
 Y="140"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ProvideRevSupPacketToHandle"
 Guid="becae289-1edb-41fe-babe-b5f1e1e06ed1"
>
<Comment>Given a Reversing Supervision Information packet, returns this packet if it is available and can be handled and returns EMPTY otherwise.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION.Message"
 Name="aPacket"
 Guid="4f1e17e0-eacf-4d74-84a6-711f77b5748a"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="The packet is available"
 Guid="23e02682-1557-4ae3-8164-1c8268cf06ed"
>
<PreConditions>
<PreCondition
 Guid="786ceabc-42e9-40a6-b5d9-f055f8ebd612"
>RevSupPacketAvailable( aPacket =&gt; aPacket )</PreCondition></PreConditions>
<Expression>aPacket</Expression>
</Case><Case
 Name="Otherwise"
 Guid="a179ccb3-80cd-4f31-bd09-739522d2dc78"
>
<Expression>EMPTY</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="930"
 Y="10"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleNewPacket"
 Guid="052d0827-c337-4549-9724-72afe831fafd"
>
<ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7d1a8168-b8bc-4b96-af40-5b9e285f9491"
>
</ReqRef><Comment>This procedure is called for each packet received with a balise telegram.
The relevant procedure is called to store and handle the data contained in the packet.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.SubStructure1"
 Name="Packet"
 Guid="ec46a4f0-3fc0-4db7-9ada-3d3456f83231"
>
</Parameter><Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="ca00b294-0df9-4d9d-9d66-46fbbd6b6b8d"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle new packet"
 Guid="b65b19ff-3968-4c36-8ee8-fc038e0d4821"
>
<ReqRef
 Id="88930fd0-2a41-48f8-ac88-35d8c1d60f47"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b1bac924-6dc6-4d14-bacc-59c1d6247393"
>
</ReqRef><Comment>We suppose that an element of type Messages.EUROBALISE.SubStructure1 can only contain one field defined, representing a single packet. The rule looks for the first available element and when it is found, calls the corresponding routing to store the received information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Linking available"
 Guid="ee5a8bbe-075b-4889-b827-8eb384463824"
>
<ReqRef
 Id="a3ce052d-3ac7-4adb-a97c-c53d647cded7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="729e4e83-d2d2-40f1-8b2e-3414452f81a9"
>
</ReqRef><ReqRef
 Id="4ae178ee-6db4-474c-aa88-d5f8bd8ea1d7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="82c4cc0c-66ea-4a14-b302-490fb733c5a2"
>
</ReqRef><ReqRef
 Id="5e8ed861-509f-4d98-8c04-8bea3a8cd6c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c406e150-d303-4dd6-a853-f797e41df06a"
>
</ReqRef><ReqRef
 Id="4a52b034-1229-440d-b33c-bd9b65c26dab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e5f46219-8aa8-4efb-909f-5049863aff96"
>
</ReqRef><ReqRef
 Id="0d145136-9c1d-4c04-bd9a-5987931ed765"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c2cd562b-ed41-4e52-aaf4-21994a871464"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="675acaac-123e-4d0b-84dc-67359475d56f"
>
</ReqRef><Comment>Handles linking packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="740ed4a7-b7cc-46f8-b0c9-dd3a37c4a2c5"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LINKING.Q_DIR )</PreCondition><PreCondition
 Guid="04ae732a-d2f6-421d-8ffe-17d22831641d"
>Kernel.AcceptInformation.Linking( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="250427e6-8ddb-431d-a76d-b4432281374f"
>Linking.LinkingProfileReceived(
    Packet =&gt; Packet.TRACK_TO_TRAIN.LINKING,
    aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation()
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="National Values available"
 Guid="4574cd3f-8492-4e0c-a1d8-c04d2324f265"
>
<ReqRef
 Id="766f0274-5b6e-4050-a48d-226dccf68782"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8e7814fa-2ca8-4150-ac0f-0e8939d52c32"
>
</ReqRef><ReqRef
 Id="967fe971-b137-4079-b900-5f6c1f5f25ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ba4ae04f-33e3-467c-86c7-c8b361bb570f"
>
</ReqRef><ReqRef
 Id="da594ef9-d8e9-4553-af3e-77f9102ec171"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="459bf5f8-2273-40d3-8549-3b6d58b7dfd5"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="41106ae2-f7bb-4465-b932-78232dc6e469"
>
</ReqRef><Comment>Handles National Values packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="5ba39e2d-0d86-4404-b853-53b808070955"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.NATIONAL_VALUES.Q_DIR )</PreCondition><PreCondition
 Guid="6f2ee328-827c-4fb1-93da-3d55a15e4fb4"
>Kernel.AcceptInformation.NationalValues( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2719277d-f12f-479c-8278-abb173a2d862"
>Kernel.NationalValues.NationalValuesReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.NATIONAL_VALUES, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Repositioning Information available"
 Guid="36a11ebc-d5b0-4502-aa98-6972b7158392"
>
<ReqRef
 Id="d68a643a-2faa-429a-a1d6-2724d7c3ccbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="165c9b40-d9d0-4661-8b16-be10960d7c80"
>
</ReqRef><ReqRef
 Id="62aa6f8e-f444-4ed1-90b7-43dc64aa7594"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="680a4c3b-fd19-4bd8-8d77-e450c704f254"
>
</ReqRef><ReqRef
 Id="08e951b3-e2c5-45bd-a768-68580e2d4307"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a5c4a18-a8d3-4e4a-ae6b-b79ef9b41293"
>
</ReqRef><ReqRef
 Id="c786d14c-c637-4877-8d02-28ce94f66515"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84d2f221-ed2d-4ef1-99f7-9074ef84cb68"
>
</ReqRef><Comment>Handles Repositioning information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="a5ae63f6-8d36-44a3-bbd2-212a49b20d81"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION.Q_DIR )</PreCondition><PreCondition
 Guid="d86ad34c-f29d-4680-8d17-fef9ba598939"
>BTM.Linking.CurrentLinking().BaliseGroupIdentifier == Messages.NID_BG.NID_UNKNOWN</PreCondition><PreCondition
 Guid="0fa33894-ee64-4a71-b7fb-662d079bb38b"
>Kernel.AcceptInformation.RepositioningInformation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="11ff0426-7369-4b98-8ea9-b7674aadda0c"
>Kernel.MA.RepositioningInformationReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.REPOSITIONING_INFORMATION, DistanceToBG =&gt; BTM.Linking.CurrentLinking().Distance )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Gradient Profile available"
 Guid="572ec7e7-dce1-4a08-a6ff-898d9b85f56e"
>
<ReqRef
 Id="d96e7170-b578-4e28-bb03-82d0b7cc6a6d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="90795abf-dac5-4a23-9b9c-c4065f08767c"
>
</ReqRef><ReqRef
 Id="e1e59e57-94a5-48ea-bb40-d183aa229e20"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fb123abf-ec1e-4c1a-9985-29a01e88bcd9"
>
</ReqRef><ReqRef
 Id="91c896f9-c3d0-473b-bb99-e2dfb219ae1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a423c1f2-fcdf-4a40-9abb-3af782c6c62e"
>
</ReqRef><ReqRef
 Id="4396f131-3dd7-4601-be15-b4827d98bf32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="13228851-bc2a-4830-9cf6-001dedbf6e09"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ad164c1d-031a-45b3-8d55-1b347bac98e9"
>
</ReqRef><Comment>Handles Gradient packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="707ec8bf-fadd-4254-9e70-04791d061d52"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.GRADIENT_PROFILE.Q_DIR )</PreCondition><PreCondition
 Guid="95f2c2bb-dbf6-41e8-ad9c-017f485637c0"
>Kernel.AcceptInformation.GradientProfile( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f8e04781-7b14-4460-bedf-dfcad86bfaf6"
>Kernel.TrackDescription.Gradient.GradientProfileReceived(
    Packet =&gt; Packet.TRACK_TO_TRAIN.GRADIENT_PROFILE,
    aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation()
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="International Static Speed Profile available"
 Guid="9b996a70-75ee-44f8-83f1-dcd1bfa4cd70"
>
<ReqRef
 Id="7ba0f65c-e1b5-422f-a1fb-e947e73cd4f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fba3ed3b-43f9-4a7e-ae85-1d0035c7ec8c"
>
</ReqRef><ReqRef
 Id="beb70c99-c336-489a-a97e-b8236a026061"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="280e64b2-2408-4b00-b8ac-5b047b36e0ba"
>
</ReqRef><ReqRef
 Id="9570bc20-fe09-49cb-8e1d-d7adbb5fdfbc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d3dcf489-908e-4a6e-9dd8-2675337864fa"
>
</ReqRef><ReqRef
 Id="9e0c6d45-0f4a-482d-9a28-dbe1f41746ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="146aa7d5-90c2-4351-a2b0-7c02ff13fb23"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d692c91a-a341-4ea3-8748-20fa453e76cf"
>
</ReqRef><Comment>Handles Static Speed Profile packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="f883aba6-4c27-4a72-b986-d0388d7577cd"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.Q_DIR )</PreCondition><PreCondition
 Guid="0a981d98-4459-449e-8252-0b98745e8cb8"
>Kernel.AcceptInformation.InternationalSSP( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e20f018d-a037-46f0-a3ad-a27b7eb1d05f"
>Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Change of traction system available"
 Guid="fc4e8dd5-7ad3-4fd2-b44a-13afc089db60"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1d812680-2c70-4fbf-a7a5-33665bb908ad"
>
</ReqRef><ReqRef
 Id="2559c745-3a6f-444a-b3bd-fb143a2a1fc6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e664de52-c95e-45a0-8e42-e3bbcb3d67a1"
>
</ReqRef><ReqRef
 Id="9221690b-b0bc-4a5c-9307-9de49243cfef"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e26a34c-60d6-4a61-b9ea-9147b49412f4"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d645e84f-c87d-4359-ba28-bae5edf05206"
>
</ReqRef><Comment>Handles Track Condition Change of Traction System packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="08e11111-2014-42e6-98f6-54a7fe1b3c8e"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM.Q_DIR )</PreCondition><PreCondition
 Guid="9fda324c-48ab-40d4-a6c3-a266822c2cb5"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0720e95d-207d-40f6-9fb3-40fbbf1628f7"
>Kernel.TrackDescription.TrackConditions.TractionSystems.HandleTractionSystemProfile(
    Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_TRACTION_SYSTEM, 
    aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Change of allowed current consumption available"
 Guid="8448c5a5-bbd8-48f5-ae84-e1b63f672c7d"
>
<ReqRef
 Id="3b292c0a-1360-49a7-9047-9707757f6e7b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="190fb223-2c21-4e2f-abdd-bca79a7608e4"
>
</ReqRef><ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="47ea4e15-5a4d-4581-b3fa-17ea4b4ab0fa"
>
</ReqRef><ReqRef
 Id="526da681-fc2c-4e56-908e-7d41f5632d7e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fdc21444-3601-465f-bb86-965441d7340d"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7ba7ed8b-ca2d-425b-a7e1-1c6ff3513492"
>
</ReqRef><Comment>Handles Track Condition Change of allowed current consumption packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="2ae476f8-85fe-405e-9228-8e0cf7bf9516"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION.Q_DIR )</PreCondition><PreCondition
 Guid="e320cf30-ddc4-4568-94c4-370dc6fac3e0"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f3afa4bc-a50e-4fbb-818c-4f503b306e90"
>Kernel.TrackDescription.TrackConditions.CurrentConsumption.HandleCCTrackConditionProfile( Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_CHANGE_OF_ALLOWED_CURRENT_CONSUMPTION, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation())</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Session Management available"
 Guid="68003d12-e6dc-4138-a684-695bf74a4f41"
>
<ReqRef
 Id="ff45f18e-7a7b-412e-8847-569b6605d632"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93a3b5b2-7382-44ed-90cc-739df63b7fb8"
>
</ReqRef><ReqRef
 Id="af0db000-6b09-4a25-b01b-439fa27cbc6a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f525ce1-f6fd-45db-a9bc-14e85abac630"
>
</ReqRef><ReqRef
 Id="18318a83-420a-41a7-b3eb-e4e67f1e3f97"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="551dbd77-2393-41c7-9fed-40126a123a95"
>
</ReqRef><Comment>Handles Session Management packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e5602e17-2393-423c-b397-89dcba576dcf"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.SESSION_MANAGEMENT.Q_DIR )</PreCondition><PreCondition
 Guid="26169b37-911f-4e40-9127-f2f5a4805ea3"
>Kernel.AcceptInformation.SessionManagement( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8e4e8741-f67b-46ff-a5e6-fcfa1ce7192f"
>EURORADIO.TracksideOrderedSessionReceived(Packet.TRACK_TO_TRAIN.SESSION_MANAGEMENT)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Radio Network registration available"
 Guid="2b59e652-a400-4d6a-89c2-e13efd458d81"
>
<ReqRef
 Id="6476afb5-0645-4298-926a-e67147752ddf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b32c1d05-cb39-483f-8534-e688a9e7a3f4"
>
</ReqRef><ReqRef
 Id="031d12f5-b1df-4716-9eda-a3495861e160"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5aaf0fc4-3913-45e1-ad04-f0030332d4b7"
>
</ReqRef><ReqRef
 Id="da86aaf7-6b30-4a15-b59d-37e639bcdfc8"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e4041e40-e667-4343-ba04-8dda9ee940ec"
>
</ReqRef><Comment>Handles Radio Network registration packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7dde0488-8df7-418d-95ee-21082e23dfa7"
>ConsiderBTMPacket ( PacketOrientation=&gt;Packet.TRACK_TO_TRAIN.RADIO_NETWORK_REGISTRATION.Q_DIR )</PreCondition><PreCondition
 Guid="080e884b-999a-43f0-91f0-7d8e8a6b11ec"
>Kernel.AcceptInformation.RadioNetworkRegistration( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="29555d56-e93d-4b03-bcd8-cd57ddaba9f7"
>EURORADIO.RadioNetworkRegistrationReceived ( aPacket=&gt;Packet.TRACK_TO_TRAIN.RADIO_NETWORK_REGISTRATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Conditional Level Transition Order available"
 Guid="0d362c8e-af10-4435-ab72-0549d5138943"
>
<ReqRef
 Id="51ddbc44-360a-4339-9b7c-fc91347a5da2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0bc128a5-192b-44fe-9d95-5b1cb7d5232d"
>
</ReqRef><ReqRef
 Id="377cc4cc-52bc-4bc6-8489-759a13078b63"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f8f13fbe-4d40-49a7-8358-0d5681997ea5"
>
</ReqRef><Comment>Handles Conditionan Level Transition Order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7d08f93b-f3cf-41fe-8d7c-ded1a543e64d"
>ConsiderBTMPacket ( PacketOrientation=&gt;Packet.TRACK_TO_TRAIN.CONDITIONAL_LEVEL_TRANSITION_ORDER.Q_DIR )</PreCondition><PreCondition
 Guid="d97dda75-aa31-4a67-9b83-9d5f0812eda4"
>Kernel.AcceptInformation.ConditionalLevelTransitionOrder( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="edbec74c-90c8-4666-8493-c72753b8e924"
>Kernel.LevelTransition.CLTOReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.CONDITIONAL_LEVEL_TRANSITION_ORDER )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="List of balises for SH Area available"
 Guid="288c4793-5378-4958-85b2-98e5600ac740"
>
<ReqRef
 Id="e6b9b34b-5183-45ec-96a2-8eef4909b34c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="600fda9b-e497-4e8f-9fb6-1e61e86a9f9a"
>
</ReqRef><ReqRef
 Id="d52b6935-7a67-4676-ae5b-0c905452c8d3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c48f8f17-8039-45f7-a699-bc4853b11bff"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a568580-fa87-49d8-b5e4-9e8cecf335c4"
>
</ReqRef><ReqRef
 Id="e915fc9d-2b27-4f90-b3bb-ca784a55e1ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b2295954-b470-48cc-93e3-fcab64350d27"
>
</ReqRef><Comment>Handles List of Balises for SH packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="90ab8949-4dbb-4fdc-973b-d6f4b75d9912"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.Q_DIR )</PreCondition><PreCondition
 Guid="3b824ad9-a3ef-452b-a33e-98f9852625f0"
>Kernel.AcceptInformation.MovementAuthority( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2906dae6-d0c9-4e48-a5e0-1fea924865a0"
>Kernel.Modes.Shunting.HandleNewListOfBaliseGroups ( Packet =&gt; Packet.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Axle Load Speed Profile available"
 Guid="f7984559-8457-4272-977c-a4c77df06487"
>
<ReqRef
 Id="0bc77f7e-62ac-42cc-bf02-051522a4d11a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a2bfd9db-c889-4bf3-91e1-b1a74acca3ed"
>
</ReqRef><ReqRef
 Id="6a6eebd7-7178-4712-b7fa-135df10c5a4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3741a9bd-7bad-48fa-af4e-6a49ba8b3035"
>
</ReqRef><ReqRef
 Id="a3345820-31df-4b78-835f-d02b8d42d3bc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fd48f242-0f6e-42c2-b2b6-a5833d9a5635"
>
</ReqRef><ReqRef
 Id="9e4cc30b-7c23-4202-aa4b-87839eea29a1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9a846ead-4f95-4e27-b0f7-c1ccbbf3590f"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dca6b8bc-0668-448b-ab1b-00b3411d6eeb"
>
</ReqRef><Comment>Handles Axle Load packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7e4e2969-37b5-42c9-be79-a5cabaec81d7"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.Q_DIR )</PreCondition><PreCondition
 Guid="0850e212-45c4-447c-ae3b-a10a6ccc2731"
>Kernel.AcceptInformation.AxleLoadSpeedProfile( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d6ca9514-566f-4887-a3f1-0764c122aa72"
>Kernel.TrackDescription.AxleLoad.AxleLoadProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Permitted Braking Distance Information available"
 Guid="d158b9d7-ea35-4ceb-ad40-fa4b692c4efc"
>
<ReqRef
 Id="0c087a57-86f8-4190-81b9-2698efc3cc18"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c249119-30cc-445b-a862-da63a45c9756"
>
</ReqRef><ReqRef
 Id="18e66d36-7f79-47c5-92e4-d8b744a4513d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92aebd50-1d64-45fc-8a8d-d2468bcdccde"
>
</ReqRef><ReqRef
 Id="1b02a3e8-5313-4a1e-8209-c203e96ab40f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d50e4849-9617-4801-84b7-431e4ada478b"
>
</ReqRef><ReqRef
 Id="faca2edb-7220-4d55-bebe-f367d8f8d94a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bc21fce-7dbe-4d3a-a50f-35eb553ae092"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="04ea5d44-6161-49fd-b0bd-95c13ce9e23c"
>
</ReqRef><Comment>Handles Permitted Braking Distance Information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="ce7592d3-5d36-42a6-a430-0f02f26d87b3"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.PERMITTED_BRAKING_DISTANCE_INFORMATION.Q_DIR )</PreCondition><PreCondition
 Guid="63b17e86-0a51-4eea-820f-70178c39402a"
>Kernel.AcceptInformation.PermittedBrakingDistanceInformation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a7bf6d39-8ef9-4f76-b5e1-4b42aae162ea"
>Kernel.TrackDescription.PermittedBrakingDistance.PermittedBrakingDistanceProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.PERMITTED_BRAKING_DISTANCE_INFORMATION, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction available"
 Guid="a9e0a232-d628-4b76-8f04-dcb40810f997"
>
<ReqRef
 Id="0ef0898e-cf23-489a-a1ec-efefda2bff98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="debfab3a-faab-46ce-ba90-55530b2190c9"
>
</ReqRef><ReqRef
 Id="37cb1c8d-6ea0-43c6-85a9-6ce724bf590e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac60629c-9a25-4729-a760-e04a89fcd270"
>
</ReqRef><ReqRef
 Id="2d4205fe-a62e-4306-88c0-fa8ed50b9d93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7586b6bb-6cfb-456b-bb84-4b9c27e74646"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3004849e-c559-48e4-bd07-56f1fac10ac3"
>
</ReqRef><Comment>Handles Temporary Speed Restriction packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="695bdf97-2135-4805-808a-b6281c1da123"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Q_DIR )</PreCondition><PreCondition
 Guid="f7f0dee3-8164-4d11-996e-7a7ec24af01f"
>Kernel.AcceptInformation.TemporarySpeedRestriction
(
  Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup,
  NID_TSR =&gt; Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.NID_TSR
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c77c6a04-53bc-449e-b9d8-d1ccaa963ef5"
>Kernel.TSR.TemporarySpeedRestrictionsProfileReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Temporary Speed Restriction Revocation available"
 Guid="ce66e060-6753-4da8-b589-9d445416c640"
>
<ReqRef
 Id="1c1c2dc5-c171-456d-9a54-a4480effe5a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="984372ba-6c35-4d69-b98e-ec62f161d139"
>
</ReqRef><ReqRef
 Id="fcf6574b-fd16-4246-81d9-07cda44db502"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="80044d87-8774-474a-9c14-55493631c929"
>
</ReqRef><ReqRef
 Id="a12cbea0-bfe5-4f24-ae74-56261d93466b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="eb900dcb-c1ed-45fd-8fdc-4a0ba23f0acb"
>
</ReqRef><Comment>Handes Temporary Speed Restriction Revocation packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="673297fe-8eba-443e-93e0-6cde374acf93"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION_REVOCATION.Q_DIR )</PreCondition><PreCondition
 Guid="4889cb99-67ac-476c-ac67-96baed35877f"
>Kernel.AcceptInformation.TemporarySpeedRestrictionRevocation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e619da6c-cc31-4f62-be09-57e9632df39f"
>Kernel.TSR.TemporarySpeedRestrictionRevocationReceived ( Packet=&gt;Packet.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION_REVOCATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Big Metal Masses available"
 Guid="ced1a7db-bddb-4b6e-9e46-0ea249622bfd"
>
<ReqRef
 Id="a013028b-ded7-4e9f-9521-43654f2cb992"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d9fb7cb1-8637-4910-8436-7ce771958686"
>
</ReqRef><ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="551e1e38-b27e-4697-9dcc-60e0b422a7d6"
>
</ReqRef><ReqRef
 Id="32b93913-0b12-48e8-8867-1fabfb0ae322"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a944689a-9002-41e3-bb3c-13734be82b5c"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c465f4c6-dd9e-4e2b-8036-a00e17534e81"
>
</ReqRef><Comment>Handles Track Condition Big Metal Masses packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="a21202a1-5f8b-4294-a6a7-80d366dcaf78"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_BIG_METAL_MASSES.Q_DIR )</PreCondition><PreCondition
 Guid="cca34d29-a193-4757-b982-b2b39d7a641d"
>Kernel.AcceptInformation.TrackConditionsBigMetalMasses( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a8168c14-8dea-4896-9b29-5f71ec706278"
>Kernel.TrackDescription.TrackConditions.BigMetalMasses.HandleBMMTrackConditionProfile( Packet.TRACK_TO_TRAIN.TRACK_CONDITION_BIG_METAL_MASSES, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition available"
 Guid="288dd8f6-b8e0-484e-b5d9-84abc3b56c83"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9590434-0ba2-4393-9a3d-2d85419aa7f0"
>
</ReqRef><ReqRef
 Id="ee609856-411d-4bb2-ab88-76b574aa3013"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c221cd2-82c8-4ea7-932b-460c26f2c972"
>
</ReqRef><ReqRef
 Id="46ff0663-ed84-4dea-af46-b87941a77c51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c81bae62-b211-4262-abf9-f2e877c51023"
>
</ReqRef><ReqRef
 Id="9eb67bec-5e3a-407d-8b6e-e3d49d57e883"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ddcb67aa-989d-4464-87fa-f13ebb021a8b"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5f326508-7a58-433b-a1c0-7d1d5cd9ac10"
>
</ReqRef><Comment>Handles Track Condition packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="0d34e791-f010-453b-b97f-105cc27ebddb"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION.Q_DIR )</PreCondition><PreCondition
 Guid="8f322232-1723-481f-85d9-b14c2fde161e"
>Kernel.AcceptInformation.TrackConditionsIncludingSpecialCases( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b347e32c-19e6-4ec5-8505-a3bae2deeed2"
>Kernel.TrackDescription.TrackConditions.General.TrackConditionProfileReceived( Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Condition Station Platforms available"
 Guid="848f07ff-38f9-43db-a24b-426c19fd0b9f"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="86fe59f8-52b0-4db0-ac6a-f2b2dc6a5150"
>
</ReqRef><ReqRef
 Id="47c59e98-996c-4daa-84b7-bda20f4e45ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fda02217-3575-4818-8aa9-e47e3ef07114"
>
</ReqRef><ReqRef
 Id="0be2ea06-0c8b-4622-9a32-bd8954c01555"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e1f6383c-4c01-438c-a0ac-2d720dcd42c1"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2b9cdbfd-6403-4fdb-b2ae-100e777439b8"
>
</ReqRef><Comment>Handles Track Condition Station Platforms packet, if available</Comment>
<PreConditions>
<PreCondition
 Guid="c3cf8574-ecaa-4d54-b4cf-cc3262950012"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_STATION_PLATFORMS.Q_DIR )</PreCondition><PreCondition
 Guid="7f7b7b5a-c73f-4577-a4be-fd53a96683e6"
>Kernel.AcceptInformation.TrackConditionsExcludingSpecialCases( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e37299ce-6e60-4015-9897-e33c8b3ca56c"
>Kernel.TrackDescription.TrackConditions.StationPlatform.SPTrackConditionProfileReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.TRACK_CONDITION_STATION_PLATFORMS, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation())</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Route Suitability Data available"
 Guid="44902d7c-8bf5-4dc5-bae9-be190af0d975"
>
<ReqRef
 Id="3eae43ab-6f26-4908-9360-5a8ce0bec069"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d07142e7-5480-42ec-845a-0f490543849f"
>
</ReqRef><ReqRef
 Id="352086ee-e08d-456c-a884-d2ee94aec4e9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="783c6e19-ecb4-43e6-aa0f-e67c79e1b870"
>
</ReqRef><ReqRef
 Id="655cd82d-364d-40cf-9540-62e1d8292f94"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d30b80de-ed78-424d-b01f-acd191b04430"
>
</ReqRef><ReqRef
 Id="21443e68-000d-4c84-b4f4-17c5373d0a4e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b54a6043-dcde-4532-aef6-ee05ecce933b"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dc8b01db-2e34-4ff0-adb2-73a51ef3ae5b"
>
</ReqRef><Comment>Handles Route Suitability packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="41f1baa5-c1ed-48ea-91a9-de8a5b5fbaef"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.ROUTE_SUITABILITY_DATA.Q_DIR )</PreCondition><PreCondition
 Guid="bf657fe9-3da3-47c9-a5c1-642d726973e4"
>Kernel.AcceptInformation.RouteSuitabilityData( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="17d0d98e-1746-417e-b3d1-a0409a79647c"
>Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfileReceived ( Packet.TRACK_TO_TRAIN.ROUTE_SUITABILITY_DATA, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Plain text message available"
 Guid="ddb5d31a-d42a-4f09-8e82-268f192f63d0"
>
<ReqRef
 Id="cc1f66d4-6eec-4fe4-a302-2e6287ccb3f0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb6397f1-eaa3-49b2-b6c1-bca940170c53"
>
</ReqRef><ReqRef
 Id="c3338b70-b8f1-4525-ae95-a94e1b92981b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c41b327b-3426-4505-8aea-0fda63d12f3d"
>
</ReqRef><ReqRef
 Id="13227255-d959-4724-9371-31427e4538a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="643e7b8b-78b4-4ea4-82fe-b560d0cc0bd1"
>
</ReqRef><ReqRef
 Id="2b4cc227-208a-49c5-8f4c-a566e7eac74b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="885582da-e304-43fe-987a-6e05289ee108"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6fb7ee4f-8ecc-432c-b53f-8871bb7b1493"
>
</ReqRef><Comment>Handles plain text message packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="d8ba5bcd-8223-429d-8277-f448777e729d"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES.Q_DIR )</PreCondition><PreCondition
 Guid="4f7c7fe6-236a-4386-aea5-ac1f82161f3a"
>Kernel.AcceptInformation.PlainTextInformation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="7713bd12-2bc6-49fa-ab02-d4c7ff500cb1"
>Kernel.TextMessages.PlainTextMessageReceived( aPacket =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_PLAIN_TEXT_MESSAGES, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Fixed text message available"
 Guid="b6057604-414a-41d3-832f-b7d12d856cab"
>
<ReqRef
 Id="85fef952-5e74-4514-b7d4-1c70f23587c0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="acc0c4a9-782b-4c2b-bb9e-bab94186c287"
>
</ReqRef><ReqRef
 Id="c3338b70-b8f1-4525-ae95-a94e1b92981b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="02d12123-9562-4dda-a3f9-6397a02aedaa"
>
</ReqRef><ReqRef
 Id="13227255-d959-4724-9371-31427e4538a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="97136d4f-6d25-4064-af7a-d1aa768083b2"
>
</ReqRef><ReqRef
 Id="52943307-1c06-4cc3-94d3-f778ce8dd8d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4bf50b4c-52b0-4da2-800c-2b9bef9e3258"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6281d087-992c-4f9c-94fd-b93ee85d03c9"
>
</ReqRef><Comment>Handles fixed text message packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="cfc39b91-6fff-4355-b014-54bb786fdf6d"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES.Q_DIR )</PreCondition><PreCondition
 Guid="1dc85993-5040-4605-bb00-d6e220f6c2dd"
>Kernel.AcceptInformation.FixedTextInformation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1db0e5a3-813a-47ec-82c2-e6aa26ebb770"
>Kernel.TextMessages.FixedTextMessageReceived( aPacket =&gt; Packet.TRACK_TO_TRAIN.PACKET_FOR_SENDING_FIXED_TEXT_MESSAGES, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Adhesion factor available"
 Guid="d5642e3e-304c-4468-91e2-996697f57585"
>
<ReqRef
 Id="edb711e6-2b8c-4c00-88b8-563ee23ec94b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10b3393f-d736-4af5-baa4-8d492566e0a0"
>
</ReqRef><ReqRef
 Id="115b09d2-66f8-4553-9085-6484d37ec385"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fcd09a16-ff2b-4fd8-8a5f-9398280995f4"
>
</ReqRef><ReqRef
 Id="f83a7563-dcc4-4041-8201-a5d79f86a5c0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7dc9c887-3bad-458b-8366-67c48f7f9747"
>
</ReqRef><ReqRef
 Id="ed2472a1-ec6f-4b94-b43e-a0b17ee7080c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cbdfafe3-98a1-4e46-87df-3e4056d65c43"
>
</ReqRef><ReqRef
 Id="7ee3b877-7ff2-4541-aa86-6af70c0cb7c6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03a19c5e-5b39-4b5f-9eb0-7f9546959a7b"
>
</ReqRef><ReqRef
 Id="903134a0-7b20-4b2e-ab42-30cae27fea81"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="72df286c-b028-4f29-be77-e201172cc4a5"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9b3dbfb9-ce69-4147-99ce-c77c38d3a2d1"
>
</ReqRef><Comment>Handles Adhesion Factor packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="3df15a50-e4cd-4343-8a41-cb8d3cec0b37"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.ADHESION_FACTOR.Q_DIR )</PreCondition><PreCondition
 Guid="5a708ddb-07ae-4860-89ce-d0747b1ab121"
>Kernel.AcceptInformation.AdhesionFactor( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="962f5801-f0a9-42c3-a4c0-6ea2c50f0797"
>Kernel.TrackDescription.AdhesionFactors.AdhesionFactorReceived ( Packet.TRACK_TO_TRAIN.ADHESION_FACTOR, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Geographical Position Information available"
 Guid="58f36235-339e-4d9e-a330-534564370838"
>
<ReqRef
 Id="bfb92914-1319-4a13-bb8f-c623e5f7e53a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b847fa2e-92db-443a-878c-7e801b35892a"
>
</ReqRef><ReqRef
 Id="16e1df6b-c27b-4c82-8dcf-37b394753241"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18d0aefc-97f4-4a87-99ea-513e747f15ef"
>
</ReqRef><ReqRef
 Id="3f471e44-8594-4731-ba67-b7173dc06106"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f536e705-bca2-45fb-a91f-bf477c1ef940"
>
</ReqRef><Comment>Handles Geographical Position packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e7d4f283-e559-4695-af6d-3d536bd9b26f"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.GEOGRAPHICAL_POSITION_INFORMATION.Q_DIR )</PreCondition><PreCondition
 Guid="132a1d5d-1ce0-4c2a-a4de-f9c2704da604"
>Kernel.AcceptInformation.GeographicalPosition( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1c876aff-a87a-4254-9bd2-29322f74ea4b"
>Kernel.GeographicalPosition.GeographicalPositionReceived ( aPacket=&gt; Packet.TRACK_TO_TRAIN.GEOGRAPHICAL_POSITION_INFORMATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level Crossing information available"
 Guid="3ca382d8-714f-4601-a04e-5e6340ece1bb"
>
<ReqRef
 Id="0f039a3b-873b-484c-913f-292a6031b162"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dd858604-cb55-4252-87a2-7a1b27172996"
>
</ReqRef><ReqRef
 Id="8a060a51-4b93-4eb7-aa9b-5b5c264b6820"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed90fe7b-8bf5-48ae-9e67-71af60a9e0cc"
>
</ReqRef><ReqRef
 Id="4744429f-fce3-4833-817a-c0cd74ffcd7f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9e8d51c7-a816-47a4-bebb-7b8c472c39a6"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="503c19d5-7218-4650-b01e-cfd61b0975e7"
>
</ReqRef><Comment>Handles Level Crossing packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e44772b8-5ec5-4de6-9609-3ddde969f874"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LEVEL_CROSSING_INFORMATION.Q_DIR )</PreCondition><PreCondition
 Guid="8daf8ed5-ae52-4f28-8c1f-9db08ae5c8ad"
>Kernel.AcceptInformation.LevelCrossingInformation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )
  OR
True</PreCondition></PreConditions>
<Actions>
<Action
 Guid="961a9459-5891-48f0-8de2-eddc845ec82f"
>Kernel.LX.LXReceived ( Packet =&gt; Packet.TRACK_TO_TRAIN.LEVEL_CROSSING_INFORMATION, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Track Ahead Free up to level 2/3 transition location available"
 Guid="3e1e35c2-8ca1-4ddf-82d7-0e25d78a10e7"
>
<ReqRef
 Id="864033cc-a0bd-4284-9de8-2572cad9faf5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="66f64433-ce22-4bbb-8377-14fa4c38c76d"
>
</ReqRef><ReqRef
 Id="a5cab7d5-9533-4bee-9cb2-2fb89da811cd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8acbd76e-5078-4625-8fcd-fcd98f750c4d"
>
</ReqRef><ReqRef
 Id="7ae2241b-9a89-4829-8cca-c5d8339cd425"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1ae791f7-4e57-44fb-a86b-69cbe6b14168"
>
</ReqRef><Comment>Handles Track Ahead Free up to lebel 2/3 transition location packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="09dc7e93-e179-44cf-a996-1512cd99d929"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.TRACK_AHEAD_FREE_UP_TO_LEVEL_2_3_TRANSITION_LOCATION.Q_DIR )</PreCondition><PreCondition
 Guid="9e67ba68-22f6-4e7c-a781-e7f5dc5f343d"
>Kernel.AcceptInformation.TrackAheadFreeUpToLevel2_3TransitionLocation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Send MA request"
 Guid="f9d974f9-1e11-40b0-a44b-d38c1c34fa97"
>
<ReqRef
 Id="0ee0129e-1504-4c7f-ab04-b8c8d596fe5a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="727358ea-e3d6-4107-ad07-3f703ee3b577"
>
</ReqRef><ReqRef
 Id="4443416b-4b5b-4896-a845-222b762d3950"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="42371c33-8091-4e62-9d37-57c8b350b245"
>
</ReqRef><ReqRef
 Id="cf6c6b17-27a3-476b-8db5-eab7f0aceb1e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b4154eed-f979-4136-9fd7-3f0c1d8ad63d"
>
</ReqRef><ReqRef
 Id="f119af99-2c5a-4a79-9d1f-bad360c248ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="965a9ebf-3ad0-4a94-9737-67d7db918c60"
>
</ReqRef><Comment>In level 0,1,NTC: if a level 2/3 transition is announced and a communication session is already established, an MA request is sent to the RBC.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send MA request"
 Guid="d9afa2e8-bc08-487a-b28e-cc0c9370afb6"
>
<PreConditions>
<PreCondition
 Guid="e9f7503a-a201-4ce0-be40-99cef91b92ba"
>EURORADIO.HasActiveSession()</PreCondition><PreCondition
 Guid="afc8b3ae-0a5f-413b-a613-0d8145a1c32f"
>Kernel.LevelTransition.LevelTransitionToProcess != EMPTY
  AND
  Kernel.LevelTransition.LevelTransitionToProcess.TRLevel.Value in [LevelEnum.L2, LevelEnum.L3]</PreCondition><PreCondition
 Guid="9f677cc3-085c-4916-af03-783e04349ffc"
>Kernel.Level.Value.Value in [LevelEnum.L0, LevelEnum.L1, LevelEnum.L2]</PreCondition><PreCondition
 Guid="ee018937-eccf-4494-9c69-0260e6686b07"
>Kernel.ActiveFunctions.RequestMA_TrackAheadFreeUpToL2_3()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8b6b13bc-da05-493a-8895-bd58979b488e"
>EURORADIO.CurrentRBCConnection().SendMARequest
(
    aReason =&gt; Messages.Q_MARQSTREASON.TAF_up_to_level_2_3_transition_location,
    aPacket =&gt; Messages.PACKET.TRAIN_TO_TRACK.LEVEL_2_3_TRANSITION_INFORMATION.Message
    {
        NID_PACKET =&gt; 9,
        NID_LTRBG =&gt; Packet.TRACK_TO_TRAIN.TRACK_AHEAD_FREE_UP_TO_LEVEL_2_3_TRANSITION_LOCATION.NID_BG
    }
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="RBC Transition Order available"
 Guid="70731a0e-ba5f-484f-a027-c4d09e290b80"
>
<ReqRef
 Id="277de94f-c4cd-4612-97ca-ead1fdd29073"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1bc2eb0c-ef5d-4f83-9cb0-c80ca1ee51b0"
>
</ReqRef><ReqRef
 Id="f69899f9-70f7-4f0e-bc95-d9d97964dc81"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a4dd1bba-b81d-4621-b98b-0832708d52cf"
>
</ReqRef><ReqRef
 Id="813504ec-6af8-4d96-be72-5e3b6b595a0a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bfd9533a-7171-4d80-8b95-5dc0b2eb2741"
>
</ReqRef><ReqRef
 Id="fb5cdb2c-826a-4be7-babf-d16c11e9720c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d9017d87-989b-4dcc-a391-96224434351b"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74ba226f-d312-4f1a-bfec-9a7f9fef906c"
>
</ReqRef><Comment>Handles RBC Transition order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="61f518c1-008f-4e7d-ac92-f0ede5ce7df0"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.RBC_TRANSITION_ORDER.Q_DIR )</PreCondition><PreCondition
 Guid="d37ce7be-6772-4045-a266-ec125aa50d15"
>Kernel.AcceptInformation.RBCTransitionOrder( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="05bdf5ca-1d21-43e2-bb2e-7ef9acba75c3"
>EURORADIO.RBCTransitionOrderReceived ( aPacket =&gt;Packet.TRACK_TO_TRAIN.RBC_TRANSITION_ORDER, aDistanceFromRef  =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation())</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Danger for Shunting Information available"
 Guid="e8ccf594-23b3-4744-b15f-c4b35864e52f"
>
<ReqRef
 Id="7fc85086-374e-4ffb-8cf2-1b9f49820e19"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="15a6020a-063d-4e4b-9cff-bf13e794d102"
>
</ReqRef><ReqRef
 Id="48f89af6-963e-401c-b92f-a9358f6df7a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbaee891-2543-4787-a0ff-b5e598fb457b"
>
</ReqRef><ReqRef
 Id="d932cea7-ce9f-4909-afff-2c36046cea2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="af8bc229-2270-4e7f-8349-2b622375e36c"
>
</ReqRef><Comment>Handles danger for shunting information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="ee3f0441-5064-4305-9a97-cb34fdfcb6ae"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.DANGER_FOR_SHUNTING_INFORMATION.Q_DIR )</PreCondition><PreCondition
 Guid="cd9409cf-f236-4e01-b50f-35db0d073fff"
>Kernel.AcceptInformation.DangerForSHInformation( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f9fc9537-6eef-4645-990f-5fbf39d7d5be"
>Kernel.Modes.Shunting.DangerForShuntingReceived( Packet =&gt; Packet.TRACK_TO_TRAIN.DANGER_FOR_SHUNTING_INFORMATION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Infill available"
 Guid="8e2593a0-4d11-4587-9407-2b308ebfcce2"
>
<ReqRef
 Id="787a1a8f-0541-405d-a3f2-4e318b090e90"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="50466cf2-d78d-4a5a-9dbe-42f762d9cfa7"
>
</ReqRef><ReqRef
 Id="672b9145-06ca-49f0-b871-3a074024a15a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84551284-2d26-4c00-bbe7-c5766cad07fc"
>
</ReqRef><ReqRef
 Id="041247c0-323f-4ba8-8e1f-5b5a3232d83b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="40c37b43-b142-4a45-bf63-f0b684dba908"
>
</ReqRef><ReqRef
 Id="f06259b6-d59f-4a89-bfb0-45036e0d87bb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b39e5af6-5351-4a3f-9bb9-1568cc2def60"
>
</ReqRef><Comment>Handles Infill packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="b66421ab-9225-4b66-9b32-ae12ae206ffc"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.Q_DIR )</PreCondition><PreCondition
 Guid="124373f0-52fa-477e-883b-90d40f969d31"
>Kernel.Infill.InfillTransmissionMediaAvailable</PreCondition><PreCondition
 Guid="9fd621d8-93b5-4c1b-8cf6-18589d0f2f00"
>Kernel.AcceptInformation.InfillLocationReference( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ea30ca4a-effe-4d43-9d7d-d40dfd84ca89"
>Kernel.Infill.InfillReceived ( Packet.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Stop if in Staff Responsible received"
 Guid="c81a37f3-9453-49af-8106-2a112ae51ef0"
>
<ReqRef
 Id="06ef59af-bb51-412c-87ce-d6392fed31d6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ac70e3a-7371-40ea-ac78-1d94399cfe97"
>
</ReqRef><ReqRef
 Id="31fb455b-2925-497c-b09a-b8b9573a81ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cc8c6131-376a-4df9-93e9-6fa93fd35002"
>
</ReqRef><ReqRef
 Id="d932cea7-ce9f-4909-afff-2c36046cea2a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe412d94-645e-4e66-8efd-d7afe571ecda"
>
</ReqRef><Comment>Handles stop if in Staff Responsible packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="f3d31b2a-4feb-4fc0-89e6-2a8af9b05bb0"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.STOP_IF_IN_STAFF_RESPONSIBLE.Q_DIR )</PreCondition><PreCondition
 Guid="ae3b8881-0559-4f9b-bf45-671195823a70"
>Kernel.AcceptInformation.StopIfInSRMode( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b3cc9653-78b6-414b-a8a6-81914195a393"
>Kernel.Modes.StaffResponsible.StopIfInSRReceived( Packet =&gt; Packet.TRACK_TO_TRAIN.STOP_IF_IN_STAFF_RESPONSIBLE )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Reversing Area or Supervision Information available"
 Guid="8c565102-6dfc-467b-bba2-7bdae0720fa5"
>
<ReqRef
 Id="571b7bcf-500a-4e43-8f4b-dfb64cfd4845"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9eb1fb56-9f26-49ac-b649-a813769429e3"
>
</ReqRef><ReqRef
 Id="54c20a27-60da-4df1-80ba-7ba841d7258f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="03f063a1-d979-44f2-b73a-f4329f61d3ba"
>
</ReqRef><ReqRef
 Id="f3aec789-8e42-4041-befb-bf3d53519577"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="86396db2-9bf2-44f1-85b2-981f6ea478da"
>
</ReqRef><ReqRef
 Id="e9d57d91-d39a-4190-841c-fb33c0eeee48"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="506ea474-c557-42c9-941c-3d1555744dfc"
>
</ReqRef><ReqRef
 Id="f32ad7de-67d9-4075-bb38-75a13996ad98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0f217554-67f7-4f8b-8222-39736c4f1466"
>
</ReqRef><ReqRef
 Id="796923a0-8b8a-4e7b-8af3-43f3398b27dd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ee588ecf-e52d-4e87-89b5-7ceb19383b5f"
>
</ReqRef><ReqRef
 Id="46356051-e464-4ceb-b54c-41ef8dc6017f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6f108d26-7bb6-4017-829b-07be0a892e76"
>
</ReqRef><ReqRef
 Id="c93e250c-fc42-406f-9706-6ec7488b8982"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b139424f-252b-4a32-98af-e3f786f4b561"
>
</ReqRef><ReqRef
 Id="690dfc40-042d-4c8d-9e60-17b85d455fd3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="11fb4149-95a7-4929-a77a-4e880788cc70"
>
</ReqRef><ReqRef
 Id="f08e576d-1c61-4c2b-b742-29f729a5728f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="93584cec-5df3-41f2-a600-5f9b8a06e9b7"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ab221fe7-18d1-4221-8ccd-a994c25d640b"
>
</ReqRef><Comment>Handles Reversion Area Information packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="63bcc506-85c0-4763-9549-2f5c4eec0646"
>RevAreaPacketAvailable( aPacket =&gt; Packet.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION )
  OR
RevSupPacketAvailable( aPacket =&gt; Packet.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1ee33c0c-afa3-45e6-af12-67634aef90fc"
>Kernel.TrackDescription.ReversingArea.ReversingAreaOrSupervisionInformationReceived
(
  RvAreaPacket =&gt; ProvideRevAreaPacketToHandle( aPacket =&gt; Packet.TRACK_TO_TRAIN.REVERSING_AREA_INFORMATION ),
  RvSupPacket =&gt; ProvideRevSupPacketToHandle( aPacket =&gt; Packet.TRACK_TO_TRAIN.REVERSING_SUPERVISION_INFORMATION ),
  aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation()
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Default Gradient for TSR available"
 Guid="18227d52-0953-4a2b-bce9-bb1eb4ee7ea6"
>
<ReqRef
 Id="02d9f252-59e9-4dbb-a7cc-b66f2b96fe25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fe789e53-144f-4e59-bce0-c5694d6ce0c7"
>
</ReqRef><ReqRef
 Id="e7979a56-555a-422e-9a04-9210ecca2b25"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="89d8594e-bd6d-487b-b2f1-030bd881ea7b"
>
</ReqRef><ReqRef
 Id="e1e65985-7379-4bca-be54-78d665b5f59b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="74533123-26df-4d3a-8361-7b8b097f09b9"
>
</ReqRef><Comment>Handles Default Gradient for TSR packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="547b3821-fa99-449c-83b4-8d095143005d"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION.Q_DIR )</PreCondition><PreCondition
 Guid="5dc5809b-4774-4887-8dc5-2115747ced74"
>Kernel.AcceptInformation.DefaultGradientForTSR( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="dd9b765f-3dcf-48d2-bac3-19ee389e9f1a"
>Kernel.TrackDescription.Gradient.DefaultGradientForTSRReceived ( Packet.TRACK_TO_TRAIN.DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Virtual Balise Cover Order available"
 Guid="feba58f7-b47c-4901-a9e9-6ee8cfbe6e91"
>
<ReqRef
 Id="c7942b2d-7ebd-4feb-904d-0b6f4653b2a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4071e969-5a7d-440c-85f7-9c5bbdbe6636"
>
</ReqRef><ReqRef
 Id="b7cd2da7-45be-44f8-893a-a97c68151f82"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a243efc7-9e91-4202-ba05-9c82a530ed2b"
>
</ReqRef><ReqRef
 Id="e3da46a5-96c4-40d3-9e8d-24a6c6bc8f12"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed6b60c2-644f-40ed-a850-3e20c2f00bc8"
>
</ReqRef><Comment>Handles Virtual Balise Cover Order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="e115cfb9-acb3-4a62-9d4f-531cce8adebf"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.VIRTUAL_BALISE_COVER_ORDER.Q_DIR )</PreCondition><PreCondition
 Guid="d0fbabae-a7ff-4cd8-afd7-acf8eb4f6c50"
>Kernel.AcceptInformation.VirtualBaliseCoverOrder( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="50f67d89-da94-4bb0-b44b-2f9d06b85685"
>Kernel.VirtualBaliseCover.VBCReceivedFromBalise( Packet.TRACK_TO_TRAIN.VIRTUAL_BALISE_COVER_ORDER )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="LSSMA display toggle order available"
 Guid="693073bb-3954-46f2-a554-5ac6a8f876d7"
>
<ReqRef
 Id="a6eade55-4b84-45f2-a021-fd589f3d1760"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c179bd82-0773-4e55-af7e-4d2770287dee"
>
</ReqRef><ReqRef
 Id="6eeca2b4-7feb-46e5-9918-59197fd2bd89"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d7a77846-723c-4382-a8af-167818814509"
>
</ReqRef><Comment>Handles LSSMA display toggle order packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="6849aabe-b0ac-4fbc-8d10-a3200c6580e6"
>ConsiderBTMPacket ( PacketOrientation =&gt; Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER.Q_DIR )</PreCondition><PreCondition
 Guid="7efc1a9f-9602-44bc-9569-71ebb28a94ac"
>(
  Kernel.AcceptInformation.LSSMADisplayToggleOffOrder( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )
    AND
  Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER.Q_LSSMA == Messages.Q_LSSMA.Toggle_off
)
  OR
(
  Kernel.AcceptInformation.LSSMADisplayToggleOnOrder( Source =&gt; Kernel.AcceptInformation.Source.BaliseGroup )
    AND
  Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER.Q_LSSMA == Messages.Q_LSSMA.Toggle_on
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="004ed3f5-351e-4130-868e-a4960e2b944e"
>Kernel.Modes.LimitedSupervision.LSSMAToggleReceived(
    Packet =&gt; Packet.TRACK_TO_TRAIN.LSSMA_DISPLAY_TOGGLE_ORDER,
    Timestamp =&gt; BTM.BGLocationReference.Timestamp
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="820"
 Y="190"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleNewLRBG"
 Guid="c31fd441-b73c-4a8c-b590-155d2827dab2"
>
<ReqRef
 Id="f57e28e7-7ee4-40ea-9cbe-fd0ea913add0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7f9018a3-318b-4c60-a75e-0822012b2b05"
>
</ReqRef><ReqRef
 Id="50574953-3247-4859-8de2-1049ab46e862"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6beac18d-82e2-426e-b617-0411fdd220dd"
>
</ReqRef><ReqRef
 Id="18834f9f-2f32-40fe-9d9a-97c8e2991f93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="99c46e2f-d424-4e5f-86e4-0f6601827b8e"
>
</ReqRef><ReqRef
 Id="afb44275-4d8c-4d1d-9caf-212e30e4ec9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2dd1f0f7-51f7-4705-b8b0-c0080a3c892e"
>
</ReqRef><ReqRef
 Id="ee60d01b-a74d-40b9-88b2-c24f3198e572"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="853255a2-6e72-4c1c-9a59-93811a66b6d3"
>
</ReqRef><ReqRef
 Id="762a9a50-d079-460f-80fd-c72d91c43331"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="adb79b46-a095-4792-ba16-3906c7ab9105"
>
</ReqRef><Comment>This procedure is used when the train detects a new LRBG, in order to update information relative to its LRBG.</Comment>
<Parameters>
<Parameter
 Type="Messages.NID_LRBG"
 Name="Nid_BG"
 Guid="73175fa3-6e28-4a7d-af6d-805fb341b09c"
>
</Parameter><Parameter
 Type="BaseTypes.Distance"
 Name="aDistanceFromRef"
 Guid="de3e8c92-4f0c-455c-bda5-61148adb4598"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Relocate trackside information"
 Guid="ba44542d-5f85-4e5c-9be1-449daf9f1059"
>
<ReqRef
 Id="afb44275-4d8c-4d1d-9caf-212e30e4ec9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="feeed07e-3eba-41e9-a6f4-d67e85244d86"
>
</ReqRef><ReqRef
 Id="ee60d01b-a74d-40b9-88b2-c24f3198e572"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6eb5465d-9a7f-4a6f-a8fc-cc96ea2fcc91"
>
</ReqRef><ReqRef
 Id="762a9a50-d079-460f-80fd-c72d91c43331"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="505bbe08-5740-4319-842a-42efa5202fae"
>
</ReqRef><Comment>Since all distances are measured from the reference location of the LRBG, all distances saved the kernel must be relocated when the EVC accepts a new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update all distances"
 Guid="a7a697f6-8f4f-4e63-b505-36a910508835"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Emergency Stops"
 Guid="90e8fa4c-3bf9-4d41-8f3c-49a12c49c220"
>
<Comment>Change the distances in the stored Emergency Stops to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Emergency Stops"
 Guid="af10bbbb-d841-4245-a21b-fc3250b3e532"
>
<PreConditions>
<PreCondition
 Guid="2d7660db-7e10-4467-b71a-c7944f926f7b"
>Kernel.BrakeCommands.EmergencyStops != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="64a5b203-43ab-41ec-b698-757a66aa1143"
>Kernel.BrakeCommands.EmergencyStops &lt;- MAP Kernel.BrakeCommands.EmergencyStops USING X IN Kernel.BrakeCommands.EmergencyStopStruct
{
    IsConditional =&gt; X.IsConditional,
    Id =&gt; X.Id,
    StopLocation =&gt; BaseTypes.OffsetDistance
    (
        aDistance =&gt; X.StopLocation
        aOffset =&gt; aDistanceFromRef
    ),
    Reason =&gt; X.Reason,
    StartTime =&gt; X.StartTime
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Level Transition Order"
 Guid="2d7003a0-cb6f-468e-a417-912506442457"
>
<Comment>Change the distances in the stored Level Transition Order to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Level Transition Order"
 Guid="ebcb0b12-130b-4dee-87c0-ada7622ac891"
>
<PreConditions>
<PreCondition
 Guid="4c9c049a-53ca-42d0-a56d-1436780c837b"
>Available (Kernel.LevelTransition.LevelTransitionOrder)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2d236efe-6978-4ec0-880b-fa0d4befa336"
>Kernel.LevelTransition.LevelTransitionOrder.Location &lt;- BaseTypes.OffsetDistance(
    aDistance =&gt; Kernel.LevelTransition.LevelTransitionOrder.Location,
    aOffset =&gt; aDistanceFromRef
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Supervised Level Crossings"
 Guid="289a329e-dd2d-494d-9874-0a0f6afd15a5"
>
<Comment>Change the distances in the supervised Level Crossings to be measured from the new LRBG.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Level Crossings"
 Guid="09d19112-dc11-4041-a25f-96533bf073a9"
>
<PreConditions>
<PreCondition
 Guid="45bd8711-149c-4bbd-a43b-1659bf13a9d7"
>Kernel.LX.SupervisedLevelCrossings != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="50ba0696-fc68-4e62-bbec-364e5d782455"
>Kernel.LX.SupervisedLevelCrossings &lt;- MAP Kernel.LX.SupervisedLevelCrossings USING X IN Kernel.LX.LevelCrossingStruct
{
    Id =&gt; X.Id,
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Length =&gt; X.Length,
    IsProtected =&gt; X.IsProtected,
    Speed =&gt; X.Speed,
    StoppingRequired =&gt; X.StoppingRequired,
    StoppingAreaLength =&gt; X.StoppingAreaLength
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Level Crossings for MRSP"
 Guid="c9b63bb1-5136-491f-b4ea-529ef88b2d99"
>
<Comment>Change the distances in the Level Crossings for MRSP to be measured from the new LRBG.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Level Crossings"
 Guid="5f75d9ad-9162-42ca-83f6-73b4c6935fb1"
>
<PreConditions>
<PreCondition
 Guid="e08c006e-0492-46ff-b5ac-2f3f993e12ba"
>Kernel.LX.MRSPLevelCrossings != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3edc6100-c7fa-4477-887e-0c92550cda00"
>Kernel.LX.MRSPLevelCrossings &lt;- MAP Kernel.LX.MRSPLevelCrossings USING X IN Kernel.LX.LevelCrossingStruct
{
    Id =&gt; X.Id,
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Length =&gt; X.Length,
    IsProtected =&gt; X.IsProtected,
    Speed =&gt; X.Speed,
    StoppingRequired =&gt; X.StoppingRequired,
    StoppingAreaLength =&gt; X.StoppingAreaLength
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Mode Profile"
 Guid="ec02eab3-53e2-4ff9-8ae8-0e416e45f9e1"
>
<Comment>Change the distances in the stored Mode Profile to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Mode Profile"
 Guid="0ce29d2d-f443-4dae-8828-0887df89bbb4"
>
<PreConditions>
<PreCondition
 Guid="a6ff2a03-930f-4f27-bfc8-b2bcac100179"
>Kernel.MA.ModeProfile.Profile != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="15547961-832e-4dd5-84bb-b39085614a1e"
>Kernel.MA.ModeProfile.Profile &lt;- MAP Kernel.MA.ModeProfile.Profile USING X IN Kernel.MA.ModeProfile.ModeProfileStruct{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Mode =&gt; X.Mode,
    Speed =&gt; X.Speed,
    Length =&gt; X.Length,
    AcknLength =&gt; X.AcknLength,
    SupervisionQualifier =&gt; X.SupervisionQualifier
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Adhesion Factors"
 Guid="fe95f853-8149-4972-879a-6b9bd5be4766"
>
<Comment>Change the distances in the stored Adhesion Factors to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Adhesion Factors"
 Guid="17b32be8-2947-4325-8612-8e2e6ed254c1"
>
<PreConditions>
<PreCondition
 Guid="41425123-2b7a-4a35-955f-bbc92e8e7c77"
>Kernel.TrackDescription.AdhesionFactors.AdhFactors != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0db1043e-a8ac-4926-bc7b-8c94101570dc"
>Kernel.TrackDescription.AdhesionFactors.AdhFactors &lt;- MAP Kernel.TrackDescription.AdhesionFactors.AdhFactors USING X IN Kernel.TrackDescription.AdhesionFactors.AdhesionFactorStruct
{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Length =&gt; X.Length,
    Value =&gt; X.Value
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Axle Load Profile"
 Guid="f8d308ef-5265-4686-ad4d-5294a4566e3b"
>
<Comment>Change the distances in the stored Axle Load Profile to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Axle Load Profile"
 Guid="00430644-e90d-4db9-9e01-41fb826fc190"
>
<PreConditions>
<PreCondition
 Guid="2f7fe40b-0801-4095-9dd0-cb0e00b3bdf3"
>Available(Kernel.TrackDescription.AxleLoad.ASP)
  AND  
Kernel.TrackDescription.AxleLoad.ASP.ALs != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="dbdbc531-b34a-4bb5-a79b-4fa70867c086"
>Kernel.TrackDescription.AxleLoad.ASP.ALs &lt;- MAP Kernel.TrackDescription.AxleLoad.ASP.ALs USING X IN Kernel.TrackDescription.AxleLoad.AxleLoadStruct
{
    Length =&gt; X.Length,
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Values =&gt; X.Values
}</Action><Action
 Guid="a4823d58-e3d0-44d3-a8cb-d3da749c766f"
>Kernel.TrackDescription.AxleLoad.ASP.EmptyProfileDistance &lt;- Kernel.TrackDescription.AxleLoad.ASP.EmptyProfileDistance - aDistanceFromRef</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Gradients"
 Guid="f7f414c2-591e-4528-a588-0cc21c39ead8"
>
<Comment>Change the distances in the stored Gradient Profile to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Gradients"
 Guid="cbbb196a-7ea3-4458-bc02-f1da27944a69"
>
<PreConditions>
<PreCondition
 Guid="e4097af4-c04d-423c-927c-7319de7a8656"
>Kernel.TrackDescription.Gradient.Gradients != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8b54a180-6453-4856-bc6e-1d0e953f63a0"
>Kernel.TrackDescription.Gradient.Gradients &lt;- MAP Kernel.TrackDescription.Gradient.Gradients USING X IN Kernel.TrackDescription.Gradient.GradientStruct
{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Gradient =&gt; X.Gradient
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Speed Restrictions related to Permitted Braking Distance"
 Guid="e7c1a09f-a872-4e77-86cd-d2b491bf2de0"
>
<Comment>Change the distances in the stored Permitted Braking Distance Speed Restrictions to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Speed Restrictions related to Permitted Braking Distance"
 Guid="33c81bf0-8af0-4505-ab27-66a226f39992"
>
<PreConditions>
<PreCondition
 Guid="9a1fd2e9-f993-486b-8b1f-498af59e3337"
>Available(Kernel.TrackDescription.PermittedBrakingDistance.SpeedRestrictionsProfile)
  AND  
Kernel.TrackDescription.PermittedBrakingDistance.SpeedRestrictionsProfile.SpeedRestrictions != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c600d873-49dc-44dd-8a1a-0bbd72c7bab8"
>Kernel.TrackDescription.PermittedBrakingDistance.SpeedRestrictionsProfile.EmptyProfileDistance &lt;- BaseTypes.OffsetDistance(
    aDistance =&gt; Kernel.TrackDescription.PermittedBrakingDistance.SpeedRestrictionsProfile.EmptyProfileDistance,
    aOffset =&gt; aDistanceFromRef
)</Action><Action
 Guid="bb71241b-e532-4f32-913e-0e64a7e53c01"
>Kernel.TrackDescription.PermittedBrakingDistance.SpeedRestrictionsProfile.SpeedRestrictions &lt;- MAP Kernel.TrackDescription.PermittedBrakingDistance.SpeedRestrictionsProfile.SpeedRestrictions USING X IN Kernel.TrackDescription.PermittedBrakingDistance.SRPBDStruct{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Length =&gt; X.Length,
    Speed =&gt; X.Speed,
    Gradient =&gt; X.Gradient,
    BrakeType =&gt; X.BrakeType,
    BrakingDistance =&gt; X.BrakingDistance
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Reversing Area"
 Guid="40f6dbf9-6100-4db6-beff-bd7529c2fc66"
>
<Comment>Change the distances in the stored Reversing Area to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Reversing Area"
 Guid="3892aad8-b058-44b5-a0c5-14570e2859ba"
>
<PreConditions>
<PreCondition
 Guid="41c693e8-3a1f-44fe-9e7d-2ba5e5ff9cc7"
>Available(Kernel.TrackDescription.ReversingArea.ReversingAreaProfile)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a3d612c5-11b4-4469-9b37-1d7eb6af342f"
>Kernel.TrackDescription.ReversingArea.ReversingAreaProfile.Location &lt;- BaseTypes.OffsetDistance(
    aDistance =&gt; Kernel.TrackDescription.ReversingArea.ReversingAreaProfile.Location,
    aOffset =&gt; aDistanceFromRef
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Route Suitability"
 Guid="0b020469-27eb-4625-b877-4adae11f6957"
>
<Comment>Change the distances in the stored Route Suitability Profile to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Route Suitability"
 Guid="a5be2b3f-1457-427a-90f2-79f2abbabf07"
>
<PreConditions>
<PreCondition
 Guid="813e5a1f-ee48-4adb-b25a-ec57b8ff7b73"
>Available(Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfile)
  AND  
Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfile.Items != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d6659a82-85cc-4d35-960a-16813e7c869c"
>Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfile.EmptyProfileDistance &lt;- BaseTypes.OffsetDistance(
    aDistance =&gt; Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfile.EmptyProfileDistance,
    aOffset =&gt; aDistanceFromRef
)</Action><Action
 Guid="2c519ddc-d31a-4a25-a641-3e51f3099427"
>Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfile.Items &lt;- MAP Kernel.TrackDescription.RouteSuitability.RouteSuitabilityProfile.Items USING X IN Kernel.TrackDescription.RouteSuitability.RouteSuitabilityItemStruct
{
    Type =&gt; X.Type,
    Location =&gt; X.Location - aDistanceFromRef,
    LineGauge =&gt; X.LineGauge,
    MaxAxleLoad =&gt; X.MaxAxleLoad,
    TractionSystem =&gt; X.TractionSystem,
    NidCTraction =&gt; X.NidCTraction
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Static Speed Profile"
 Guid="159dcb11-7560-463b-9cb3-5f73613e9ebc"
>
<Comment>Change the distances in the stored Static Speed Profile to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Static Speed Profile"
 Guid="871d0f9f-7751-4b29-8db5-56a927cf04e3"
>
<PreConditions>
<PreCondition
 Guid="e247a056-3579-487e-b4b1-2b6785beddbe"
>Kernel.TrackDescription.StaticSpeedProfile.SSP != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8bb2f7b7-e5ec-4f3b-8166-f68ba0fd7f42"
>Kernel.TrackDescription.StaticSpeedProfile.SSP &lt;- MAP Kernel.TrackDescription.StaticSpeedProfile.SSP USING X IN Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedRestrictionStruct
{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    BasicSpeed =&gt; X.BasicSpeed,
    TrainLengthDelay =&gt; X.TrainLengthDelay,
    Categories =&gt; X.Categories
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Applicable National Values"
 Guid="2a660229-50de-4b68-92f6-f70369884777"
>
<Comment>Change the distances in the stored Applicable National Values to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Applicable National Values"
 Guid="27b09058-e67a-4b1e-89ac-253403802463"
>
<PreConditions>
<PreCondition
 Guid="64e59923-1c88-40d5-afc4-e3f85142f563"
>Available(Kernel.NationalValues.ApplicableNationalValues)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="266b0e21-033c-4f94-9e7e-7d0ac5fc523a"
>Kernel.NationalValues.ApplicableNationalValues.ApplicableStartLocation &lt;- 
BaseTypes.MaxDistance(
    X1 =&gt; BaseTypes.OffsetDistance(
    aDistance =&gt; Kernel.NationalValues.ApplicableNationalValues.ApplicableStartLocation,
    aOffset =&gt; aDistanceFromRef
),
    X2 =&gt; 0.0
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Not Applicable National Values"
 Guid="d0df7f00-ee99-4021-aa9c-6bfd54a481fc"
>
<Comment>Change the distances in the stored Not Yet Applicable National Values to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Not Applicable National Values"
 Guid="955bacb3-d3aa-4c13-a998-48a2fafa9fa1"
>
<PreConditions>
<PreCondition
 Guid="0bf1ef85-b63e-416e-b98c-e4d827fb057f"
>Available(Kernel.NationalValues.NotApplicableNationalValues)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c7f41cd1-a886-4f3c-989f-baaee038bcae"
>Kernel.NationalValues.NotApplicableNationalValues.ApplicableStartLocation &lt;- Kernel.NationalValues.NotApplicableNationalValues.ApplicableStartLocation - aDistanceFromRef</Action><Action
 Guid="53460ea3-4ef7-4882-8815-e852edc91722"
>Kernel.NationalValues.NotApplicableNationalValues.ApplicableStopLocation &lt;- Kernel.NationalValues.NotApplicableNationalValues.ApplicableStopLocation - aDistanceFromRef</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update General Track Conditions"
 Guid="74748e63-f2b2-4d43-9d6f-5fdcdf4a5699"
>
<Comment>Change the distances in the stored General Track Conditions to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update General Track Conditions"
 Guid="99412497-4af5-43b3-94cb-113c14171d73"
>
<PreConditions>
<PreCondition
 Guid="14074785-1a5d-418d-9041-9c7593105abe"
>Kernel.TrackDescription.TrackConditions.General.TCProfile != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="56b280f3-d732-44db-bec8-8860b3143772"
>Kernel.TrackDescription.TrackConditions.General.TCProfile &lt;- MAP Kernel.TrackDescription.TrackConditions.General.TCProfile USING X IN Kernel.TrackDescription.TrackConditions.General.TrackConditionInformationStruct
{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Value =&gt; X.Value
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update TC Announcements"
 Guid="8061f8db-05a5-46ac-9d17-29343b248247"
>
<Comment>Change the distances in the stored Track Condition Announcements to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update TC Announcements"
 Guid="8bd7601d-8dcf-43b4-96c6-0f0ea98d0ab5"
>
<PreConditions>
<PreCondition
 Guid="ebba61da-3562-456e-88a1-6206c6260185"
>Kernel.TrackDescription.TrackConditions.Display.ActiveConditions != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="bd58a81a-7bbc-4de8-89de-d6b278982120"
>Kernel.TrackDescription.TrackConditions.Display.ActiveConditions &lt;- MAP Kernel.TrackDescription.TrackConditions.Display.ActiveConditions USING X IN Kernel.TrackDescription.TrackConditions.Display.ActiveConditionStruct{
    Type =&gt; X.Type,
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Length =&gt; X.Length,
    Time =&gt; X.Time,
    Automatic =&gt; X.Automatic
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Big Metal Masses TC"
 Guid="be414430-2f9e-44b2-b1ce-5826957d25c7"
>
<Comment>Change the distances in the stored Big Metal Masses Track Conditions to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Big Metal Masses TC"
 Guid="e5fb4843-b5ed-4e32-8761-1dbe159bb14b"
>
<PreConditions>
<PreCondition
 Guid="b9b6a50e-d1e1-4e3a-92b6-08f05ff2a3ea"
>Kernel.TrackDescription.TrackConditions.BigMetalMasses.TCBigMetalMasses != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9d9fef57-643a-4b84-b837-ad28e39b6281"
>Kernel.TrackDescription.TrackConditions.BigMetalMasses.TCBigMetalMasses &lt;- MAP Kernel.TrackDescription.TrackConditions.BigMetalMasses.TCBigMetalMasses USING X IN Kernel.TrackDescription.TrackConditions.BigMetalMasses.BigMetalMassesInformationStruct
{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Value =&gt; X.Value
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Traction Systems TC"
 Guid="896650ab-4ed1-4aa1-867a-7d82c0e82861"
>
<Comment>Change the distances in the stored Traction Systems Track Conditions to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Traction Systems TC"
 Guid="56ddb3aa-ed8b-408b-a373-e1b372ebd16f"
>
<PreConditions>
<PreCondition
 Guid="36e03490-2ba0-4871-b56f-189cb6d23be2"
>Kernel.TrackDescription.TrackConditions.TractionSystems.TCTractionSystems != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="258441de-c699-470f-9917-e55505621d5b"
>Kernel.TrackDescription.TrackConditions.TractionSystems.TCTractionSystems &lt;- MAP Kernel.TrackDescription.TrackConditions.TractionSystems.TCTractionSystems USING X IN Kernel.TrackDescription.TrackConditions.TractionSystems.TractionSystemInformationStruct
{
    Value =&gt; X.Value,
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    )
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Current Consumption TC"
 Guid="8606bf00-03d8-496d-85ec-6b5db8da9fb3"
>
<Comment>Change the distances in the stored Current Consumption Track Conditions to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Current Consumption TC"
 Guid="1758b124-b2d4-42c1-92b8-55048196ca72"
>
<PreConditions>
<PreCondition
 Guid="e83ae76a-58b0-4c70-99e8-4350402eea0b"
>Kernel.TrackDescription.TrackConditions.CurrentConsumption.TCCurrentConsumption != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="da1176e3-6902-43c5-b859-107b862032f8"
>Kernel.TrackDescription.TrackConditions.CurrentConsumption.TCCurrentConsumption &lt;- MAP  Kernel.TrackDescription.TrackConditions.CurrentConsumption.TCCurrentConsumption USING X IN Kernel.TrackDescription.TrackConditions.CurrentConsumption.CurrentConsumptionInformationStruct
{
    Value =&gt; X.Value,
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    )
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Station Platforms TC"
 Guid="8cb19b29-72d4-4ccf-be2c-11912354856f"
>
<Comment>Change the distances in the stored Station Platforms Track Conditions to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Station Platforms TC"
 Guid="53553fb3-60ad-490b-8652-3647cef4974d"
>
<PreConditions>
<PreCondition
 Guid="206bc261-19cb-42b8-8ad1-7fc5913f2a9b"
>Kernel.TrackDescription.TrackConditions.StationPlatform.TCStationPlatforms != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0f8acd4b-a756-4258-8ade-9df77a5f3e38"
>Kernel.TrackDescription.TrackConditions.StationPlatform.TCStationPlatforms &lt;- MAP Kernel.TrackDescription.TrackConditions.StationPlatform.TCStationPlatforms USING X IN Kernel.TrackDescription.TrackConditions.StationPlatform.StationPlatformInformationStruct
{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Value =&gt; X.Value
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update Temporary Speed Restrictions"
 Guid="e69bd495-d46b-4c68-914b-e787e3a651fe"
>
<Comment>Change the distances in the stored TSRs to be measured from the new LRBG</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update Temporary Speed Restrictions"
 Guid="e492bde1-52d6-4277-b88d-b606c2d36115"
>
<PreConditions>
<PreCondition
 Guid="4b2a4a49-edfd-4b4b-ae0b-76d6df8079fe"
>Kernel.TSR.TSRs != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2f3fc0ef-d564-4b97-b378-0177fc65da81"
>Kernel.TSR.TSRs &lt;- MAP Kernel.TSR.TSRs USING X IN Kernel.TSR.TemporarySpeedRestriction{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Length =&gt; X.Length,
    Speed =&gt; X.Speed,
    Id =&gt; X.Id
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update SupervisedTargets"
 Guid="61e43490-4472-4e12-83e6-aa18238410bb"
>
<Comment>Update the list of supervised targets calculated at the last cycle.
This variable is used to chaeck if the list of targets has been updated (and therefore if the speed and distance monitoring type and status need to re-evaluated).
The list is updated in case two LRBGs provide the same MRSP, this should count as the list of supervised targets being updated.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update SupervisedTargets"
 Guid="2e9ad671-d70f-4899-89f1-42f7f9bc6430"
>
<PreConditions>
<PreCondition
 Guid="c84d8a44-5988-4408-b72a-3fa217e5cdbc"
>Kernel.SpeedAndDistanceMonitoring.SupervisedTargets != []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="48f28414-15b8-407c-9ccc-7b7bbb265b2f"
>Kernel.SpeedAndDistanceMonitoring.SupervisedTargets &lt;- MAP Kernel.SpeedAndDistanceMonitoring.SupervisedTargets USING X IN TargetStruct{
    Location =&gt; BaseTypes.OffsetDistance(
        aDistance =&gt; X.Location,
        aOffset =&gt; aDistanceFromRef
    ),
    Speed =&gt; X.Speed,
    Length =&gt; X.Length,
    Type =&gt; X.Type
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update MA"
 Guid="a85e6bda-11f6-4977-97e6-70bd3b3538c4"
>
<Comment>Change the lengths in the MA</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Update MA"
 Guid="0aa9b271-0ff4-434d-afd2-abf96c4bdbfb"
>
<PreConditions>
<PreCondition
 Guid="9f7ce8dd-40cf-4439-b67e-a01b25e77e7d"
>Available(Kernel.MA.MA)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check for sections"
 Guid="9c4103b1-b279-450a-83cb-7c03b9cae1b8"
>
<Comment>Depending on where the train is, with reference to the MA, and on the specific structure of the MA, the relocation must be handled differently</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No sections in the MA"
 Guid="74808d55-fe3e-49c0-9639-08778e4cff88"
>
<Comment>If there are no sections in the MA, the length of the end section must be reduced</Comment>
<PreConditions>
<PreCondition
 Guid="5657558a-1a05-418b-a764-acf8a7450bcc"
>Kernel.MA.MA.Sections == []</PreCondition></PreConditions>
<Actions>
<Action
 Guid="1a79f6be-8cd7-40c6-9975-e855cdded2c5"
>Kernel.MA.MA.EndSection.Length &lt;- Kernel.MA.MA.EndSection.Length - BaseTypes.DistanceToLength(aDistanceFromRef)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="There are sections - train is in the end section"
 Guid="d06b3a80-263d-4bb9-b9c8-543ed912a38d"
>
<Comment>If the train has passed all the sections and is in the end section, the sections must be removed and the length of the end section updated</Comment>
<PreConditions>
<PreCondition
 Guid="d424a96a-5c7d-4c07-b419-e3cf71806b66"
>BTM.BGLocationReference.Position.Position - BTM.LRBG.Position.Position &gt;= Kernel.MA.EndSectionStart()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b9ea2e9d-59d1-4ef8-88df-d51843437f9e"
>Kernel.MA.RelocateMAinEndSection(aDistanceFromRef)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Train is in one of the sections"
 Guid="e5c30d3b-cb6a-41bd-b0ef-98cafdcd885a"
>
<Comment>If the train is in a section that is not the end section, previous sections are removed and the current one is updated</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="ed0099d6-3ed8-4657-b337-6d58e3914acb"
>Kernel.MA.MA.Sections &lt;- Kernel.MA.RelocatedSections(aDistanceFromRef)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update LRBG values"
 Guid="952f0bc7-e6f8-412b-95b9-788d6a207d38"
>
<ReqRef
 Id="f57e28e7-7ee4-40ea-9cbe-fd0ea913add0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e90a4163-5b91-4747-8052-0602b8d6cd03"
>
</ReqRef><ReqRef
 Id="2296310f-3ab8-4332-9af3-424d5a85eb88"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3b875755-7cd2-49a6-a9f1-aef5fba0ca11"
>
</ReqRef><Comment>The LRBG position is updated with the current values of the odometer.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update LRBG values"
 Guid="a8fe89c4-6f5d-4d9a-92eb-f96ffbf1883e"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0ed7fcdc-0c4d-4e64-b329-3a748a11b5b8"
>BTM.LRBG &lt;- BaliseGroupStruct
{
  Timestamp =&gt; BGLocationReference.Timestamp,
  NID =&gt; Nid_BG,
  Position =&gt; BGLocationReference.Position,
  Orientation =&gt; BaliseGroupOrientation()
}</Action><Action
 Guid="9ea8e191-ce41-4e2f-8bab-49b9a8bbbde8"
>Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation &lt;- BTM.BaliseGroupOrientation()</Action><Action
 Guid="d4709923-6e3a-4170-a807-7cd47e242466"
>UnlinkedBGPosition &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="820"
 Y="70"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleUnlinkedBG"
 Guid="0f2d4a7d-28af-484b-8188-84b0c872dc6a"
>
<ReqRef
 Id="d5dcae2f-5a41-4d4b-ab0d-436579a7646a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="23967fb6-ea6e-4bc3-9107-1ec354254ac7"
>
</ReqRef><ReqRef
 Id="f6495886-9165-4d0b-9a11-087ff8f09831"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b0e5e8ac-a5e5-4731-aaa5-e05d8c04ffb3"
>
</ReqRef><Comment>This procedure is used when the train detects an unlinked balise group, in order to update information relative to the last detected unlinked balise group.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="e0f27f7a-de82-46d5-8957-39366c5776d8"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="UpdateUnlinkedBGPosition"
 Guid="7a4f5586-ea4c-4f1c-b6fb-e2a066c601cc"
>
<ReqRef
 Id="d5dcae2f-5a41-4d4b-ab0d-436579a7646a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94459fc2-90d4-47fe-99b2-0acd76218c6a"
>
</ReqRef><ReqRef
 Id="f6495886-9165-4d0b-9a11-087ff8f09831"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="257374c4-068a-43db-ba08-1001600b3108"
>
</ReqRef><Comment>Stores the position of that unlinked balise group, which may be used for position reporting.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateUnlinkedBGPosition"
 Guid="eec0ca25-e4bc-4411-8747-034ff04cb5b5"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="fc7c3af7-269c-418d-b2fd-6be29f8bd92b"
>BTM.UnlinkedBGPosition &lt;- BGLocationReference.Position</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="820"
 Y="130"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleBaliseTelegram"
 Guid="99858b9d-1417-47df-8644-63e0b422c4ff"
>
<Comment>Handles a new complete balise group message (when all its balise messages have been received). There are several steps:
- Test if the new BG is linked and has to be considered as a new LRBG
- If the new BG is not linked and is marked as unlinked, its information has to be considered
- After that all the packets of this BG are handled</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="a26ba75b-6d2a-41ca-ab13-bd5ff4eb3365"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Clear mode profile if MA received"
 Guid="843333de-ec8d-428b-8030-16cf2ddff736"
>
<ReqRef
 Id="74a25803-8c28-4708-b506-55a76bd8bc21"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5e05338d-e93e-4b29-8cdd-fb151214b19c"
>
</ReqRef><Comment>On reception of a new MA, the previously stored mode profile has to be deleted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Clear mode profile if MA received"
 Guid="e44a7aeb-06b0-41ca-b5de-6a1c63e40993"
>
<PreConditions>
<PreCondition
 Guid="dffaadac-5831-46c5-bf77-91ce6270c379"
>THERE_IS X IN Message.Sequence1 | ( Available ( X.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY ) OR Available ( X.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY ) )</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Test infill availability"
 Guid="cad4ecb6-47fd-4aba-963c-2aa797d1e4d1"
>
<ReqRef
 Id="2a495f6e-680c-4def-a6b5-d8bcd1f41a9d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b862888b-2f98-4b53-aefc-fddd796395f3"
>
</ReqRef><ReqRef
 Id="413303d1-7e96-41b7-a03e-3a9d6380e93a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="73e1bed3-4929-4685-8b11-0443395b7727"
>
</ReqRef><Comment>If the infill information is available, then the mode profil has to be deleted only beyond the reference location of the infill information. Otherwise, the entire mode profile is deleted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Infill available, before MA"
 Guid="11f4f9e8-af21-4088-9785-72b6d7de5354"
>
<Comment>If the infill information is available, then the mode profil has to be deleted only beyond the reference location of the infill information.</Comment>
<PreConditions>
<PreCondition
 Guid="fc87ca94-5038-495f-bb98-55cc12ef4807"
>THERE_IS X IN Message.Sequence1 | Available ( X.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE )</PreCondition><PreCondition
 Guid="03414bc7-ad55-43ad-b88a-7e491d0760d6"
>Before
(
    ExpectedFirst=&gt; FIRST X IN Message.Sequence1 | Available ( X.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE ),
    ExpectedSecond=&gt; FIRST X IN Message.Sequence1 | ( Available ( X.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY ) OR Available ( X.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY ) ),
    Collection=&gt; Message.Sequence1
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="840d737c-0711-45fa-aa7c-6d7614ac52b5"
>Kernel.MA.ModeProfile.DeleteModeProfileBeyondLocation 
(
  aLocation =&gt; BTM.Linking.DistanceToBaliseGroup
  (
    (
      FIRST X IN Message.Sequence1 | Available
        (
          X.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE
        )
    ).TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.NID_BG
  )
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Infill available, after MA"
 Guid="78820e91-8f55-4038-84e6-c0149d7833b1"
>
<Comment>If an infill packet is available, but is situated after the MA packet, the MA packet is not considered to be sent by infill =&gt; the previous information is deleted.</Comment>
<PreConditions>
<PreCondition
 Guid="150d01b7-c7c8-40f9-82e9-d1683cc8c103"
>THERE_IS X IN Message.Sequence1 | Available ( X.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="43a9100d-2063-4f03-968c-58d689ab3e26"
>Kernel.MA.ModeProfile.Profile &lt;- []</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No infill available"
 Guid="5bec5fe9-140e-4dce-9b69-67f9a5aa7de3"
>
<Comment>If no infill information is available, the previous mode profile is deleted.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="53fff272-02d3-4959-ab47-d2fcffd42bb3"
>Kernel.MA.ModeProfile.Profile &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle balise telegram"
 Guid="f6523a73-b90d-4f95-8f4c-448ca057bd7d"
>
<ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="84b9cb4b-0d98-4456-ba5b-3d807059f356"
>
</ReqRef><ReqRef
 Id="282cca1e-53d5-447c-b9a4-589f5627a991"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="556c6c8a-94a0-4c4d-bdd4-c158dc2988fa"
>
</ReqRef><ReqRef
 Id="30187272-dc83-4027-afd9-a7a9754c22a4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="413a5e48-677c-46a2-a3aa-80991b4b5d91"
>
</ReqRef><ReqRef
 Id="766f0274-5b6e-4050-a48d-226dccf68782"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dd5d0d2-89b4-4df4-b25c-b7e32a39e27f"
>
</ReqRef><Comment>Handles the packets received within the current balise telegram and applies the linking reaction, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle balise telegram"
 Guid="fe32348d-91f9-476a-97ec-c3c2f59fcb40"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="feca666a-c800-4808-8ad5-6479427df552"
>APPLY BTM.HandleNewPacket(
  Packet=&gt;X, 
  NID_BG=&gt;Message.NID_BG
) 
ON Message.Sequence1</Action><Action
 Guid="b3c6e5e0-e2f2-45cb-8684-a9a4a0596fbe"
>Kernel.NationalValues.CheckNVValidity( NewNID_C =&gt; Message.NID_C )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="710"
 Y="130"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StoreBaliseGroupMessage"
 Guid="1da29f70-6313-47b9-9f90-b30088d4ec9f"
>
<ReqRef
 Id="7ea29f51-073f-4293-8a53-6d777b781609"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="963564c8-210c-4f35-a865-6a5933adacd1"
>
</ReqRef><ReqRef
 Id="122fc267-0025-4f6a-8684-93c445b0a545"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c37b2a3b-9ec8-4d02-9c14-a37f33a76555"
>
</ReqRef><Comment>Stores the balise group message in the list of balise messages of the current balise group.
Do not store duplicate balise messages.
If all the messages of the current balise group have been received, calls HandleBaliseMessage() procedure to manage the information of the new BG.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.Message"
 Name="Message"
 Guid="6d619eb8-4281-4eb5-8137-6433d0edf35c"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Keep record of the time and position of the location reference"
 Guid="7e3f7eb7-4732-4b05-aee5-6838c06ed5c5"
>
<ReqRef
 Id="d833d8f6-90b9-499b-bdb1-408971c2cbfe"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8f89dfca-3c06-48c5-9856-722c6ae3d688"
>
</ReqRef><ReqRef
 Id="0d501890-d967-43e6-b663-c526a3371860"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="92afe681-91f8-4fdf-99b8-fcd57aee9371"
>
</ReqRef><Comment>The time is used for the MA section time-outs</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Keep time of first encountered balise in the group"
 Guid="93775a88-0ffa-44f4-a42b-82fc8503f81f"
>
<PreConditions>
<PreCondition
 Guid="68fd0a29-085c-46b8-8d7a-13d05c0df54b"
>BTM.IsLocationReference ( Message =&gt; Message )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="97fe5801-fbb2-4588-b755-7418c4969256"
>BTM.BGLocationReference &lt;- BTM.LocationReferenceStruct{
    Position =&gt; AntennaPositionFromOdometry(),
    Timestamp =&gt; Kernel.DateAndTime.Now()
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Keep note of missed balises"
 Guid="2bac6cbb-3616-40c8-a658-72f42fddb191"
>
<Comment>If some balises in the</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Keep note of missed balises"
 Guid="17b3e4af-63f3-4b16-93c8-efdcd0950260"
>
<ReqRef
 Id="bc35119f-f1da-40d4-b6f7-b73c9ba07d98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="753bb071-f4c3-46b1-bb34-f966feff3684"
>
</ReqRef><ReqRef
 Id="5c440e26-b092-4abd-8105-dca981501e3f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec10f95f-44ce-4e3c-9c1e-bc7fd6a9c1bc"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="f9563cb3-4a7d-4ec0-b982-8a989233cfc1"
>BTM.CurrentBaliseGroup != []

  AND  

Message.N_PIG != LastReceivedBalise().N_PIG + 1
  AND  
Message.N_PIG != LastReceivedBalise().N_PIG - 1</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Add missed balises to list"
 Guid="c37a6131-48f8-4538-96f1-d0e80a225a25"
>
<Comment>If the received balise was not the next expected balise in the current group, the missed balise(s) will be added with the Missed flag.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Balise group orientation known"
 Guid="c801a564-49b2-4f3e-a03e-ffa9281add56"
>
<Comment>If the BG orientation is known (through linking) the missed balises are easy to fill in.</Comment>
<PreConditions>
<PreCondition
 Guid="f22d33c1-0c14-40e5-a78c-246730168bb4"
>BTM.BaliseGroupOrientation() != OrientationEnum.Unknown</PreCondition></PreConditions>
<Actions>
<Action
 Guid="30f9dad9-8438-4379-8738-fbb67c753a09"
>BTM.FillMissedBalises()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Balise group orientation unknown, nominal direction"
 Guid="90f11a70-cd77-42cd-a2c3-c316e2bd1b6b"
>
<Comment>If the BG orientation is not known, but the N_PIG of the new balise is greater than the N_PIG of the previous one, the orientation of the BG is nominal and the missing balises can be added.</Comment>
<PreConditions>
<PreCondition
 Guid="57f49648-3125-475b-b122-ad0fd95f36b3"
>Message.N_PIG &gt; LastReceivedBalise().N_PIG</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Add a second balise to CurrentBaliseGroup"
 Guid="9d23acde-90a3-4baf-af77-c13fd881958b"
>
<Comment>Add a second balise to the current balise group so that the orientation of the group is defined.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Add one balise in the nominal direction"
 Guid="f458f4ed-c6a0-4dc3-8db5-0298fc6bc2ee"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="940d96d7-c1a0-457c-93f1-24eef2f82615"
>INSERT
BTM.StoredBaliseStruct{
    Telegram =&gt; Messages.EUROBALISE.Message{
        Q_UPDOWN =&gt; LastReceivedBalise().Q_UPDOWN,
        M_VERSION =&gt; LastReceivedBalise().M_VERSION,
        Q_MEDIA =&gt; LastReceivedBalise().Q_MEDIA,
        N_PIG =&gt; LastReceivedBalise().N_PIG + 1,
        N_TOTAL =&gt; LastReceivedBalise().N_TOTAL,
        M_DUP =&gt; Messages.M_DUP.No_duplicates,
        M_MCOUNT =&gt; Messages.M_MCOUNT.The_telegram_fits_with_all_telegrams_of_the_same_balise_group,
        NID_C =&gt; LastReceivedBalise().NID_C,
        NID_BG =&gt; LastReceivedBalise().NID_BG,
        Q_LINK =&gt; LastReceivedBalise().Q_LINK,
        Sequence1 =&gt; [],
        BitField =&gt; &apos;&apos;
    },
    Missed =&gt; True
}
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Fill other missing balises"
 Guid="3aa0e4a6-721c-4b7e-abd6-43e494b29bd2"
>
<Comment>Fill any otehr missing balises.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Fill Missed Balises"
 Guid="f2d47f76-4fae-4442-b49f-673b43f46a82"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="7dd2548f-9ba5-42c0-94dc-1aee74203bd0"
>BTM.FillMissedBalises()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Balise group orientation unknown, reverse direction"
 Guid="d638d8bb-34d9-4ba6-b108-1e02673528c3"
>
<Comment>If the BG orientation is not known, but the N_PIG of the new balise is less than the N_PIG of the previous one, the orientation of the BG is reverse and the missing balises can be added.</Comment>
<PreConditions>
<PreCondition
 Guid="52b1a78c-1123-450e-b6aa-4403d2641216"
>Message.N_PIG &lt; LastReceivedBalise().N_PIG</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Add a second balise to CurrentBaliseGroup"
 Guid="477aa7e5-2d35-428f-bde3-7e87b96fc4d2"
>
<Comment>Add a second balise to the current balise group so that the orientation of the group is defined.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Add one balise in the nominal direction"
 Guid="22404532-dd16-4337-a6ed-23d624a25d7d"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="ceff6272-909c-4ca3-9ce6-7df72fb29734"
>INSERT
BTM.StoredBaliseStruct{
    Telegram =&gt; Messages.EUROBALISE.Message{
        Q_UPDOWN =&gt; LastReceivedBalise().Q_UPDOWN,
        M_VERSION =&gt; LastReceivedBalise().M_VERSION,
        Q_MEDIA =&gt; LastReceivedBalise().Q_MEDIA,
        N_PIG =&gt; LastReceivedBalise().N_PIG - 1,
        N_TOTAL =&gt; LastReceivedBalise().N_TOTAL,
        M_DUP =&gt; Messages.M_DUP.No_duplicates,
        M_MCOUNT =&gt; Messages.M_MCOUNT.The_telegram_fits_with_all_telegrams_of_the_same_balise_group,
        NID_C =&gt; LastReceivedBalise().NID_C,
        NID_BG =&gt; LastReceivedBalise().NID_BG,
        Q_LINK =&gt; LastReceivedBalise().Q_LINK,
        Sequence1 =&gt; [],
        BitField =&gt; &apos;&apos;
    },
    Missed =&gt; True
}
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Fill other missing balises"
 Guid="d29af369-e613-40d6-be03-cd08c7e44853"
>
<Comment>Fill any otehr missing balises.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Fill Missed Balises"
 Guid="a4628bc2-1d3a-4f1c-b9c2-903235212585"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f48e875d-60fc-4393-9404-d6e475ce83ec"
>BTM.FillMissedBalises()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Store message"
 Guid="e7fd0848-9ab3-4368-b4b7-c0c0cd1f728e"
>
<Comment>Stores the received information into the corresponding variable.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Store message"
 Guid="74dfa027-a200-477e-af85-e70bf20148b1"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="989096bd-3294-40f5-81b7-908279de9c8e"
>INSERT 
BTM.StoredBaliseStruct
{
    Telegram =&gt; Message,
    Missed =&gt; False
}

IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Keep position of the balise"
 Guid="1ec3b0d7-6c60-465f-87b2-a26fb677f799"
>
<Comment>Stores the position of the first balise of that balise group in order to be used later to compute the position of the new LRBG (in case that balise group will become the LRBG).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Keep position of the balise"
 Guid="62e6627c-c2b6-4ac1-88e4-ffa9aa764485"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2b0bea2f-701c-4d39-b9fb-f12ed87bc4e4"
>BTM.PrevBalisePosition &lt;- Odometry.NominalDistance</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="UpdateINTERNAL"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="All balises have been received for the balise group"
 Guid="cfeca65f-2c5b-4b0a-88b7-aeb5a11123da"
>
<Comment>If telegrams from all balises of the current balise group have been received, the on-board handles the new message.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="All balises have been received for the balise group"
 Guid="1e6e1aef-6e2f-455a-a63e-f24a5d6fc960"
>
<Comment>N_TOTAL is the number of balises - 1</Comment>
<PreConditions>
<PreCondition
 Guid="4c98c872-6bf7-41f9-b74a-be01dbe0b55c"
>BTM.FullBGReceived()</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e7bdbad0-03e6-4eab-af45-686bb9024af6"
>BTM.Linking.CheckBGBeforeHandling()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="930"
 Y="190"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleNewPacketMA"
 Guid="bdc26224-250c-4d50-8ae8-d9ec84234e3c"
>
<ReqRef
 Id="88930fd0-2a41-48f8-ac88-35d8c1d60f47"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6f1cbf9-29c8-4649-9b08-544b1339877e"
>
</ReqRef><ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b8f11c54-8dc8-4a66-af11-81361ca406bc"
>
</ReqRef><Comment>The MA is always considered after all other packets of a message have been processed. This is mandatory to ensure that all preconditions for an MA (which may have been transmitted within this message as well) can be evaluated before the evaluation of the MA.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.SubStructure1"
 Name="aPacket"
 Guid="54997a24-4291-4c2b-af79-ec289b4ffc8f"
>
</Parameter><Parameter
 Type="Messages.NID_BG"
 Name="NID_BG"
 Guid="cc8b1b6c-e14e-4007-9bcc-6d4feeaab3c2"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle new MA"
 Guid="27f968b8-6c75-4806-a96d-44abe1a92a13"
>
<Comment>Processes the received information about the movement authority.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="MA Lvl1 available"
 Guid="d268c47d-602c-4549-aab4-1541c75205f4"
>
<ReqRef
 Id="ab5117d0-92b0-4488-9084-9e07dba02cec"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c47a5a53-84ac-4562-9979-531be2defee9"
>
</ReqRef><ReqRef
 Id="f4723221-15fd-4636-851f-08a437cc18e6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="79026bf6-0003-44dd-80e2-90afc8b8b987"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22f70d1a-a76e-439c-bdf5-1a10880797ea"
>
</ReqRef><ReqRef
 Id="ab682687-0117-4289-925f-65a6680a3644"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="935b840f-0f34-460d-ad5e-dfeb473503a5"
>
</ReqRef><ReqRef
 Id="20241a08-e360-4144-b573-5a0e657dd9a2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5a25dc54-29d3-4938-b92e-fb0f5b37a2c7"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="22595e3b-4c44-4777-84e9-d057f61ad1b1"
>
</ReqRef><Comment>Processes the MA for level 1.</Comment>
<PreConditions>
<PreCondition
 Guid="5277d858-f9be-415e-b52c-0e742bb35c08"
>ConsiderBTMPacket ( PacketOrientation =&gt; aPacket.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Q_DIR )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e8f2e263-eb09-49d0-93f3-2f4d98af2694"
>Kernel.MA.MALvl1ProfileReceived
(
    Packet =&gt; aPacket.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY,
    NID_BG =&gt; NID_BG,
    aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation()
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="820"
 Y="10"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleBaliseMessage"
 Guid="48414d07-b40a-4ad6-be9e-77b423eb55fe"
>
<ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="317e2736-b0b7-47c7-9014-449ecf227483"
>
</ReqRef><Comment>Movement authority has to be considered after all other packets of a message have been processed, since some preconditions to accept MA can be transmitted in the same message.

The parameter DistanceFromLRBG is needed for the case when the handled BG will become the new LRBG. All stored distances in the EVC will need to be updated by this distance.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="aLinkingUsed"
 Guid="c45a5f69-5ef0-413f-bf79-21b6c6001536"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle LRBG"
 Guid="a0bf5168-6256-43d5-9291-b6437f385e01"
>
<ReqRef
 Id="50574953-3247-4859-8de2-1049ab46e862"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ac0c1363-8c77-4d99-ab2c-8aa09208dbb3"
>
</ReqRef><ReqRef
 Id="18834f9f-2f32-40fe-9d9a-97c8e2991f93"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4be0e5a1-144c-4987-9970-de1652eaa020"
>
</ReqRef><Comment>Verifies if the current balise group is an LRBG candidate (in that case the LRBG is updated) or is unlinked (in that case the information related to the last unlinked balise group is updated). In all the cases the new balise group is stored in the list of previous balise groups.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="The BG becomes LRBG"
 Guid="604b0d58-795f-4720-86b5-1b92956a4206"
>
<ReqRef
 Id="997012e6-1938-4ed6-b9fe-4a696ee0c30f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="936076b4-52d1-470d-adbe-5d793f0c72ac"
>
</ReqRef><Comment>If the current balise group is a candidate to become a new LRBG, then it is stored as a new LRBG.</Comment>
<PreConditions>
<PreCondition
 Guid="f59f7d3d-8d42-4bdd-bbd8-4c554420d5a0"
>BTM.LRBG.NID != BG_To_LRBG((LAST X IN CurrentBaliseGroup).Telegram.NID_BG)</PreCondition><PreCondition
 Guid="9a0cc237-370c-4dcb-b53c-9bf804dd2a0d"
>BTM.LRBGCandidate( )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="3c939d6a-99af-451a-b12d-368fece30c2a"
>BTM.HandleNewLRBG(
    BG_To_LRBG( (LAST X IN CurrentBaliseGroup).Telegram.NID_BG),
    aDistanceFromRef =&gt; Linking.DistanceFromReference( aLinkingUsed )
)</Action><Action
 Guid="eec330f2-bae4-4027-998f-3bed4d222121"
>INSERT
  BTM.PreviousBaliseGroupStruct
  {
      BaliseGroup =&gt; BaliseGroupStruct
      {
          Position =&gt; BGLocationReference.Position,
          NID =&gt; BTM.UpdatedReceivedMessage(BTM.Message).NID_BG,
          Orientation =&gt; BaliseGroupOrientation(),
          Timestamp =&gt; BGLocationReference.Timestamp
      },
      IsLRBG =&gt; Boolean.True,
      IsSingle =&gt; CurrentBGIsSingle()
  }
  IN BTM.PreviousBaliseGroups
  WHEN FULL REPLACE BTM.FarthestBG()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="The BG is unlinked"
 Guid="51d206fc-d4b1-42ee-8e76-c5ffeea965a5"
>
<ReqRef
 Id="d5dcae2f-5a41-4d4b-ab0d-436579a7646a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e617305-b06c-466c-a6bc-26a12f4ef8ba"
>
</ReqRef><Comment>Otherwise, if the balise group is unlinked, stores the position of that unlinked balise group, which may be used for position reporting. The balise group is also stored in the list of previous balise groups in case it will be needed for the geographical position reporting.</Comment>
<PreConditions>
<PreCondition
 Guid="1f80f179-74aa-465e-b6d3-e15aba062a97"
>BTM.UpdatedReceivedMessage(BTM.Message).Q_LINK == Messages.Q_LINK.Unlinked</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c995c1c6-6e01-4775-b912-22de76bd76ca"
>BTM.HandleUnlinkedBG(BTM.UpdatedReceivedMessage(BTM.Message))</Action><Action
 Guid="e0d92db1-ce43-4385-ae52-42c474a91e91"
>INSERT
  BTM.PreviousBaliseGroupStruct
  {
      BaliseGroup =&gt; BaliseGroupStruct
      {
          Position =&gt; BGLocationReference.Position,
          NID =&gt; BTM.UpdatedReceivedMessage(BTM.Message).NID_BG,
          Orientation =&gt; BaliseGroupOrientation(),
          Timestamp =&gt; BGLocationReference.Timestamp
      },
      IsLRBG =&gt; Boolean.False,
      IsSingle =&gt; CurrentBGIsSingle()
  }
  IN BTM.PreviousBaliseGroups
  WHEN FULL REPLACE BTM.FarthestBG()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Otherwise"
 Guid="45fc3591-bbef-464e-9eef-5658c496eb8d"
>
<Comment>Stores the balise group in the list of previous balise groups.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="a0a2bd8f-ac0c-44b6-aa24-93d5263d8371"
>INSERT
  BTM.PreviousBaliseGroupStruct
  {
      BaliseGroup =&gt; BaliseGroupStruct
      {
          Position =&gt; BGLocationReference.Position,
          NID =&gt; BTM.UpdatedReceivedMessage(BTM.Message).NID_BG,
          Orientation =&gt; BaliseGroupOrientation(),
          Timestamp =&gt; BGLocationReference.Timestamp
      },
      IsLRBG =&gt; Boolean.False,
      IsSingle =&gt; CurrentBGIsSingle()
  }
  IN BTM.PreviousBaliseGroups
  WHEN FULL REPLACE BTM.FarthestBG()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle Level Transition Order in balise telegrams"
 Guid="099aa022-31f0-4aae-aa5c-48dc76bdc4cb"
>
<Comment>First, handle the &quot;non-MA&quot; packets in all the telegrams.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle level transition order packet in balise telegrams"
 Guid="ef4783a5-3854-483a-8f53-38b1d9e72164"
>
<ReqRef
 Id="c858a6b4-4d06-4efa-83f0-ac640ef8c373"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0e4ea8db-5735-48ad-b453-daa31396cfc8"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2ee57ad5-960b-4923-b510-882802803ed1"
>APPLY BTM.HandleNewPacketLevel ( aPacket =&gt; BTM.LevelOfTelegram(X.Telegram) ) ON BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle general packets in balise telegrams"
 Guid="afdc7b3a-9acf-4598-a628-bdf218a7beb3"
>
<Comment>First, handle the &quot;non-MA&quot; packets in all the telegrams.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle general packets in balise telegrams"
 Guid="e7516273-ac16-4172-b145-c531401e38e3"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="71fe05ea-2e2a-441e-a4c5-fa8e04162cb8"
>APPLY BTM.HandleBaliseTelegram ( X.Telegram ) ON BTM.CurrentBaliseGroup | BTM.BaliseTelegramToBeHandled ( Message =&gt; X )</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Inform driver if message contains the default balise information"
 Guid="be70b65b-0e74-4a34-962a-f92f146bf80d"
>
<ReqRef
 Id="2a940406-f81d-432f-bdd6-c0e58ba44bd7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d4f2255-bb8d-4158-9c75-a2c7ecaf5042"
>
</ReqRef><Comment>If any packet contains default balise information, inform the driver.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Message contains default balise information"
 Guid="943f01e2-9679-4524-9ee7-838f59c39f99"
>
<ReqRef
 Id="5c7f8e6f-d144-42ee-91a5-5bc97116d06d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7e8724cc-a785-4971-9cf7-fcfcfeadb124"
>
</ReqRef><PreConditions>
<PreCondition
 Guid="5d040986-926c-4036-9c26-980d15c5393d"
>THERE_IS telegram IN BTM.CurrentBaliseGroup | (THERE_IS packet IN telegram.Telegram.Sequence1 | Available(packet.TRACK_TO_TRAIN.DEFAULT_BALISE_LOOP_OR_RIU_INFORMATION) )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8622ac62-4d7c-438c-bd38-586c990410ff"
>INSERT
  Kernel.TextMessages.PlainTextMessageStruct
  {
    Text =&gt; &apos;Default balise information received.&apos;
  }
IN
  Kernel.TextMessages.PlainTextMessages</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle MA packet in balise telegrams"
 Guid="8bf64490-ce74-42a8-aa77-fcbf0d2bf6c9"
>
<Comment>Then, handle the movement authority packet.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle MA packet in balise messages"
 Guid="ae268b7a-92cb-4598-bc02-a2f04005d973"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2b02118c-1658-46b1-bae6-dc0ff97ec611"
>APPLY BTM.HandleNewPacketMA
(
    aPacket =&gt; BTM.MAOfTelegram ( aTelegram=&gt; X.Telegram ) ,
    NID_BG =&gt; X.Telegram.NID_BG
)
ON BTM.CurrentBaliseGroup | BTM.BaliseTelegramToBeHandled ( X )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle Mode Profile packet in balise telegram"
 Guid="0df23762-fca4-4e00-9a26-27caab55459e"
>
<ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7b907baf-4341-4167-b523-4aae1850c852"
>
</ReqRef><ReqRef
 Id="6f370d19-a99b-404b-9718-80331a17d9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="211eb7c7-66d8-48d5-9e32-d1658184c3de"
>
</ReqRef><Comment>After the MA has been handled, the Mode Profile can eventually be accepted (only if the MA was accepted).</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle Mode Profile packet in balise telegram"
 Guid="5f12ad32-9f33-4855-a8a7-0406c9644f44"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="42ecabaf-6fb9-4cf2-887a-2b6158ff1c6b"
>APPLY BTM.HandleNewPacketModeProfile
(
    aPacket =&gt; BTM.ModeProfileOfTelegram ( aTelegram=&gt; X.Telegram )
)
ON BTM.CurrentBaliseGroup | BTM.BaliseTelegramToBeHandled ( X )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="930"
 Y="130"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="HandleNewPacketModeProfile"
 Guid="1944fec5-3bdf-4188-bae3-2f4676823c84"
>
<ReqRef
 Id="88930fd0-2a41-48f8-ac88-35d8c1d60f47"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="327fe63c-a58e-45b6-a4f7-aa9e9d058dca"
>
</ReqRef><ReqRef
 Id="5fff9a06-3432-4ce9-b8e0-9b36de116805"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="47e771f6-5cb8-418d-8a8f-d306bc4e0969"
>
</ReqRef><ReqRef
 Id="8d9ca13d-bff4-486f-9cb1-dc825fd1b8ab"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10ed8719-2633-4bac-9d30-818eca542056"
>
</ReqRef><ReqRef
 Id="e9f9dfc1-5e6c-4920-958e-20889458cdd1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4fc3a6d4-dde6-4b59-8768-f24fd3bab2a2"
>
</ReqRef><Comment>The mode profile can only be considered after the MA has been procedded, in order to know if it was accepted (otherwise the mode profile is not accepted).</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.SubStructure1"
 Name="aPacket"
 Guid="5c7546c7-4909-41d5-8d37-9e05094dbc02"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle new Mode Profile"
 Guid="8067cb79-ba71-43b8-b67b-e757bdff0e4d"
>
<ReqRef
 Id="2922527c-9e20-48f5-a094-94014ef0aa69"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0cec26e1-e2c2-492c-a5f0-6d75fe7ab6c5"
>
</ReqRef><ReqRef
 Id="6f370d19-a99b-404b-9718-80331a17d9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c8dedcf6-2bea-4a5e-a397-4f5999089794"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Handle new Mode Profile"
 Guid="423c865a-29c8-402c-807e-61b70a9a5867"
>
<ReqRef
 Id="e6b9b34b-5183-45ec-96a2-8eef4909b34c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="19dec718-ae7c-4f9b-bf59-fe5f4a2ce5f5"
>
</ReqRef><ReqRef
 Id="85399986-8b1a-4ee5-ba62-20eb7ca0a3b9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d5a8e89a-68af-46b9-8e80-d01bc69509be"
>
</ReqRef><ReqRef
 Id="4a580e9d-fd64-4951-b7a4-51530d1469e7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b5a95273-5ea6-47fe-88d7-09f109a361f6"
>
</ReqRef><ReqRef
 Id="2ef2992f-43ce-4f58-abf6-55560cf910bd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be414b46-e05a-49d0-81d0-276ad0fd8fff"
>
</ReqRef><ReqRef
 Id="98b78c68-b649-45c4-9dd8-6bfbf4a8f9c1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="60c748c4-6ffd-48db-8256-509ca1d5e9df"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9874877b-cfc0-4e98-b18c-b9bfda371e57"
>
</ReqRef><Comment>Handles Mode Profile packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="7c611cdb-ccf2-4f3c-a343-9d77f47c5412"
>ConsiderBTMPacket ( PacketOrientation =&gt; aPacket.TRACK_TO_TRAIN.MODE_PROFILE.Q_DIR )</PreCondition><PreCondition
 Guid="8d956f8e-378b-482f-bc27-26c54c49af35"
>Kernel.MA.MAIsAccepted</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2db6933b-ffcd-41fc-b5ab-90177389d406"
>Kernel.MA.ModeProfile.ModeProfileReceived (
    Packet =&gt; aPacket.TRACK_TO_TRAIN.MODE_PROFILE,
    GenericLSMarker =&gt; Kernel.Modes.LimitedSupervision.LSMarkerPresent(
    Messages =&gt; BTM.CurrentBaliseGroup
    ),
    aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation()
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="710"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="CheckMessageConsistency"
 Guid="2f965c87-2f8c-4600-b483-b4f6a4727ef3"
>
<ReqRef
 Id="00031a80-e9f3-4821-a0a6-1d322a75fa85"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ee841afd-b9d4-45b2-84d0-73e93644497d"
>
</ReqRef><ReqRef
 Id="3324bf1d-eedf-4227-a95f-86ca4e2d72e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3836d49-aca0-49a1-948a-a461a3990755"
>
</ReqRef><ReqRef
 Id="eab92131-53b1-4cd9-9251-e5b397a83350"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a02e38c5-2d32-4af1-b5f1-02a4b5e0eed5"
>
</ReqRef><ReqRef
 Id="53747e4e-7f05-4bf8-9573-a743730e9af0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10aa06fc-c00e-4664-a744-e3da17a8f538"
>
</ReqRef><ReqRef
 Id="752dcbf7-d97c-4790-bac1-1fc62dbf66f1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="10d31135-1137-47a8-927b-01174773018b"
>
</ReqRef><ReqRef
 Id="a7df0f1f-2d5f-4baa-b656-9ddbc4393074"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5b28b206-7ca5-4299-ba07-b501ebb0f6ab"
>
</ReqRef><ReqRef
 Id="d9803061-6365-4307-896d-2019de665b23"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f101c92d-4f1f-4654-80fa-a354511ae9dd"
>
</ReqRef><ReqRef
 Id="88b4d9a8-c67f-451c-a109-b4bb259672ac"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="957bb724-3a0d-4f68-beee-8ad9ddaf9aa0"
>
</ReqRef><ReqRef
 Id="758b6d57-bd6b-465f-b091-3477da12be7d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2c0d9f04-7890-4461-bc2b-8df1e24c66c4"
>
</ReqRef><ReqRef
 Id="68a7df3c-ca07-4adf-ac06-12ba8e631b5e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0ec4cff8-95f2-44a0-9a8b-6601e02be77d"
>
</ReqRef><ReqRef
 Id="d40be57e-365b-4f3a-ad26-7ff1d347c5f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5218926e-e01d-4548-b20b-1c8564a0abad"
>
</ReqRef><ReqRef
 Id="8bb7feaf-24fe-4d1a-9775-87e913521f1d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3f3dc563-fbb4-4d5b-b3db-8ed6b5674ad1"
>
</ReqRef><ReqRef
 Id="91521e6e-52aa-4c7b-bb7f-957007e8cee5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3820debf-99dc-47a0-b652-5b2840e5af18"
>
</ReqRef><ReqRef
 Id="04376925-d0f1-494f-bbdf-2723a7d3b9d4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="de8c089e-8198-48d5-b244-6f74e528d741"
>
</ReqRef><ReqRef
 Id="2acfcc15-b52e-4162-a72e-a4ff1e9f43e1"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da5f50fe-5158-4042-86fa-f252ed1468a6"
>
</ReqRef><ReqRef
 Id="da9f0886-9eda-4e06-91e4-41094a7a488f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d84588ba-98c7-4879-94ab-21a2ef019cbb"
>
</ReqRef><Comment>Check the contents of the message before the contents are handled by the on-board.</Comment>
<Parameters>
<Parameter
 Type="Boolean"
 Name="LinkingUsed"
 Guid="218ab384-067e-4bd6-b26e-9b940b2bb330"
>
</Parameter><Parameter
 Type="Linking.LinkingReaction"
 Name="LinkingReaction"
 Guid="eeb450e8-3433-465f-8589-ce73709aeaf0"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Check message contents"
 Guid="8abdf11d-ca6c-48d1-a863-bc481bfa758c"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Message is inconsistent"
 Guid="9c7ee774-de31-4186-abe0-60ac91047dbf"
>
<Comment>Apply the linking reaction if the message is inconsistent.</Comment>
<PreConditions>
<PreCondition
 Guid="9a7ebaab-1cb6-4f18-be81-d5d8666bf161"
>BTM.MessageIsInconsistent(LinkingUsed)</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Apply the linking reaction or the service brake"
 Guid="f540b567-9757-4617-8fb2-1ffbac46844e"
>
<Comment>If the message is inconsistent, apply the linking reaction (if the BG was linked) or the service brake.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Linked BG, apply the linking reaction"
 Guid="19981dd2-0342-463c-a447-172153432f43"
>
<Comment>Apply the linkking reaction.</Comment>
<PreConditions>
<PreCondition
 Guid="14721962-4414-4fff-9854-c596dbf177bd"
>LinkingUsed</PreCondition></PreConditions>
<Actions>
<Action
 Guid="0fec3662-dbbc-49b3-b82f-212da0f1bec2"
>BTM.Linking.ApplyLinkingReaction(LinkingReaction)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No linking, check for Inhibition of service brake packet"
 Guid="0773b7df-4bca-4564-9ef5-8fdcf72c4da5"
>
<ReqRef
 Id="9a012f78-f887-493d-bdeb-3fe90b475b44"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94c587d5-d271-4978-841d-91f4d8adeec7"
>
</ReqRef><ReqRef
 Id="79632341-1718-4a2e-b6d6-dbdd628d9fa2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0a9686a9-dd4b-46c8-9fbb-1a324595063c"
>
</ReqRef><ReqRef
 Id="c714f3fb-5bad-4115-8fd3-588a1387795d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f7c940fd-91da-4fc1-8254-7e15fc6b6fca"
>
</ReqRef><ReqRef
 Id="bc203fe9-a734-483d-acef-f8bc36a5ce00"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2edfa02a-d88d-4256-a9ae-217947b96438"
>
</ReqRef><ReqRef
 Id="a75f8e41-42b7-4bc1-a2c2-27a5f6e2b0e2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3232392f-a91c-499c-b76d-9dfb71a4b160"
>
</ReqRef><ReqRef
 Id="edd66dcd-afe0-4315-8892-06477a24808f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b9ee6c4e-b52b-4298-a3fc-a87f05bca9ac"
>
</ReqRef><Comment>Apply the service brake for an unlinked balise group, unless the BG information includes the packet &quot;Inhibition of the balise group message inconsistency reaction&quot;.</Comment>
<PreConditions>
<PreCondition
 Guid="b62df68a-af59-44c2-b28f-677c97e51814"
>NOT THERE_IS balise IN BTM.CurrentBaliseGroup | 
(
    THERE_IS packet IN balise.Telegram.Sequence1 | 
        Available(packet.TRACK_TO_TRAIN.INHIBITION_OF_BALISE_GROUP_MESSAGE_CONSISTENCY_REACTION) 
)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="e116e90f-40b7-447f-9f12-239d064059f9"
>BTM.Linking.ApplyLinkingReaction(LinkingReaction)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Delete stored information"
 Guid="1ed17502-7942-4af5-885a-a37977d47cf1"
>
<Comment>If a message was rejected due to its data consistency, and the service brake is applied, store this information for future shortening of the location based data.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="No linking, BG marked as linked"
 Guid="9a930249-e076-47e8-8d7b-0ebaf3e7f815"
>
<ReqRef
 Id="ea29ed49-2305-4c0a-9a5f-18be4773caa4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="0add2c8e-3b61-49b4-8663-0f9c16c6a9c4"
>
</ReqRef><Comment>First case: linking is not used on-board and the rejected BG is marked as linked.</Comment>
<PreConditions>
<PreCondition
 Guid="d295d0ec-d8e8-4fef-92ae-7e902958d77a"
>(FIRST X IN BTM.CurrentBaliseGroup).Telegram.Q_LINK == Messages.Q_LINK.Linked</PreCondition><PreCondition
 Guid="cecf9dc1-c9cf-4511-85dd-5fb4e42b0f3f"
>NOT LinkingUsed</PreCondition></PreConditions>
<Actions>
<Action
 Guid="6ab93631-fbfd-45db-9678-e65420363e8c"
>Kernel.HandlingOfAcceptedAndStoredInformation.LinkedBGInconsistency_NoLinking &lt;- True</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No linking, BG marked as unlinked"
 Guid="a5fdd935-9dbb-47a6-867a-cbd671e4c80e"
>
<ReqRef
 Id="d92c56a7-724f-43e7-846d-86012a4ec60e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e68b5f1c-1948-4754-8beb-f840325d5ef3"
>
</ReqRef><Comment>Second case: the rejected BG is unlinked.</Comment>
<PreConditions>
<PreCondition
 Guid="3c0ea399-4765-47a4-bf81-775189917311"
>NOT LinkingUsed</PreCondition><PreCondition
 Guid="fcbdcef4-2c10-4095-839b-c8d711ab5ef8"
>(FIRST X IN BTM.CurrentBaliseGroup).Telegram.Q_LINK == Messages.Q_LINK.Unlinked</PreCondition></PreConditions>
<Actions>
<Action
 Guid="23f3af28-61d8-4911-a424-2cb14b1149c6"
>Kernel.HandlingOfAcceptedAndStoredInformation.UnlinkedBGInconsistency &lt;- True</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Linking used"
 Guid="8ec790c6-961c-40ea-afd7-3c26605eb33b"
>
<ReqRef
 Id="645b4e18-c87b-4cb7-85d9-44ac2e4bf60e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4e61788f-8398-4950-b223-91c62b0115aa"
>
</ReqRef><Comment>Third case: the rejected message is linked and was present in the linking data.</Comment>
<PreConditions>
<PreCondition
 Guid="9e4c8fbc-8558-43d1-b40a-9cc2b58fefa7"
>LinkingUsed</PreCondition><PreCondition
 Guid="74ff1606-3978-495d-8928-df9d3fd80853"
>LinkingReaction == BTM.Linking.LinkingReaction.CommandServiceBrake</PreCondition></PreConditions>
<Actions>
<Action
 Guid="dcc88356-9b44-4c14-908e-20a1f05c099c"
>Kernel.HandlingOfAcceptedAndStoredInformation.LinkingReactionAppliedServiceBrake &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Report error to the RBC"
 Guid="cf3d4157-a6f6-4ed5-9b82-07997153d298"
>
<ReqRef
 Id="4aa64d47-8749-4bf5-b24e-7831ff609718"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8c15ceb3-2d33-4c9b-85e5-149c146ea5e2"
>
</ReqRef><ReqRef
 Id="a3885eb8-93e0-4d9c-8084-7fb3d864615a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c4598a32-0452-4045-b9bf-ceb43a8e1aa9"
>
</ReqRef><ReqRef
 Id="25a9a61a-cb48-4ecc-9297-199f5897d32b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da224f20-9f09-400d-8305-192f1612a5d6"
>
</ReqRef><ReqRef
 Id="65c0616d-9c81-42f1-907b-c71e0d73d3ff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d59abadd-09e6-460c-8762-4a70acf8be97"
>
</ReqRef><Comment>Report the consistency error to the RBC, if there is a connection.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Send position report with error information"
 Guid="812b290e-0841-41bd-97e2-01729a2763f7"
>
<PreConditions>
<PreCondition
 Guid="1ab6b030-5011-4880-9827-8285d95422cf"
>EURORADIO.SafeRadioConnectionAvailable()</PreCondition><PreCondition
 Guid="e9f371b8-3016-4d71-afad-73cc64ced5e8"
>(FIRST X IN BTM.CurrentBaliseGroup).Telegram.Q_LINK == Messages.Q_LINK.Unlinked
  OR  
LinkingUsed</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Initialize position report"
 Guid="eb237159-2237-4fdb-989b-f6e2296cac0e"
>
<Comment>First, initialize the position report that will contain the error report.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Initialize position report"
 Guid="59ad9973-7bce-4aca-b622-813ffc610397"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="cd4fe6d9-0eee-4641-b59c-89f956bf7b03"
>EURORADIO.CurrentRBCConnection().SendPositionReport()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Add error report"
 Guid="56333c3f-2592-43a6-ac62-8d7284716de7"
>
<Comment>Add the error report to the position report.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Linked BG"
 Guid="65d44a0f-99db-4d1b-923f-f4c158dfe2c1"
>
<Comment>Linked BG.</Comment>
<PreConditions>
<PreCondition
 Guid="1b712eb9-748d-46bf-8c8d-c27d38cd9233"
>(FIRST X IN BTM.CurrentBaliseGroup).Telegram.Q_LINK == Messages.Q_LINK.Linked</PreCondition><PreCondition
 Guid="ef730bb5-0b67-4d71-b150-1292cafb0287"
>EURORADIO.CurrentRBCConnection().SessionManagementData.SystemVersion.Value == VersionManagement.SystemVersionEnum.Version2_0</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a799a8d5-87d6-44ca-89ee-51fdaf8c1bda"
>INSERT Messages.MESSAGE.TRAIN_TO_TRACK.TRAIN_POSITION_REPORT.SubStructure1{
    ERROR_REPORTING =&gt; Messages.PACKET.TRAIN_TO_TRACK.ERROR_REPORTING.Message{
        NID_PACKET =&gt; 4,
        L_PACKET =&gt; 0,
        M_ERROR =&gt; Messages.M_ERROR.Linked_balise_group__message_consistency_error_ref__3_16_2_4_1_4
    }
}
 IN EURORADIO.CurrentRBCConnection().MessageOut.SystemVersion2.TRAIN_POSITION_REPORT.Sequence1</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Unlinked BG"
 Guid="4daecb81-7538-4b24-adeb-8ef97d3f5496"
>
<Comment>Unlinked BG.</Comment>
<PreConditions>
<PreCondition
 Guid="65edcb1c-73ff-444e-a73a-95910c623c13"
>(FIRST X IN BTM.CurrentBaliseGroup).Telegram.Q_LINK == Messages.Q_LINK.Unlinked</PreCondition><PreCondition
 Guid="8fef0a34-9077-40dd-b45b-32573ed3e43a"
>EURORADIO.CurrentRBCConnection().SessionManagementData.SystemVersion.Value in [VersionManagement.SystemVersionEnum.Version1_0, VersionManagement.SystemVersionEnum.Version1_1]</PreCondition></PreConditions>
<Actions>
<Action
 Guid="799a57f6-ac42-4626-a3a5-fd1e9fba2324"
>INSERT Messages.MESSAGE.TRAIN_TO_TRACK.TRAIN_POSITION_REPORT.SubStructure1{
    ERROR_REPORTING =&gt; Messages.PACKET.TRAIN_TO_TRACK.ERROR_REPORTING.Message{
        NID_PACKET =&gt; 4,
        L_PACKET =&gt; 0,
        M_ERROR =&gt; Messages.M_ERROR.Unlinked_balise_group__message_consistency_error__ref__3_16_2_5
    }
}
 IN EURORADIO.CurrentRBCConnection().MessageOut.SystemVersion2.TRAIN_POSITION_REPORT.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Message is consistent"
 Guid="2adbfee2-3a06-4ae6-b57d-09d8b5423297"
>
<Comment>Handle the message if the information is consistent.</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="c46af0a5-54dd-4e2d-adbb-afc3406c6de9"
>BTM.HandleBaliseMessage(LinkingUsed)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="710"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="FillMissedBalises"
 Guid="e99e41d9-f8d3-423a-bd04-a0b2aabc3987"
>
<Comment>Adds up to 5 balises to the current balise group that were missed.</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill first balise"
 Guid="d1322e8e-c3f8-4c67-87ac-9003f5349526"
>
<Comment>Add one missed balise.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill first balise"
 Guid="1406740e-f54c-42ce-8f23-93b168bfbfc0"
>
<PreConditions>
<PreCondition
 Guid="9fd64923-94f0-464b-82e9-a6243ada4bc6"
>LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG + 1
 AND 
LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG - 1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="269ffc58-b53a-4182-9558-421f80084683"
>INSERT
BTM.MissedBalise()
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill second balise"
 Guid="a0da1e9c-c7d5-4eb7-9b9b-ebac967f1369"
>
<Comment>Add a second missed balise.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill second balise"
 Guid="e9f30030-5ed6-4527-941c-669ddc889dfd"
>
<PreConditions>
<PreCondition
 Guid="3800c011-d0cf-4915-bef9-99ef9ea72e9a"
>LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG + 1
 AND 
LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG - 1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="d3c9bdd5-859e-40a0-bdb2-694159fc5769"
>INSERT
BTM.MissedBalise()
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill third balise"
 Guid="2dfea6f6-0814-4645-8606-e89b86d3c723"
>
<Comment>Add a third missed balise.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill third balise"
 Guid="72694f04-4aca-4a24-9258-f7cc6cebeccc"
>
<PreConditions>
<PreCondition
 Guid="a200c8cf-88fa-4abe-8ca8-4b4dd1572ce7"
>LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG + 1
 AND 
LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG - 1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="810c1cad-4be1-483a-8474-bb40d256d36f"
>INSERT
BTM.MissedBalise()
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill fourth balise"
 Guid="17a638e7-97ca-4d0b-ba69-1e3b711354e1"
>
<Comment>Add a fourth missed balise.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill fourth balise"
 Guid="3cb99b92-c0cb-4ade-b353-2a71042c3ff9"
>
<PreConditions>
<PreCondition
 Guid="0cb9b3ad-9837-4d08-afac-2ba347c89a90"
>LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG + 1
 AND 
LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG - 1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="a9da04e6-a71a-4157-a364-9a9315fc5433"
>INSERT
BTM.MissedBalise()
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill fifth balise"
 Guid="ef79f102-ef8e-4586-9445-56a3c94b89a4"
>
<Comment>Add a fifth missed balise.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Fill fifth balise"
 Guid="f297aedf-3482-4714-b468-810ba4bba120"
>
<PreConditions>
<PreCondition
 Guid="5ec57daa-1517-4d77-93ca-325a3c78f44c"
>LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG + 1
 AND 
LastReceivedBalise().N_PIG != BTM.UpdatedReceivedMessage(BTM.Message).N_PIG - 1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="9402818a-0fb2-4a36-a5a8-e417a291cc7b"
>INSERT
BTM.MissedBalise()
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="930"
 Y="70"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleNewPacketLevel"
 Guid="cd48daec-c5f9-42d7-948a-b15ddcd6011c"
>
<ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4dc9d4ef-47ac-4ed6-a943-e7e218800ed6"
>
</ReqRef><ReqRef
 Id="b5196e2e-7094-49d5-ac1b-4bcf4821fd9a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1dfc093a-539a-4301-abf2-1569bce44645"
>
</ReqRef><Comment>This procedure is called for each packet received with a balise telegram.</Comment>
<Parameters>
<Parameter
 Type="Messages.EUROBALISE.SubStructure1"
 Name="aPacket"
 Guid="bb22bd3c-f060-4424-b9a6-a0ba1d40d8d6"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle new packet"
 Guid="072223b9-e474-4cc6-a225-4a2a53ebb625"
>
<ReqRef
 Id="88930fd0-2a41-48f8-ac88-35d8c1d60f47"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="33bc3f4d-253a-42a6-a167-bf8ab9270acc"
>
</ReqRef><Comment>We suppose that an element of type Messages.EUROBALISE.SubStructure1 can only contain one field defined, representing a single packet. The rule looks for the first available element and when it is found, calls the corresponding routing to store the received information.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level Transition Order available"
 Guid="b63d49ba-6c55-448a-bf8c-f29ffee83011"
>
<ReqRef
 Id="6b26f38c-d98d-4eee-a314-ae6b48256d36"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c5379316-9711-4e97-a5e5-4c67722863fe"
>
</ReqRef><ReqRef
 Id="3c872475-fbad-4a03-b13a-a6fa51c6a722"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d6265ba-635d-4bf9-bd06-18570008755f"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="77483f09-10ab-4f8a-a073-c4343999959b"
>
</ReqRef><Comment>Handles Level Transition packet, if available.</Comment>
<PreConditions>
<PreCondition
 Guid="3f3e1ed5-0eeb-4684-80ad-ad9fc77b5a4a"
>ConsiderBTMPacket ( PacketOrientation=&gt;aPacket.TRACK_TO_TRAIN.LEVEL_TRANSITION_ORDER.Q_DIR )</PreCondition></PreConditions>
<Actions>
<Action
 Guid="b24735ff-a130-4d30-8fe1-8cb69420ff6b"
>Kernel.LevelTransition.LTOReceived ( Packet=&gt;aPacket.TRACK_TO_TRAIN.LEVEL_TRANSITION_ORDER, aDistanceFromRef =&gt; BGLocationReference.Position.Position - Kernel.ReferenceLocation() )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="BaseTypes.Length"
 DefaultValue="0.0"
 VariableMode="Constant"
 X="560"
 Y="620"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="BGLocationDetectionError"
 Guid="e97a89af-3348-47eb-8fa4-8e19e66b5278"
>
<ReqRef
 Id="8a1fe4ea-dcfd-4748-bc1e-b8b0be8aa8e0"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="7a1dc460-abb3-4c24-8dd5-8632271e5b79"
>
</ReqRef><ReqRef
 Id="29095085-0fb7-4b73-9d32-ae4ead9cd37e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="57948d85-1356-4bc4-b9c8-e84ed230ec71"
>
</ReqRef><Comment>This variable represents the error in detection of balise group location by the train.</Comment>
</Variable><Variable
 Type="BaliseGroupStruct"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 X="690"
 Y="560"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="LRBG"
 Guid="06c55d45-6f6b-44e0-a0df-de6dc2de2e0a"
>
<ReqRef
 Id="3dbd1b48-23b6-40f9-a38e-77df9cc1ed68"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4b5a1282-7ddb-4f88-8fae-0f00fabb9e50"
>
</ReqRef><Comment>This variable holds information about the LRBG</Comment>
</Variable><Variable
 Type="BTM.Position"
 DefaultValue=""
 VariableMode="Internal"
 X="560"
 Y="560"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UnlinkedBGPosition"
 Guid="3c6eb797-49dd-4338-b5b4-c5259654cd5e"
>
<ReqRef
 Id="d5dcae2f-5a41-4d4b-ab0d-436579a7646a"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="af50a432-2fa9-4cc0-9306-cbc8cfac4344"
>
</ReqRef><Comment>Saves the information provided by the odometry at the moment where an unlinked balise group is passed. Used to compute the position, over and under reading amount relative to that unlinked balise.</Comment>
</Variable><Variable
 Type="BaliseGroupsCol"
 DefaultValue="[]"
 VariableMode="Internal"
 X="820"
 Y="300"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="PreviousBaliseGroups"
 Guid="4552d13d-fb1c-495c-950c-24ad3eb2d288"
>
<ReqRef
 Id="4147b6c6-84d8-452d-b38e-8479cb6dc795"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ceae857b-172a-46d7-96a7-5cf2bd79689b"
>
<Comment>Even if in the requiremets, the previous LRBG are decribed in the train position, it seemed more structured to place this list in the BTM namespace, near the LRBG</Comment>
</ReqRef><ReqRef
 Id="f7fc46b2-db95-4d3a-8dcc-19f1948d1fff"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="07beb723-31eb-4427-82db-90278134c80b"
>
</ReqRef><ReqRef
 Id="afb44275-4d8c-4d1d-9caf-212e30e4ec9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="61471da9-4946-45d0-a2a2-91035553eeb5"
>
</ReqRef><ReqRef
 Id="ee60d01b-a74d-40b9-88b2-c24f3198e572"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da4dcf60-1319-4a1e-8270-1c49be31027b"
>
</ReqRef><ReqRef
 Id="762a9a50-d079-460f-80fd-c72d91c43331"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9464e467-44ab-4a73-a921-0116fb51ac5d"
>
</ReqRef><Comment>Holds the balise groups that have been processed before.</Comment>
</Variable><Variable
 Type="BaliseGroupMessages"
 DefaultValue="[]"
 VariableMode="Internal"
 X="820"
 Y="380"
 Width="100"
 Height="50"
 Pinned="TRUE"
 NeedsRequirement="FALSE"
 Name="CurrentBaliseGroup"
 Guid="eb904a47-339a-4e18-b6b4-c87384133417"
>
<Comment>This variable holds the messages from the current balise group until the complete balise group has been encountered</Comment>
</Variable><Variable
 Type="BTM.LocationReferenceStruct"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 X="440"
 Y="560"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="BGLocationReference"
 Guid="c9196377-2261-4314-9003-09ebf1a43606"
>
<ReqRef
 Id="612e5c65-65af-4727-a4f9-ce73fbd5f0fb"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e6d606f3-70ac-4470-951d-f4420bd3bc38"
>
</ReqRef><ReqRef
 Id="77e74b63-e8c9-42d5-bcf6-0e5423c75697"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="000ae04c-6645-4522-ac18-7bc3b854db77"
>
</ReqRef><ReqRef
 Id="ffdc9150-a628-4750-a762-a41c20c3dd26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e3fb7efa-a924-4440-b381-37abe32d0b78"
>
</ReqRef><ReqRef
 Id="95219ef7-243a-49e7-bc9c-59ebced12f1f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="af03fb9a-b107-46cb-96a0-b6f77d0c0dd6"
>
</ReqRef><Comment>This is the position of the first balise (N_PIG == 0) in the balise group</Comment>
</Variable><Variable
 Type="BaseTypes.Distance"
 DefaultValue="0.0"
 VariableMode="Internal"
 X="690"
 Y="620"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="ActiveAntennaPosition"
 Guid="dff8c2aa-be92-4d2d-8c31-3afdce4eea69"
>
<ReqRef
 Id="858a955b-8eb5-4eac-b52e-49723ffd3d9b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="9644885b-91cf-4cf0-af4c-9addbcba8776"
>
</ReqRef><Comment>Distance between the front end of the train and the active Eurobalise antenna. We assume that ActiveAntennaPosition &gt; 0.</Comment>
</Variable><Variable
 Type="BaseTypes.Distance"
 DefaultValue=""
 VariableMode="Internal"
 X="940"
 Y="300"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PrevBalisePosition"
 Guid="a32948b1-dcc2-465c-8d69-ce4d370d4ed1"
>
<Comment>Keeps the position of the last seen balise in the current group.</Comment>
</Variable><Variable
 Type="BaseTypes.Distance"
 DefaultValue="12.0"
 VariableMode="Constant"
 X="930"
 Y="480"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MaxDistBetweenBalises"
 Guid="7adda4ab-61a3-476d-bc72-847fb2c849ec"
>
<ReqRef
 Id="9ffea548-e5d0-44d0-bd31-a689cd75d05b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="287db3e5-c003-44f7-b6f9-7ebcdff8ad05"
>
</ReqRef><Comment>The maximum distance between consecutive balises in the same balise group.</Comment>
</Variable><Variable
 Type="Messages.BTM.Message"
 DefaultValue="Messages.BTM.Message
{
  SystemVersion2 =&gt; EMPTY, 
  SystemVersion1 =&gt; EMPTY, 
  BitField =&gt; &apos;&apos;
}"
 VariableMode="InOut"
 X="590"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Message"
 Guid="1718ba3c-1f2d-488c-bcc0-2bc18b4a3118"
>
<ReqRef
 Id="8147a385-c93e-43f4-9eb0-fab4bf63ca62"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6afe7006-60ac-439e-bf42-1ee96a969e00"
>
</ReqRef><ReqRef
 Id="59fea6c8-0c78-47db-a58a-5de75ba1552b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f770e0b3-3697-4c32-8338-161d11649a23"
>
</ReqRef><Comment>This variable holds the balise message to be processed.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="CleanUp"
 X="260"
 Y="670"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="Clean Up"
 Guid="027c7622-f051-4f14-b4db-c9cc9b6487ff"
>
<ReqRef
 Id="299e44cd-9a5e-4f38-8721-bad782668787"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="396410a3-bfa4-4b05-898b-ee479d120e88"
>
</ReqRef><Comment>After processing the new telegram its content is deleted.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Clear just received balise telegram"
 Guid="e91bd168-b15b-4d39-9118-f43381b943f2"
>
<PreConditions>
<PreCondition
 Guid="4132dda5-2120-4cda-bde2-a390d3213f78"
>Available ( Message.SystemVersion1 )
  OR  
Available(Message.SystemVersion2)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="55b1daa4-5af4-4eac-af28-8e10152fc2c2"
>Message.SystemVersion2 &lt;- EMPTY</Action><Action
 Guid="7da08b97-ae8e-47fd-9114-27a1f90cc66e"
>Kernel.Infill.Data &lt;- EMPTY</Action><Action
 Guid="aa76230d-c79f-456c-95ac-adda5c0403e8"
>Message.SystemVersion1 &lt;- EMPTY</Action></Actions>
<SubRules>
<Rule
 Priority="CleanUp"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clear current balises from current balise group"
 Guid="1bbbe851-ae1a-4e5c-9e11-431e590cf623"
>
<Comment>When the current balises from the current balise group have been processed, clear its data</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Clear current balises from current balise group"
 Guid="9942d5a4-ca09-49f3-8cdd-781b0dc75e3e"
>
<PreConditions>
<PreCondition
 Guid="1815d0f4-a07e-4fde-b122-562327b7db22"
><Comment>This precondition is necessary since in some cases, e.g. during unauthorised reverse movement, balise messages may be refused.</Comment>
CurrentBaliseGroup != []</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Rule1"
 Guid="17bcfcf2-3688-4f18-a9c1-82cb23a61784"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Clear current balises from current balise group"
 Guid="d3bd4ad8-f46c-4cb9-862b-bc71aed28bbc"
>
<PreConditions>
<PreCondition
 Guid="80faa721-59ed-4ef4-a364-af49f0e5d159"
>( COUNT X IN BTM.CurrentBaliseGroup ) == LastReceivedBalise().N_TOTAL + 1</PreCondition></PreConditions>
<Actions>
<Action
 Guid="74d5488e-85d4-48e9-8de8-43a12dd4b955"
>BTM.CurrentBaliseGroup &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Verification"
 X="40"
 Y="670"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="Incomplete balise group received"
 Guid="898a6047-388a-4c9c-85e6-9dade9e6c758"
>
<ReqRef
 Id="bc35119f-f1da-40d4-b6f7-b73c9ba07d98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c3c391b3-dbad-4555-ae62-bae39fd7cfa2"
>
</ReqRef><ReqRef
 Id="bb8f4e12-123f-4746-81d4-bd86e68fad6b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2fa68c28-14b8-43b1-91c9-6e1043f1429b"
>
</ReqRef><Comment>If the on-board receives a balise telegram of a balise group different from the currently handled balise group, the current balise group is considered as incomplete.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Incomplete balise group received"
 Guid="dcd23c6f-268e-49a2-85cf-2797f253976c"
>
<PreConditions>
<PreCondition
 Guid="95d3af00-daf2-474d-a7c2-53f8614e06c6"
>Available ( BTM.UpdatedReceivedMessage(BTM.Message))</PreCondition><PreCondition
 Guid="ca2a5585-b8af-4d33-b11d-0f7a241172b0"
>(COUNT X IN BTM.CurrentBaliseGroup ) &gt; 0</PreCondition><PreCondition
 Guid="facbef4e-0427-43dc-8246-9424d20c4b03"
>BTM.UpdatedReceivedMessage(BTM.Message).NID_BG != (FIRST X IN BTM.CurrentBaliseGroup).Telegram.NID_BG</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c0bed554-3138-4c67-a342-dec6ad0a32dc"
>BTM.CurrentBaliseGroup &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Verification"
 X="150"
 Y="670"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Max distance between Balises exceeded"
 Guid="7e6a9210-0745-4b37-b68f-e2ec8da372b0"
>
<Comment>When the previously detected Balise&apos;s position was further in rear of the train than the maximum distance between Balises, the following Balise in the group is missed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Max distance exceeded"
 Guid="03c505ea-2a74-4a49-a39a-49e282af800b"
>
<PreConditions>
<PreCondition
 Guid="2de86d72-0f6d-4b93-b0b6-31b88a21e1a4"
>BTM.CurrentBaliseGroup != []</PreCondition><PreCondition
 Guid="bcbaf299-4fb5-4823-af9f-f2b1a74d1582"
>Odometry.NominalDistance &gt; BTM.PrevBalisePosition + BTM.MaxDistBetweenBalises</PreCondition><PreCondition
 Guid="9ef66ef6-b578-4d26-b7c7-bc7dab3ace1c"
>NOT Available(BTM.UpdatedReceivedMessage(BTM.Message))</PreCondition></PreConditions>
<Actions>
<Action
 Guid="ba00487e-7656-41a0-9bd0-98cb43c0ceec"
>INSERT BTM.MissedBalise() 
IN BTM.CurrentBaliseGroup</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
